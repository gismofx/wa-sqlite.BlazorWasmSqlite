{"version":3,"file":"sqlite.min.js","mappings":"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","sources":["webpack://sqliteWasm/./node_modules/@xmtp/wa-sqlite/src/sqlite-constants.js","webpack://sqliteWasm/./node_modules/@xmtp/wa-sqlite/src/sqlite-api.js","webpack://sqliteWasm/webpack/bootstrap","webpack://sqliteWasm/webpack/runtime/define property getters","webpack://sqliteWasm/webpack/runtime/global","webpack://sqliteWasm/webpack/runtime/hasOwnProperty shorthand","webpack://sqliteWasm/webpack/runtime/make namespace object","webpack://sqliteWasm/webpack/runtime/publicPath","webpack://sqliteWasm/webpack/runtime/jsonp chunk loading","webpack://sqliteWasm/./node_modules/wa-sqlite/dist/wa-sqlite-async.mjs","webpack://sqliteWasm/./node_modules/wa-sqlite/src/sqlite-constants.js","webpack://sqliteWasm/./node_modules/wa-sqlite/src/sqlite-api.js","webpack://sqliteWasm/./node_modules/wa-sqlite/src/VFS.js","webpack://sqliteWasm/./node_modules/wa-sqlite/src/examples/WebLocks.js","webpack://sqliteWasm/./node_modules/wa-sqlite/src/examples/IDBContext.js","webpack://sqliteWasm/./node_modules/wa-sqlite/src/examples/IDBBatchAtomicVFS.js","webpack://sqliteWasm/./src/source.js"],"sourcesContent":["// Primary result codes.\n// https://www.sqlite.org/rescode.html\nexport const SQLITE_OK = 0;\nexport const SQLITE_ERROR = 1;\nexport const SQLITE_INTERNAL = 2;\nexport const SQLITE_PERM = 3;\nexport const SQLITE_ABORT = 4;\nexport const SQLITE_BUSY = 5;\nexport const SQLITE_LOCKED = 6;\nexport const SQLITE_NOMEM = 7;\nexport const SQLITE_READONLY = 8;\nexport const SQLITE_INTERRUPT = 9;\nexport const SQLITE_IOERR = 10;\nexport const SQLITE_CORRUPT = 11;\nexport const SQLITE_NOTFOUND = 12;\nexport const SQLITE_FULL = 13;\nexport const SQLITE_CANTOPEN = 14;\nexport const SQLITE_PROTOCOL = 15;\nexport const SQLITE_EMPTY = 16;\nexport const SQLITE_SCHEMA = 17;\nexport const SQLITE_TOOBIG = 18;\nexport const SQLITE_CONSTRAINT = 19;\nexport const SQLITE_MISMATCH = 20;\nexport const SQLITE_MISUSE = 21;\nexport const SQLITE_NOLFS = 22;\nexport const SQLITE_AUTH = 23;\nexport const SQLITE_FORMAT = 24;\nexport const SQLITE_RANGE = 25;\nexport const SQLITE_NOTADB = 26;\nexport const SQLITE_NOTICE = 27;\nexport const SQLITE_WARNING = 28;\nexport const SQLITE_ROW = 100;\nexport const SQLITE_DONE = 101;\n\n// Extended error codes.\nexport const SQLITE_IOERR_ACCESS = 3338;\nexport const SQLITE_IOERR_CHECKRESERVEDLOCK = 3594;\nexport const SQLITE_IOERR_CLOSE = 4106;\nexport const SQLITE_IOERR_DATA = 8202;\nexport const SQLITE_IOERR_DELETE = 2570;\nexport const SQLITE_IOERR_DELETE_NOENT = 5898;\nexport const SQLITE_IOERR_DIR_FSYNC = 1290;\nexport const SQLITE_IOERR_FSTAT = 1802;\nexport const SQLITE_IOERR_FSYNC = 1034;\nexport const SQLITE_IOERR_GETTEMPPATH = 6410;\nexport const SQLITE_IOERR_LOCK = 3850;\nexport const SQLITE_IOERR_NOMEM = 3082;\nexport const SQLITE_IOERR_READ = 266;\nexport const SQLITE_IOERR_RDLOCK = 2314;\nexport const SQLITE_IOERR_SEEK = 5642;\nexport const SQLITE_IOERR_SHORT_READ = 522;\nexport const SQLITE_IOERR_TRUNCATE = 1546;\nexport const SQLITE_IOERR_UNLOCK = 2058;\nexport const SQLITE_IOERR_VNODE = 6922;\nexport const SQLITE_IOERR_WRITE = 778;\nexport const SQLITE_IOERR_BEGIN_ATOMIC = 7434;\nexport const SQLITE_IOERR_COMMIT_ATOMIC = 7690;\nexport const SQLITE_IOERR_ROLLBACK_ATOMIC = 7946;\n\n// Other extended result codes.\nexport const SQLITE_CONSTRAINT_CHECK = 275;\nexport const SQLITE_CONSTRAINT_COMMITHOOK = 531;\nexport const SQLITE_CONSTRAINT_FOREIGNKEY = 787;\nexport const SQLITE_CONSTRAINT_FUNCTION = 1043;\nexport const SQLITE_CONSTRAINT_NOTNULL = 1299;\nexport const SQLITE_CONSTRAINT_PINNED = 2835;\nexport const SQLITE_CONSTRAINT_PRIMARYKEY = 1555;\nexport const SQLITE_CONSTRAINT_ROWID = 2579;\nexport const SQLITE_CONSTRAINT_TRIGGER = 1811;\nexport const SQLITE_CONSTRAINT_UNIQUE = 2067;\nexport const SQLITE_CONSTRAINT_VTAB = 2323;\n\n// Open flags.\n// https://www.sqlite.org/c3ref/c_open_autoproxy.html\nexport const SQLITE_OPEN_READONLY = 0x00000001;\nexport const SQLITE_OPEN_READWRITE = 0x00000002;\nexport const SQLITE_OPEN_CREATE = 0x00000004;\nexport const SQLITE_OPEN_DELETEONCLOSE = 0x00000008;\nexport const SQLITE_OPEN_EXCLUSIVE = 0x00000010;\nexport const SQLITE_OPEN_AUTOPROXY = 0x00000020;\nexport const SQLITE_OPEN_URI = 0x00000040;\nexport const SQLITE_OPEN_MEMORY = 0x00000080;\nexport const SQLITE_OPEN_MAIN_DB = 0x00000100;\nexport const SQLITE_OPEN_TEMP_DB = 0x00000200;\nexport const SQLITE_OPEN_TRANSIENT_DB = 0x00000400;\nexport const SQLITE_OPEN_MAIN_JOURNAL = 0x00000800;\nexport const SQLITE_OPEN_TEMP_JOURNAL = 0x00001000;\nexport const SQLITE_OPEN_SUBJOURNAL = 0x00002000;\nexport const SQLITE_OPEN_SUPER_JOURNAL = 0x00004000;\nexport const SQLITE_OPEN_NOMUTEX = 0x00008000;\nexport const SQLITE_OPEN_FULLMUTEX = 0x00010000;\nexport const SQLITE_OPEN_SHAREDCACHE = 0x00020000;\nexport const SQLITE_OPEN_PRIVATECACHE = 0x00040000;\nexport const SQLITE_OPEN_WAL = 0x00080000;\nexport const SQLITE_OPEN_NOFOLLOW = 0x01000000;\n\n// Locking levels.\n// https://www.sqlite.org/c3ref/c_lock_exclusive.html\nexport const SQLITE_LOCK_NONE = 0;\nexport const SQLITE_LOCK_SHARED = 1;\nexport const SQLITE_LOCK_RESERVED = 2;\nexport const SQLITE_LOCK_PENDING = 3;\nexport const SQLITE_LOCK_EXCLUSIVE = 4;\n\n// Device characteristics.\n// https://www.sqlite.org/c3ref/c_iocap_atomic.html\nexport const SQLITE_IOCAP_ATOMIC = 0x00000001;\nexport const SQLITE_IOCAP_ATOMIC512 = 0x00000002;\nexport const SQLITE_IOCAP_ATOMIC1K = 0x00000004;\nexport const SQLITE_IOCAP_ATOMIC2K = 0x00000008;\nexport const SQLITE_IOCAP_ATOMIC4K = 0x00000010;\nexport const SQLITE_IOCAP_ATOMIC8K = 0x00000020;\nexport const SQLITE_IOCAP_ATOMIC16K = 0x00000040;\nexport const SQLITE_IOCAP_ATOMIC32K = 0x00000080;\nexport const SQLITE_IOCAP_ATOMIC64K = 0x00000100;\nexport const SQLITE_IOCAP_SAFE_APPEND = 0x00000200;\nexport const SQLITE_IOCAP_SEQUENTIAL = 0x00000400;\nexport const SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN = 0x00000800;\nexport const SQLITE_IOCAP_POWERSAFE_OVERWRITE = 0x00001000;\nexport const SQLITE_IOCAP_IMMUTABLE = 0x00002000;\nexport const SQLITE_IOCAP_BATCH_ATOMIC = 0x00004000;\n\n// xAccess flags.\n// https://www.sqlite.org/c3ref/c_access_exists.html\nexport const SQLITE_ACCESS_EXISTS = 0;\nexport const SQLITE_ACCESS_READWRITE = 1;\nexport const SQLITE_ACCESS_READ = 2;\n\n// File control opcodes\n// https://www.sqlite.org/c3ref/c_fcntl_begin_atomic_write.html#sqlitefcntlbeginatomicwrite\nexport const SQLITE_FCNTL_LOCKSTATE = 1; \nexport const SQLITE_FCNTL_GET_LOCKPROXYFILE = 2; \nexport const SQLITE_FCNTL_SET_LOCKPROXYFILE = 3; \nexport const SQLITE_FCNTL_LAST_ERRNO = 4; \nexport const SQLITE_FCNTL_SIZE_HINT = 5; \nexport const SQLITE_FCNTL_CHUNK_SIZE = 6; \nexport const SQLITE_FCNTL_FILE_POINTER = 7; \nexport const SQLITE_FCNTL_SYNC_OMITTED = 8; \nexport const SQLITE_FCNTL_WIN32_AV_RETRY = 9; \nexport const SQLITE_FCNTL_PERSIST_WAL = 10; \nexport const SQLITE_FCNTL_OVERWRITE = 11; \nexport const SQLITE_FCNTL_VFSNAME = 12; \nexport const SQLITE_FCNTL_POWERSAFE_OVERWRITE = 13; \nexport const SQLITE_FCNTL_PRAGMA = 14; \nexport const SQLITE_FCNTL_BUSYHANDLER = 15; \nexport const SQLITE_FCNTL_TEMPFILENAME = 16; \nexport const SQLITE_FCNTL_MMAP_SIZE = 18; \nexport const SQLITE_FCNTL_TRACE = 19; \nexport const SQLITE_FCNTL_HAS_MOVED = 20; \nexport const SQLITE_FCNTL_SYNC = 21; \nexport const SQLITE_FCNTL_COMMIT_PHASETWO = 22; \nexport const SQLITE_FCNTL_WIN32_SET_HANDLE = 23; \nexport const SQLITE_FCNTL_WAL_BLOCK = 24; \nexport const SQLITE_FCNTL_ZIPVFS = 25; \nexport const SQLITE_FCNTL_RBU = 26; \nexport const SQLITE_FCNTL_VFS_POINTER = 27; \nexport const SQLITE_FCNTL_JOURNAL_POINTER = 28; \nexport const SQLITE_FCNTL_WIN32_GET_HANDLE = 29; \nexport const SQLITE_FCNTL_PDB = 30; \nexport const SQLITE_FCNTL_BEGIN_ATOMIC_WRITE = 31; \nexport const SQLITE_FCNTL_COMMIT_ATOMIC_WRITE = 32; \nexport const SQLITE_FCNTL_ROLLBACK_ATOMIC_WRITE = 33; \nexport const SQLITE_FCNTL_LOCK_TIMEOUT = 34; \nexport const SQLITE_FCNTL_DATA_VERSION = 35; \nexport const SQLITE_FCNTL_SIZE_LIMIT = 36; \nexport const SQLITE_FCNTL_CKPT_DONE = 37; \nexport const SQLITE_FCNTL_RESERVE_BYTES = 38; \nexport const SQLITE_FCNTL_CKPT_START = 39;\n\n// Fundamental datatypes.\n// https://www.sqlite.org/c3ref/c_blob.html\nexport const SQLITE_INTEGER = 1;\nexport const SQLITE_FLOAT = 2;\nexport const SQLITE_TEXT = 3;\nexport const SQLITE_BLOB = 4;\nexport const SQLITE_NULL = 5;\n\n// Special destructor behavior.\n// https://www.sqlite.org/c3ref/c_static.html\nexport const SQLITE_STATIC = 0;\nexport const SQLITE_TRANSIENT = -1;\n\n// Text encodings.\n// https://sqlite.org/c3ref/c_any.html\nexport const SQLITE_UTF8 = 1;     /* IMP: R-37514-35566 */\nexport const SQLITE_UTF16LE = 2;  /* IMP: R-03371-37637 */\nexport const SQLITE_UTF16BE = 3;  /* IMP: R-51971-34154 */\nexport const SQLITE_UTF16 = 4;    /* Use native byte order */\n\n// Module constraint ops.\nexport const SQLITE_INDEX_CONSTRAINT_EQ        = 2;\nexport const SQLITE_INDEX_CONSTRAINT_GT        = 4;\nexport const SQLITE_INDEX_CONSTRAINT_LE        = 8;\nexport const SQLITE_INDEX_CONSTRAINT_LT        = 16;\nexport const SQLITE_INDEX_CONSTRAINT_GE        = 32;\nexport const SQLITE_INDEX_CONSTRAINT_MATCH     = 64;\nexport const SQLITE_INDEX_CONSTRAINT_LIKE      = 65;\nexport const SQLITE_INDEX_CONSTRAINT_GLOB      = 66;\nexport const SQLITE_INDEX_CONSTRAINT_REGEXP    = 67;\nexport const SQLITE_INDEX_CONSTRAINT_NE        = 68;\nexport const SQLITE_INDEX_CONSTRAINT_ISNOT     = 69;\nexport const SQLITE_INDEX_CONSTRAINT_ISNOTNULL = 70;\nexport const SQLITE_INDEX_CONSTRAINT_ISNULL    = 71;\nexport const SQLITE_INDEX_CONSTRAINT_IS        = 72;\nexport const SQLITE_INDEX_CONSTRAINT_FUNCTION  = 150;\nexport const SQLITE_INDEX_SCAN_UNIQUE          = 1;  /* Scan visits at most = 1 row */\n\n// Function flags\nexport const SQLITE_DETERMINISTIC = 0x000000800;\nexport const SQLITE_DIRECTONLY    = 0x000080000;\nexport const SQLITE_SUBTYPE       = 0x000100000;\nexport const SQLITE_INNOCUOUS     = 0x000200000;\n\n// Sync flags\nexport const SQLITE_SYNC_NORMAL   = 0x00002;\nexport const SQLITE_SYNC_FULL     = 0x00003;\nexport const SQLITE_SYNC_DATAONLY = 0x00010;\n\n// Authorizer action codes\nexport const SQLITE_CREATE_INDEX        = 1;\nexport const SQLITE_CREATE_TABLE        = 2;\nexport const SQLITE_CREATE_TEMP_INDEX   = 3;\nexport const SQLITE_CREATE_TEMP_TABLE   = 4;\nexport const SQLITE_CREATE_TEMP_TRIGGER = 5;\nexport const SQLITE_CREATE_TEMP_VIEW    = 6;\nexport const SQLITE_CREATE_TRIGGER      = 7;\nexport const SQLITE_CREATE_VIEW         = 8;\nexport const SQLITE_DELETE              = 9;\nexport const SQLITE_DROP_INDEX          = 10;\nexport const SQLITE_DROP_TABLE          = 11;\nexport const SQLITE_DROP_TEMP_INDEX     = 12;\nexport const SQLITE_DROP_TEMP_TABLE     = 13;\nexport const SQLITE_DROP_TEMP_TRIGGER   = 14;\nexport const SQLITE_DROP_TEMP_VIEW      = 15;\nexport const SQLITE_DROP_TRIGGER        = 16;\nexport const SQLITE_DROP_VIEW           = 17;\nexport const SQLITE_INSERT              = 18;\nexport const SQLITE_PRAGMA              = 19;\nexport const SQLITE_READ                = 20;\nexport const SQLITE_SELECT              = 21;\nexport const SQLITE_TRANSACTION         = 22;\nexport const SQLITE_UPDATE              = 23;\nexport const SQLITE_ATTACH              = 24;\nexport const SQLITE_DETACH              = 25;\nexport const SQLITE_ALTER_TABLE         = 26;\nexport const SQLITE_REINDEX             = 27;\nexport const SQLITE_ANALYZE             = 28;\nexport const SQLITE_CREATE_VTABLE       = 29;\nexport const SQLITE_DROP_VTABLE         = 30;\nexport const SQLITE_FUNCTION            = 31;\nexport const SQLITE_SAVEPOINT           = 32;\nexport const SQLITE_COPY                = 0;\nexport const SQLITE_RECURSIVE           = 33;\n\n// Authorizer return codes\nexport const SQLITE_DENY   = 1;\nexport const SQLITE_IGNORE = 2;\n\n// Limit categories\nexport const SQLITE_LIMIT_LENGTH              = 0;\nexport const SQLITE_LIMIT_SQL_LENGTH          = 1;\nexport const SQLITE_LIMIT_COLUMN              = 2;\nexport const SQLITE_LIMIT_EXPR_DEPTH          = 3;\nexport const SQLITE_LIMIT_COMPOUND_SELECT     = 4;\nexport const SQLITE_LIMIT_VDBE_OP             = 5;\nexport const SQLITE_LIMIT_FUNCTION_ARG        = 6;\nexport const SQLITE_LIMIT_ATTACHED            = 7;\nexport const SQLITE_LIMIT_LIKE_PATTERN_LENGTH = 8;\nexport const SQLITE_LIMIT_VARIABLE_NUMBER     = 9;\nexport const SQLITE_LIMIT_TRIGGER_DEPTH       = 10;\nexport const SQLITE_LIMIT_WORKER_THREADS      = 11;\n\nexport const SQLITE_PREPARE_PERSISTENT = 0x01;\nexport const SQLITE_PREPARE_NORMALIZED = 0x02;\nexport const SQLITE_PREPARE_NO_VTAB = 0x04;","// Copyright 2021 Roy T. Hashimoto. All Rights Reserved.\n\nimport * as SQLite from './sqlite-constants.js';\nexport * from './sqlite-constants.js';\n\nconst MAX_INT64 = 0x7fffffffffffffffn;\nconst MIN_INT64 = -0x8000000000000000n;\n\nconst AsyncFunction = Object.getPrototypeOf(async function(){}).constructor;\n\nexport class SQLiteError extends Error {\n  constructor(message, code) {\n    super(message);\n    this.code = code;\n  }\n}\n\nconst async = true;\n\n/**\n * Builds a Javascript API from the Emscripten module. This API is still\n * low-level and closely corresponds to the C API exported by the module,\n * but differs in some specifics like throwing exceptions on errors.\n * @param {*} Module SQLite Emscripten module\n * @returns {SQLiteAPI}\n */\nexport function Factory(Module) {\n  /** @type {SQLiteAPI} */ const sqlite3 = {};\n\n  Module.retryOps = [];\n  const sqliteFreeAddress = Module._getSqliteFree();\n\n  // Allocate some space for 32-bit returned values.\n  const tmp = Module._malloc(8);\n  const tmpPtr = [tmp, tmp + 4];\n\n  // Convert a JS string to a C string. sqlite3_malloc is used to allocate\n  // memory (use sqlite3_free to deallocate).\n  function createUTF8(s) {\n    if (typeof s !== 'string') return 0;\n    const utf8 = new TextEncoder().encode(s);\n    const zts = Module._sqlite3_malloc(utf8.byteLength + 1);\n    Module.HEAPU8.set(utf8, zts);\n    Module.HEAPU8[zts + utf8.byteLength] = 0;\n    return zts;\n  }\n\n  /**\n   * Concatenate 32-bit numbers into a 64-bit (signed) BigInt.\n   * @param {number} lo32\n   * @param {number} hi32\n   * @returns {bigint}\n   */\n  function cvt32x2ToBigInt(lo32, hi32) {\n    return (BigInt(hi32) << 32n) | (BigInt(lo32) & 0xffffffffn);\n  }\n\n  /**\n   * Concatenate 32-bit numbers and return as number or BigInt, depending\n   * on the value.\n   * @param {number} lo32 \n   * @param {number} hi32 \n   * @returns {number|bigint}\n   */\n  const cvt32x2AsSafe = (function() {\n    const hiMax = BigInt(Number.MAX_SAFE_INTEGER) >> 32n;\n    const hiMin = BigInt(Number.MIN_SAFE_INTEGER) >> 32n;\n\n    return function(lo32, hi32) {\n      if (hi32 > hiMax || hi32 < hiMin) {\n        // Can't be expressed as a Number so use BigInt.\n        return cvt32x2ToBigInt(lo32, hi32);\n      } else {\n        // Combine the upper and lower 32-bit numbers. The complication is\n        // that lo32 is a signed integer which makes manipulating its bits\n        // a little tricky - the sign bit gets handled separately.\n        return (hi32 * 0x100000000) + (lo32 & 0x7fffffff) - (lo32 & 0x80000000);\n      }\n    }\n  })();\n\n  const databases = new Set();\n  function verifyDatabase(db) {\n    if (!databases.has(db)) {\n      throw new SQLiteError('not a database', SQLite.SQLITE_MISUSE);\n    }\n  }\n\n  const mapStmtToDB = new Map();\n  function verifyStatement(stmt) {\n    if (!mapStmtToDB.has(stmt)) {\n      throw new SQLiteError('not a statement', SQLite.SQLITE_MISUSE);\n    }\n  }\n\n  sqlite3.bind_collection = function(stmt, bindings) {\n    verifyStatement(stmt);\n    const isArray = Array.isArray(bindings);\n    const nBindings = sqlite3.bind_parameter_count(stmt);\n    for (let i = 1; i <= nBindings; ++i) {\n      const key = isArray ? i - 1 : sqlite3.bind_parameter_name(stmt, i);\n      const value = bindings[key];\n      if (value !== undefined) {\n        sqlite3.bind(stmt, i, value);\n      }\n    }\n    return SQLite.SQLITE_OK;\n  };\n\n  sqlite3.bind = function(stmt, i, value) {\n    verifyStatement(stmt);\n    switch (typeof value) {\n      case 'number':\n        if (value === (value | 0)) {\n          return sqlite3.bind_int(stmt, i, value);\n        } else {\n          return sqlite3.bind_double(stmt, i, value);\n        }\n      case 'string':\n        return sqlite3.bind_text(stmt, i, value);\n      default:\n        if (value instanceof Uint8Array || Array.isArray(value)) {\n          return sqlite3.bind_blob(stmt, i, value);\n        } else if (value === null) {\n          return sqlite3.bind_null(stmt, i);\n        } else if (typeof value === 'bigint') {\n          return sqlite3.bind_int64(stmt, i, value);\n        } else if (value === undefined) {\n          // Existing binding (or NULL) will be used.\n          return SQLite.SQLITE_NOTICE;\n        } else {\n          console.warn('unknown binding converted to null', value);\n          return sqlite3.bind_null(stmt, i);\n        }\n    }\n  };\n\n  sqlite3.bind_blob = (function() {\n    const fname = 'sqlite3_bind_blob';\n    const f = Module.cwrap(fname, ...decl('nnnnn:n'));\n    return function(stmt, i, value) {\n      verifyStatement(stmt);\n      // @ts-ignore\n      const byteLength = value.byteLength ?? value.length;\n      const ptr = Module._sqlite3_malloc(byteLength);\n      Module.HEAPU8.subarray(ptr).set(value);\n      const result = f(stmt, i, ptr, byteLength, sqliteFreeAddress);\n      return check(fname, result, mapStmtToDB.get(stmt));\n    };\n  })();\n\n  sqlite3.bind_parameter_count = (function() {\n    const fname = 'sqlite3_bind_parameter_count';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(stmt) {\n      verifyStatement(stmt);\n      const result = f(stmt);\n      return result;\n    };\n  })();\n\n  sqlite3.bind_double = (function() {\n    const fname = 'sqlite3_bind_double';\n    const f = Module.cwrap(fname, ...decl('nnn:n'));\n    return function(stmt, i, value) {\n      verifyStatement(stmt);\n      const result = f(stmt, i, value);\n      return check(fname, result, mapStmtToDB.get(stmt));\n    };\n  })();\n\n  sqlite3.bind_int = (function() {\n    const fname = 'sqlite3_bind_int';\n    const f = Module.cwrap(fname, ...decl('nnn:n'));\n    return function(stmt, i, value) {\n      verifyStatement(stmt);\n      if (value > 0x7fffffff || value < -0x80000000) return SQLite.SQLITE_RANGE;\n\n      const result = f(stmt, i, value);\n      return check(fname, result, mapStmtToDB.get(stmt));\n    };\n  })();\n\n  sqlite3.bind_int64 = (function() {\n    const fname = 'sqlite3_bind_int64';\n    const f = Module.cwrap(fname, ...decl('nnnn:n'));\n    return function(stmt, i, value) {\n      verifyStatement(stmt);\n      if (value > MAX_INT64 || value < MIN_INT64) return SQLite.SQLITE_RANGE;\n\n      const lo32 = value & 0xffffffffn;\n      const hi32 = value >> 32n;\n      const result = f(stmt, i, Number(lo32), Number(hi32));\n      return check(fname, result, mapStmtToDB.get(stmt));\n    };\n  })();\n\n  sqlite3.bind_null = (function() {\n    const fname = 'sqlite3_bind_null';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function(stmt, i) {\n      verifyStatement(stmt);\n      const result = f(stmt, i);\n      return check(fname, result, mapStmtToDB.get(stmt));\n    };\n  })();\n\n  sqlite3.bind_parameter_name = (function() {\n    const fname = 'sqlite3_bind_parameter_name';\n    const f = Module.cwrap(fname, ...decl('n:s'));\n    return function(stmt, i) {\n      verifyStatement(stmt);\n      const result = f(stmt, i);\n      return result;\n    };\n  })();\n\n  sqlite3.bind_text = (function() {\n    const fname = 'sqlite3_bind_text';\n    const f = Module.cwrap(fname, ...decl('nnnnn:n'));\n    return function(stmt, i, value) {\n      verifyStatement(stmt);\n      const ptr = createUTF8(value);\n      const result = f(stmt, i, ptr, -1, sqliteFreeAddress);\n      return check(fname, result, mapStmtToDB.get(stmt));\n    };\n  })();\n\n  sqlite3.changes = (function() {\n    const fname = 'sqlite3_changes';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(db) {\n      verifyDatabase(db);\n      const result = f(db);\n      return result;\n    };\n  })();\n\n  sqlite3.close = (function() {\n    const fname = 'sqlite3_close';\n    const f = Module.cwrap(fname, ...decl('n:n'), { async });\n    return async function(db) {\n      verifyDatabase(db);\n      const result = await f(db);\n      databases.delete(db);\n      return check(fname, result, db);\n    };\n  })();\n\n  sqlite3.column = function(stmt, iCol) {\n    verifyStatement(stmt);\n    const type = sqlite3.column_type(stmt, iCol);\n    switch (type) {\n      case SQLite.SQLITE_BLOB:\n        return sqlite3.column_blob(stmt, iCol);\n      case SQLite.SQLITE_FLOAT:\n        return sqlite3.column_double(stmt, iCol);\n      case SQLite.SQLITE_INTEGER:\n        const lo32 = sqlite3.column_int(stmt, iCol);\n        const hi32 = Module.getTempRet0();\n        return cvt32x2AsSafe(lo32, hi32);\n      case SQLite.SQLITE_NULL:\n        return null;\n      case SQLite.SQLITE_TEXT:\n        return sqlite3.column_text(stmt, iCol);\n      default:\n        throw new SQLiteError('unknown type', type);\n    }\n  };\n\n  sqlite3.column_blob = (function() {\n    const fname = 'sqlite3_column_blob';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function(stmt, iCol) {\n      verifyStatement(stmt);\n      const nBytes = sqlite3.column_bytes(stmt, iCol);\n      const address = f(stmt, iCol);\n      const result = Module.HEAPU8.subarray(address, address + nBytes);\n      return result;\n    };\n  })();\n\n  sqlite3.column_bytes = (function() {\n    const fname = 'sqlite3_column_bytes';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function(stmt, iCol) {\n      verifyStatement(stmt);\n      const result = f(stmt, iCol);\n      return result;\n    };\n  })();\n\n  sqlite3.column_count = (function() {\n    const fname = 'sqlite3_column_count';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(stmt) {\n      verifyStatement(stmt);\n      const result = f(stmt);\n      return result;\n    };\n  })();\n\n  sqlite3.column_double = (function() {\n    const fname = 'sqlite3_column_double';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function(stmt, iCol) {\n      verifyStatement(stmt);\n      const result = f(stmt, iCol);\n      return result;\n    };\n  })();\n\n  sqlite3.column_int = (function() {\n    // Retrieve int64 but use only the lower 32 bits. The upper 32-bits are\n    // accessible with Module.getTempRet0().\n    const fname = 'sqlite3_column_int64';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function(stmt, iCol) {\n      verifyStatement(stmt);\n      const result = f(stmt, iCol);\n      return result;\n    };\n  })();\n\n  sqlite3.column_int64 = (function() {\n    const fname = 'sqlite3_column_int64';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function(stmt, iCol) {\n      verifyStatement(stmt);\n      const lo32 = f(stmt, iCol);\n      const hi32 = Module.getTempRet0();\n      const result = cvt32x2ToBigInt(lo32, hi32);\n      return result;\n    };\n  })();\n\n  sqlite3.column_name = (function() {\n    const fname = 'sqlite3_column_name';\n    const f = Module.cwrap(fname, ...decl('nn:s'));\n    return function(stmt, iCol) {\n      verifyStatement(stmt);\n      const result = f(stmt, iCol);\n      return result;\n    };\n  })();\n\n  sqlite3.column_names = function(stmt) {\n    const columns = [];\n    const nColumns = sqlite3.column_count(stmt);\n    for (let i = 0; i < nColumns; ++i) {\n      columns.push(sqlite3.column_name(stmt, i));\n    }\n    return columns;\n  };\n\n  sqlite3.column_text = (function() {\n    const fname = 'sqlite3_column_text';\n    const f = Module.cwrap(fname, ...decl('nn:s'));\n    return function(stmt, iCol) {\n      verifyStatement(stmt);\n      const result = f(stmt, iCol);\n      return result;\n    };\n  })();\n\n  sqlite3.column_type = (function() {\n    const fname = 'sqlite3_column_type';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function(stmt, iCol) {\n      verifyStatement(stmt);\n      const result = f(stmt, iCol);\n      return result;\n    };\n  })();\n\n  sqlite3.create_function = function(db, zFunctionName, nArg, eTextRep, pApp, xFunc, xStep, xFinal) {\n    verifyDatabase(db);\n    \n    // Convert SQLite callback arguments to JavaScript-friendly arguments.\n    function adapt(f) {\n      return f instanceof AsyncFunction ?\n        (async (ctx, n, values) => f(ctx, Module.HEAP32.subarray(values / 4, values / 4 + n))) :\n        ((ctx, n, values) => f(ctx, Module.HEAP32.subarray(values / 4, values / 4 + n)));\n    }\n\n    const result = Module.create_function(\n      db,\n      zFunctionName,\n      nArg,\n      eTextRep,\n      pApp,\n      xFunc && adapt(xFunc),\n      xStep && adapt(xStep),\n      xFinal);\n    return check('sqlite3_create_function', result, db);\n  };\n\n  sqlite3.data_count = (function() {\n    const fname = 'sqlite3_data_count';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(stmt) {\n      verifyStatement(stmt);\n      const result = f(stmt);\n      return result;\n    };\n  })();\n\n  sqlite3.exec = async function(db, sql, callback) {\n    for await (const stmt of sqlite3.statements(db, sql)) {\n      let columns;\n      while (await sqlite3.step(stmt) === SQLite.SQLITE_ROW) {\n        if (callback) {\n          columns = columns ?? sqlite3.column_names(stmt);\n          const row = sqlite3.row(stmt);\n          await callback(row, columns);\n        }\n      }\n    }\n    return SQLite.SQLITE_OK;\n  };\n\n  sqlite3.finalize = (function() {\n    const fname = 'sqlite3_finalize';\n    const f = Module.cwrap(fname, ...decl('n:n'), { async });\n    return async function(stmt) {\n      const result = await f(stmt);\n      mapStmtToDB.delete(stmt)\n\n      // Don't throw on error here. Typically the error has already been\n      // thrown and finalize() is part of the cleanup.\n      return result;\n    };\n  })();\n\n  sqlite3.get_autocommit = (function() {\n    const fname = 'sqlite3_get_autocommit';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(db) {\n      const result = f(db);\n      return result;\n    };\n  })();\n\n  sqlite3.libversion = (function() {\n    const fname = 'sqlite3_libversion';\n    const f = Module.cwrap(fname, ...decl(':s'));\n    return function() {\n      const result = f();\n      return result;\n    };\n  })();\n\n  sqlite3.libversion_number = (function() {\n    const fname = 'sqlite3_libversion_number';\n    const f = Module.cwrap(fname, ...decl(':n'));\n    return function() {\n      const result = f();\n      return result;\n    };\n  })();\n\n  sqlite3.limit = (function() {\n    const fname = 'sqlite3_limit';\n    const f = Module.cwrap(fname, ...decl('nnn:n'));\n    return function(db, id, newVal) {\n      const result = f(db, id, newVal);\n      return result;\n    };\n  })();\n\n  sqlite3.open_v2 = (function() {\n    const fname = 'sqlite3_open_v2';\n    const f = Module.cwrap(fname, ...decl('snnn:n'), { async });\n    return async function(zFilename, flags, zVfs) {\n      flags = flags || SQLite.SQLITE_OPEN_CREATE | SQLite.SQLITE_OPEN_READWRITE;\n      zVfs = createUTF8(zVfs);\n      try {\n        // Allow retry operations.\n        const rc = await retry(() => f(zFilename, tmpPtr[0], flags, zVfs));\n\n        const db = Module.getValue(tmpPtr[0], '*');\n        databases.add(db);\n\n        Module.ccall('RegisterExtensionFunctions', 'void', ['number'], [db]);\n        check(fname, rc);\n        return db;\n      } finally {\n        Module._sqlite3_free(zVfs);\n      }\n    };\n  })();\n\n  sqlite3.progress_handler = function(db, nProgressOps, handler, userData) {\n    verifyDatabase(db);\n    Module.progress_handler(db, nProgressOps, handler, userData);\n  };;\n\n  sqlite3.reset = (function() {\n    const fname = 'sqlite3_reset';\n    const f = Module.cwrap(fname, ...decl('n:n'), { async });\n    return async function(stmt) {\n      verifyStatement(stmt);\n      const result = await f(stmt);\n      return check(fname, result, mapStmtToDB.get(stmt));\n    };\n  })();\n\n  sqlite3.result = function(context, value) {\n    switch (typeof value) {\n      case 'number':\n        if (value === (value | 0)) {\n          sqlite3.result_int(context, value);\n        } else {\n          sqlite3.result_double(context, value);\n        }\n        break;\n      case 'string':\n        sqlite3.result_text(context, value);\n        break;\n      default:\n        if (value instanceof Uint8Array || Array.isArray(value)) {\n          sqlite3.result_blob(context, value);\n        } else if (value === null) {\n          sqlite3.result_null(context);\n        } else if (typeof value === 'bigint') {\n          return sqlite3.result_int64(context, value);\n        } else {\n          console.warn('unknown result converted to null', value);\n          sqlite3.result_null(context);\n        }\n        break;\n    }\n\n  };\n\n  sqlite3.result_blob = (function() {\n    const fname = 'sqlite3_result_blob';\n    const f = Module.cwrap(fname, ...decl('nnnn:n'));\n    return function(context, value) {\n      // @ts-ignore\n      const byteLength = value.byteLength ?? value.length;\n      const ptr = Module._sqlite3_malloc(byteLength);\n      Module.HEAPU8.subarray(ptr).set(value);\n      f(context, ptr, byteLength, sqliteFreeAddress); // void return\n    };\n  })();\n\n  sqlite3.result_double = (function() {\n    const fname = 'sqlite3_result_double';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function(context, value) {\n      f(context, value); // void return\n    };\n  })();\n\n  sqlite3.result_int = (function() {\n    const fname = 'sqlite3_result_int';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function(context, value) {\n      f(context, value); // void return\n    };\n  })();\n\n  sqlite3.result_int64 = (function() {\n    const fname = 'sqlite3_result_int64';\n    const f = Module.cwrap(fname, ...decl('nnn:n'));\n    return function(context, value) {\n      if (value > MAX_INT64 || value < MIN_INT64) return SQLite.SQLITE_RANGE;\n\n      const lo32 = value & 0xffffffffn;\n      const hi32 = value >> 32n;\n      f(context, Number(lo32), Number(hi32)); // void return\n    };\n  })();\n\n  sqlite3.result_null = (function() {\n    const fname = 'sqlite3_result_null';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(context) {\n      f(context); // void return\n    };\n  })();\n\n  sqlite3.result_text = (function() {\n    const fname = 'sqlite3_result_text';\n    const f = Module.cwrap(fname, ...decl('nnnn:n'));\n    return function(context, value) {\n      const ptr = createUTF8(value);\n      f(context, ptr, -1, sqliteFreeAddress); // void return\n    };\n  })();\n\n  sqlite3.row = function(stmt) {\n    const row = [];\n    const nColumns = sqlite3.data_count(stmt);\n    for (let i = 0; i < nColumns; ++i) {\n      const value = sqlite3.column(stmt, i);\n\n      // Copy blob if aliasing volatile WebAssembly memory. This avoids an\n      // unnecessary copy if users monkey patch column_blob to copy.\n      // @ts-ignore\n      row.push(value?.buffer === Module.HEAPU8.buffer ? value.slice() : value);\n    }\n    return row;\n  };\n\n  sqlite3.set_authorizer = function(db, xAuth, pApp) {\n    verifyDatabase(db);\n\n    // Convert SQLite callback arguments to JavaScript-friendly arguments.\n    function cvtArgs(_, iAction, p3, p4, p5, p6) {\n      return [\n        _,\n        iAction,\n        Module.UTF8ToString(p3),\n        Module.UTF8ToString(p4),\n        Module.UTF8ToString(p5),\n        Module.UTF8ToString(p6)\n      ];\n    };\n    function adapt(f) {\n      return f instanceof AsyncFunction ?\n        (async (_, iAction, p3, p4, p5, p6) => f(cvtArgs(_, iAction, p3, p4, p5, p6))) :\n        ((_, iAction, p3, p4, p5, p6) => f(cvtArgs(_, iAction, p3, p4, p5, p6)));\n    }\n\n    const result = Module.set_authorizer(db, adapt(xAuth), pApp);\n    return check('sqlite3_set_authorizer', result, db);\n  };;\n  \n  sqlite3.sql = (function() {\n    const fname = 'sqlite3_sql';\n    const f = Module.cwrap(fname, ...decl('n:s'));\n    return function(stmt) {\n      verifyStatement(stmt);\n      const result = f(stmt);\n      return result;\n    };\n  })();\n\n  sqlite3.statements = function(db, sql, options = {}) {\n    const prepare = Module.cwrap(\n      'sqlite3_prepare_v3',\n      'number',\n      ['number', 'number', 'number', 'number', 'number', 'number'],\n      { async: true });\n\n    return (async function*() {\n      const onFinally = [];\n      try {\n        // Encode SQL string to UTF-8.\n        const utf8 = new TextEncoder().encode(sql);\n\n        // Copy encoded string to WebAssembly memory. The SQLite docs say\n        // zero-termination is a minor optimization so add room for that.\n        // Also add space for the statement handle and SQL tail pointer.\n        const allocSize = utf8.byteLength - (utf8.byteLength % 4) + 12;\n        const pzHead = Module._sqlite3_malloc(allocSize);\n        const pzEnd = pzHead + utf8.byteLength + 1;\n        onFinally.push(() => Module._sqlite3_free(pzHead));\n        Module.HEAPU8.set(utf8, pzHead);\n        Module.HEAPU8[pzEnd - 1] = 0;\n  \n        // Use extra space for the statement handle and SQL tail pointer.\n        const pStmt = pzHead + allocSize - 8;\n        const pzTail = pzHead + allocSize - 4;\n\n        // Ensure that statement handles are not leaked.\n        let stmt;\n        function maybeFinalize() {\n          if (stmt && !options.unscoped) {\n            sqlite3.finalize(stmt);\n          }\n          stmt = 0;\n        }\n        onFinally.push(maybeFinalize);\n        \n        // Loop over statements.\n        Module.setValue(pzTail, pzHead, '*');\n        do {\n          // Reclaim resources for the previous iteration.\n          maybeFinalize();\n\n          // Call sqlite3_prepare_v3() for the next statement.\n          // Allow retry operations.\n          const zTail = Module.getValue(pzTail, '*');\n          const rc = await retry(() => {\n            return prepare(\n              db,\n              zTail,\n              pzEnd - pzTail,\n              options.flags || 0,\n              pStmt,\n              pzTail);\n          });\n\n          if (rc !== SQLite.SQLITE_OK) {\n            check('sqlite3_prepare_v3', rc, db);\n          }\n          \n          stmt = Module.getValue(pStmt, '*');\n          if (stmt) {\n            mapStmtToDB.set(stmt, db);\n            yield stmt;\n          }\n        } while (stmt);\n      } finally {\n        while (onFinally.length) {\n          onFinally.pop()();\n        }\n      }\n    })();\n  };\n\n  sqlite3.step = (function() {\n    const fname = 'sqlite3_step';\n    const f = Module.cwrap(fname, ...decl('n:n'), { async });\n    return async function(stmt) {\n      verifyStatement(stmt);\n\n      // Allow retry operations.\n      const rc = await retry(() => f(stmt));\n\n      return check(fname, rc, mapStmtToDB.get(stmt), [SQLite.SQLITE_ROW, SQLite.SQLITE_DONE]);\n    };\n  })();\n\n  sqlite3.value = function(pValue) {\n    const type = sqlite3.value_type(pValue);\n    switch (type) {\n      case SQLite.SQLITE_BLOB:\n        return sqlite3.value_blob(pValue);\n      case SQLite.SQLITE_FLOAT:\n        return sqlite3.value_double(pValue);\n      case SQLite.SQLITE_INTEGER:\n        const lo32 = sqlite3.value_int(pValue);\n        const hi32 = Module.getTempRet0();\n        return cvt32x2AsSafe(lo32, hi32);\n      case SQLite.SQLITE_NULL:\n        return null;\n      case SQLite.SQLITE_TEXT:\n        return sqlite3.value_text(pValue);\n      default:\n        throw new SQLiteError('unknown type', type);\n    }\n  };\n\n  sqlite3.value_blob = (function() {\n    const fname = 'sqlite3_value_blob';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(pValue) {\n      const nBytes = sqlite3.value_bytes(pValue);\n      const address = f(pValue);\n      const result = Module.HEAPU8.subarray(address, address + nBytes);\n      return result;\n    };\n  })();\n\n  sqlite3.value_bytes = (function() {\n    const fname = 'sqlite3_value_bytes';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(pValue) {\n      const result = f(pValue);\n      return result;\n    };\n  })();\n\n  sqlite3.value_double = (function() {\n    const fname = 'sqlite3_value_double';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(pValue) {\n      const result = f(pValue);\n      return result;\n    };\n  })();\n\n  sqlite3.value_int = (function() {\n    const fname = 'sqlite3_value_int64';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(pValue) {\n      const result = f(pValue);\n      return result;\n    };\n  })();\n\n  sqlite3.value_int64 = (function() {\n    const fname = 'sqlite3_value_int64';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(pValue) {\n      const lo32 = f(pValue);\n      const hi32 = Module.getTempRet0();\n      const result = cvt32x2ToBigInt(lo32, hi32);\n      return result;\n    };\n  })();\n\n  sqlite3.value_text = (function() {\n    const fname = 'sqlite3_value_text';\n    const f = Module.cwrap(fname, ...decl('n:s'));\n    return function(pValue) {\n      const result = f(pValue);\n      return result;\n    };\n  })();\n\n  sqlite3.value_type = (function() {\n    const fname = 'sqlite3_value_type';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(pValue) {\n      const result = f(pValue);\n      return result;\n    };\n  })();\n\n  sqlite3.vfs_register = function(vfs, makeDefault) {\n    const result = Module.vfs_register(vfs, makeDefault);\n    return check('sqlite3_vfs_register', result);\n  };\n\n  function check(fname, result, db = null, allowed = [SQLite.SQLITE_OK]) {\n    if (allowed.includes(result)) return result;\n    const message = db ?\n      Module.ccall('sqlite3_errmsg', 'string', ['number'], [db]) :\n      fname;\n    throw new SQLiteError(message, result);\n  }\n\n  // This function is used to automatically retry failed calls that\n  // have pending retry operations that should allow the retry to\n  // succeed.\n  async function retry(f) {\n    let rc;\n    do {\n      // Wait for all pending retry operations to complete. This is\n      // normally empty on the first loop iteration.\n      if (Module.retryOps.length) {\n        await Promise.all(Module.retryOps);\n        Module.retryOps = [];\n      }\n      \n      rc = await f();\n\n      // Retry on failure with new pending retry operations.\n    } while (rc && Module.retryOps.length);\n    return rc;\n  }\n\n  return sqlite3;\n}\n\n// Helper function to use a more compact signature specification.\nfunction decl(s) {\n  const result = [];\n  const m = s.match(/([ns@]*):([nsv@])/);\n  switch (m[2]) {\n    case 'n': result.push('number'); break;\n    case 's': result.push('string'); break;\n    case 'v': result.push(null); break;\n  }\n\n  const args = [];\n  for (let c of m[1]) {\n    switch (c) {\n      case 'n': args.push('number'); break;\n      case 's': args.push('string'); break;\n    }\n  }\n  result.push(args);\n  return result;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","\nvar Module = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(moduleArg = {}) {\n\nvar f=moduleArg,aa,ba;f.ready=new Promise((a,b)=>{aa=a;ba=b});var ca=Object.assign({},f),da=\"./this.program\",ea=(a,b)=>{throw b;},fa=\"object\"==typeof window,ia=\"function\"==typeof importScripts,p=\"\",ja;\nif(fa||ia)ia?p=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(p=document.currentScript.src),_scriptDir&&(p=_scriptDir),0!==p.indexOf(\"blob:\")?p=p.substr(0,p.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):p=\"\",ia&&(ja=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)});var ka=f.print||console.log.bind(console),t=f.printErr||console.error.bind(console);Object.assign(f,ca);ca=null;f.thisProgram&&(da=f.thisProgram);\nf.quit&&(ea=f.quit);var la;f.wasmBinary&&(la=f.wasmBinary);var noExitRuntime=f.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&u(\"no native wasm support detected\");var ma,v=!1,na,w,y,oa,z,B,pa,qa;function ra(){var a=ma.buffer;f.HEAP8=w=new Int8Array(a);f.HEAP16=oa=new Int16Array(a);f.HEAPU8=y=new Uint8Array(a);f.HEAPU16=new Uint16Array(a);f.HEAP32=z=new Int32Array(a);f.HEAPU32=B=new Uint32Array(a);f.HEAPF32=pa=new Float32Array(a);f.HEAPF64=qa=new Float64Array(a)}var sa=[],ta=[],ua=[],va=[],wa=0;\nfunction xa(){var a=f.preRun.shift();sa.unshift(a)}var C=0,ya=null,za=null;function u(a){if(f.onAbort)f.onAbort(a);a=\"Aborted(\"+a+\")\";t(a);v=!0;na=1;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");ba(a);throw a;}function Aa(a){return a.startsWith(\"data:application/octet-stream;base64,\")}var Ba;if(f.locateFile){if(Ba=\"wa-sqlite-async.wasm\",!Aa(Ba)){var Ca=Ba;Ba=f.locateFile?f.locateFile(Ca,p):p+Ca}}else Ba=(new URL(\"wa-sqlite-async.wasm\",import.meta.url)).href;\nfunction Da(a){if(a==Ba&&la)return new Uint8Array(la);if(ja)return ja(a);throw\"both async and sync fetching of the wasm failed\";}function Ea(a){return la||!fa&&!ia||\"function\"!=typeof fetch?Promise.resolve().then(()=>Da(a)):fetch(a,{credentials:\"same-origin\"}).then(b=>{if(!b.ok)throw\"failed to load wasm binary file at '\"+a+\"'\";return b.arrayBuffer()}).catch(()=>Da(a))}\nfunction Fa(a,b,c){return Ea(a).then(d=>WebAssembly.instantiate(d,b)).then(d=>d).then(c,d=>{t(`failed to asynchronously prepare wasm: ${d}`);u(d)})}function Ga(a,b){var c=Ba;return la||\"function\"!=typeof WebAssembly.instantiateStreaming||Aa(c)||\"function\"!=typeof fetch?Fa(c,a,b):fetch(c,{credentials:\"same-origin\"}).then(d=>WebAssembly.instantiateStreaming(d,a).then(b,function(e){t(`wasm streaming compile failed: ${e}`);t(\"falling back to ArrayBuffer instantiation\");return Fa(c,a,b)}))}var D,F;\nfunction Ha(a){this.name=\"ExitStatus\";this.message=`Program terminated with exit(${a})`;this.status=a}var Ia=a=>{for(;0<a.length;)a.shift()(f)};function I(a,b=\"i8\"){b.endsWith(\"*\")&&(b=\"*\");switch(b){case \"i1\":return w[a>>0];case \"i8\":return w[a>>0];case \"i16\":return oa[a>>1];case \"i32\":return z[a>>2];case \"i64\":u(\"to do getValue(i64) use WASM_BIGINT\");case \"float\":return pa[a>>2];case \"double\":return qa[a>>3];case \"*\":return B[a>>2];default:u(`invalid type for getValue: ${b}`)}}\nfunction J(a,b,c=\"i8\"){c.endsWith(\"*\")&&(c=\"*\");switch(c){case \"i1\":w[a>>0]=b;break;case \"i8\":w[a>>0]=b;break;case \"i16\":oa[a>>1]=b;break;case \"i32\":z[a>>2]=b;break;case \"i64\":u(\"to do setValue(i64) use WASM_BIGINT\");case \"float\":pa[a>>2]=b;break;case \"double\":qa[a>>3]=b;break;case \"*\":B[a>>2]=b;break;default:u(`invalid type for setValue: ${c}`)}}\nvar Ja=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0,K=(a,b,c)=>{var d=b+c;for(c=b;a[c]&&!(c>=d);)++c;if(16<c-b&&a.buffer&&Ja)return Ja.decode(a.subarray(b,c));for(d=\"\";b<c;){var e=a[b++];if(e&128){var h=a[b++]&63;if(192==(e&224))d+=String.fromCharCode((e&31)<<6|h);else{var g=a[b++]&63;e=224==(e&240)?(e&15)<<12|h<<6|g:(e&7)<<18|h<<12|g<<6|a[b++]&63;65536>e?d+=String.fromCharCode(e):(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023))}}else d+=String.fromCharCode(e)}return d},\nKa=(a,b)=>{for(var c=0,d=a.length-1;0<=d;d--){var e=a[d];\".\"===e?a.splice(d,1):\"..\"===e?(a.splice(d,1),c++):c&&(a.splice(d,1),c--)}if(b)for(;c;c--)a.unshift(\"..\");return a},M=a=>{var b=\"/\"===a.charAt(0),c=\"/\"===a.substr(-1);(a=Ka(a.split(\"/\").filter(d=>!!d),!b).join(\"/\"))||b||(a=\".\");a&&c&&(a+=\"/\");return(b?\"/\":\"\")+a},La=a=>{var b=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/.exec(a).slice(1);a=b[0];b=b[1];if(!a&&!b)return\".\";b&&(b=b.substr(0,b.length-1));return a+b},Ma=a=>{if(\"/\"===\na)return\"/\";a=M(a);a=a.replace(/\\/$/,\"\");var b=a.lastIndexOf(\"/\");return-1===b?a:a.substr(b+1)},Na=()=>{if(\"object\"==typeof crypto&&\"function\"==typeof crypto.getRandomValues)return a=>crypto.getRandomValues(a);u(\"initRandomDevice\")},Oa=a=>(Oa=Na())(a);\nfunction Pa(){for(var a=\"\",b=!1,c=arguments.length-1;-1<=c&&!b;c--){b=0<=c?arguments[c]:\"/\";if(\"string\"!=typeof b)throw new TypeError(\"Arguments to path.resolve must be strings\");if(!b)return\"\";a=b+\"/\"+a;b=\"/\"===b.charAt(0)}a=Ka(a.split(\"/\").filter(d=>!!d),!b).join(\"/\");return(b?\"/\":\"\")+a||\".\"}\nvar Qa=[],Ra=a=>{for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);127>=d?b++:2047>=d?b+=2:55296<=d&&57343>=d?(b+=4,++c):b+=3}return b},Sa=(a,b,c,d)=>{if(!(0<d))return 0;var e=c;d=c+d-1;for(var h=0;h<a.length;++h){var g=a.charCodeAt(h);if(55296<=g&&57343>=g){var n=a.charCodeAt(++h);g=65536+((g&1023)<<10)|n&1023}if(127>=g){if(c>=d)break;b[c++]=g}else{if(2047>=g){if(c+1>=d)break;b[c++]=192|g>>6}else{if(65535>=g){if(c+2>=d)break;b[c++]=224|g>>12}else{if(c+3>=d)break;b[c++]=240|g>>18;b[c++]=128|g>>\n12&63}b[c++]=128|g>>6&63}b[c++]=128|g&63}}b[c]=0;return c-e},Ta=[];function Ua(a,b){Ta[a]={input:[],Tb:[],dc:b};Va(a,Wa)}\nvar Wa={open(a){var b=Ta[a.node.hc];if(!b)throw new N(43);a.Ub=b;a.seekable=!1},close(a){a.Ub.dc.kc(a.Ub)},kc(a){a.Ub.dc.kc(a.Ub)},read(a,b,c,d){if(!a.Ub||!a.Ub.dc.zc)throw new N(60);for(var e=0,h=0;h<d;h++){try{var g=a.Ub.dc.zc(a.Ub)}catch(n){throw new N(29);}if(void 0===g&&0===e)throw new N(6);if(null===g||void 0===g)break;e++;b[c+h]=g}e&&(a.node.timestamp=Date.now());return e},write(a,b,c,d){if(!a.Ub||!a.Ub.dc.tc)throw new N(60);try{for(var e=0;e<d;e++)a.Ub.dc.tc(a.Ub,b[c+e])}catch(h){throw new N(29);\n}d&&(a.node.timestamp=Date.now());return e}},Xa={zc(){a:{if(!Qa.length){var a=null;\"undefined\"!=typeof window&&\"function\"==typeof window.prompt?(a=window.prompt(\"Input: \"),null!==a&&(a+=\"\\n\")):\"function\"==typeof readline&&(a=readline(),null!==a&&(a+=\"\\n\"));if(!a){var b=null;break a}b=Array(Ra(a)+1);a=Sa(a,b,0,b.length);b.length=a;Qa=b}b=Qa.shift()}return b},tc(a,b){null===b||10===b?(ka(K(a.Tb,0)),a.Tb=[]):0!=b&&a.Tb.push(b)},kc(a){a.Tb&&0<a.Tb.length&&(ka(K(a.Tb,0)),a.Tb=[])},$c(){return{Wc:25856,\nYc:5,Vc:191,Xc:35387,Uc:[3,28,127,21,4,0,1,0,17,19,26,0,18,15,23,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},ad(){return 0},bd(){return[24,80]}},Ya={tc(a,b){null===b||10===b?(t(K(a.Tb,0)),a.Tb=[]):0!=b&&a.Tb.push(b)},kc(a){a.Tb&&0<a.Tb.length&&(t(K(a.Tb,0)),a.Tb=[])}};function Za(a,b){var c=a.Pb?a.Pb.length:0;c>=b||(b=Math.max(b,c*(1048576>c?2:1.125)>>>0),0!=c&&(b=Math.max(b,256)),c=a.Pb,a.Pb=new Uint8Array(b),0<a.Rb&&a.Pb.set(c.subarray(0,a.Rb),0))}\nvar O={Xb:null,Wb(){return O.createNode(null,\"/\",16895,0)},createNode(a,b,c,d){if(24576===(c&61440)||4096===(c&61440))throw new N(63);O.Xb||(O.Xb={dir:{node:{Vb:O.Eb.Vb,Sb:O.Eb.Sb,ec:O.Eb.ec,lc:O.Eb.lc,Dc:O.Eb.Dc,qc:O.Eb.qc,oc:O.Eb.oc,Cc:O.Eb.Cc,pc:O.Eb.pc},stream:{ac:O.Ob.ac}},file:{node:{Vb:O.Eb.Vb,Sb:O.Eb.Sb},stream:{ac:O.Ob.ac,read:O.Ob.read,write:O.Ob.write,wc:O.Ob.wc,mc:O.Ob.mc,nc:O.Ob.nc}},link:{node:{Vb:O.Eb.Vb,Sb:O.Eb.Sb,ic:O.Eb.ic},stream:{}},xc:{node:{Vb:O.Eb.Vb,Sb:O.Eb.Sb},stream:$a}});\nc=ab(a,b,c,d);P(c.mode)?(c.Eb=O.Xb.dir.node,c.Ob=O.Xb.dir.stream,c.Pb={}):32768===(c.mode&61440)?(c.Eb=O.Xb.file.node,c.Ob=O.Xb.file.stream,c.Rb=0,c.Pb=null):40960===(c.mode&61440)?(c.Eb=O.Xb.link.node,c.Ob=O.Xb.link.stream):8192===(c.mode&61440)&&(c.Eb=O.Xb.xc.node,c.Ob=O.Xb.xc.stream);c.timestamp=Date.now();a&&(a.Pb[b]=c,a.timestamp=c.timestamp);return c},Zc(a){return a.Pb?a.Pb.subarray?a.Pb.subarray(0,a.Rb):new Uint8Array(a.Pb):new Uint8Array(0)},Eb:{Vb(a){var b={};b.Jc=8192===(a.mode&61440)?a.id:\n1;b.Ac=a.id;b.mode=a.mode;b.Pc=1;b.uid=0;b.Mc=0;b.hc=a.hc;P(a.mode)?b.size=4096:32768===(a.mode&61440)?b.size=a.Rb:40960===(a.mode&61440)?b.size=a.link.length:b.size=0;b.Fc=new Date(a.timestamp);b.Oc=new Date(a.timestamp);b.Ic=new Date(a.timestamp);b.Gc=4096;b.Hc=Math.ceil(b.size/b.Gc);return b},Sb(a,b){void 0!==b.mode&&(a.mode=b.mode);void 0!==b.timestamp&&(a.timestamp=b.timestamp);if(void 0!==b.size&&(b=b.size,a.Rb!=b))if(0==b)a.Pb=null,a.Rb=0;else{var c=a.Pb;a.Pb=new Uint8Array(b);c&&a.Pb.set(c.subarray(0,\nMath.min(b,a.Rb)));a.Rb=b}},ec(){throw bb[44];},lc(a,b,c,d){return O.createNode(a,b,c,d)},Dc(a,b,c){if(P(a.mode)){try{var d=cb(b,c)}catch(h){}if(d)for(var e in d.Pb)throw new N(55);}delete a.parent.Pb[a.name];a.parent.timestamp=Date.now();a.name=c;b.Pb[c]=a;b.timestamp=a.parent.timestamp;a.parent=b},qc(a,b){delete a.Pb[b];a.timestamp=Date.now()},oc(a,b){var c=cb(a,b),d;for(d in c.Pb)throw new N(55);delete a.Pb[b];a.timestamp=Date.now()},Cc(a){var b=[\".\",\"..\"],c;for(c in a.Pb)a.Pb.hasOwnProperty(c)&&\nb.push(c);return b},pc(a,b,c){a=O.createNode(a,b,41471,0);a.link=c;return a},ic(a){if(40960!==(a.mode&61440))throw new N(28);return a.link}},Ob:{read(a,b,c,d,e){var h=a.node.Pb;if(e>=a.node.Rb)return 0;a=Math.min(a.node.Rb-e,d);if(8<a&&h.subarray)b.set(h.subarray(e,e+a),c);else for(d=0;d<a;d++)b[c+d]=h[e+d];return a},write(a,b,c,d,e,h){b.buffer===w.buffer&&(h=!1);if(!d)return 0;a=a.node;a.timestamp=Date.now();if(b.subarray&&(!a.Pb||a.Pb.subarray)){if(h)return a.Pb=b.subarray(c,c+d),a.Rb=d;if(0===\na.Rb&&0===e)return a.Pb=b.slice(c,c+d),a.Rb=d;if(e+d<=a.Rb)return a.Pb.set(b.subarray(c,c+d),e),d}Za(a,e+d);if(a.Pb.subarray&&b.subarray)a.Pb.set(b.subarray(c,c+d),e);else for(h=0;h<d;h++)a.Pb[e+h]=b[c+h];a.Rb=Math.max(a.Rb,e+d);return d},ac(a,b,c){1===c?b+=a.position:2===c&&32768===(a.node.mode&61440)&&(b+=a.node.Rb);if(0>b)throw new N(28);return b},wc(a,b,c){Za(a.node,b+c);a.node.Rb=Math.max(a.node.Rb,b+c)},mc(a,b,c,d,e){if(32768!==(a.node.mode&61440))throw new N(43);a=a.node.Pb;if(e&2||a.buffer!==\nw.buffer){if(0<c||c+b<a.length)a.subarray?a=a.subarray(c,c+b):a=Array.prototype.slice.call(a,c,c+b);c=!0;b=65536*Math.ceil(b/65536);(e=db(65536,b))?(y.fill(0,e,e+b),b=e):b=0;if(!b)throw new N(48);w.set(a,b)}else c=!1,b=a.byteOffset;return{Qc:b,Ec:c}},nc(a,b,c,d){O.Ob.write(a,b,0,d,c,!1);return 0}}},eb=(a,b)=>{var c=0;a&&(c|=365);b&&(c|=146);return c},fb=null,gb={},hb=[],ib=1,Q=null,jb=!0,N=null,bb={};\nfunction R(a,b={}){a=Pa(a);if(!a)return{path:\"\",node:null};b=Object.assign({yc:!0,uc:0},b);if(8<b.uc)throw new N(32);a=a.split(\"/\").filter(g=>!!g);for(var c=fb,d=\"/\",e=0;e<a.length;e++){var h=e===a.length-1;if(h&&b.parent)break;c=cb(c,a[e]);d=M(d+\"/\"+a[e]);c.bc&&(!h||h&&b.yc)&&(c=c.bc.root);if(!h||b.$b)for(h=0;40960===(c.mode&61440);)if(c=kb(d),d=Pa(La(d),c),c=R(d,{uc:b.uc+1}).node,40<h++)throw new N(32);}return{path:d,node:c}}\nfunction lb(a){for(var b;;){if(a===a.parent)return a=a.Wb.Bc,b?\"/\"!==a[a.length-1]?`${a}/${b}`:a+b:a;b=b?`${a.name}/${b}`:a.name;a=a.parent}}function mb(a,b){for(var c=0,d=0;d<b.length;d++)c=(c<<5)-c+b.charCodeAt(d)|0;return(a+c>>>0)%Q.length}function nb(a){var b=mb(a.parent.id,a.name);if(Q[b]===a)Q[b]=a.cc;else for(b=Q[b];b;){if(b.cc===a){b.cc=a.cc;break}b=b.cc}}\nfunction cb(a,b){var c;if(c=(c=ob(a,\"x\"))?c:a.Eb.ec?0:2)throw new N(c,a);for(c=Q[mb(a.id,b)];c;c=c.cc){var d=c.name;if(c.parent.id===a.id&&d===b)return c}return a.Eb.ec(a,b)}function ab(a,b,c,d){a=new pb(a,b,c,d);b=mb(a.parent.id,a.name);a.cc=Q[b];return Q[b]=a}function P(a){return 16384===(a&61440)}function qb(a){var b=[\"r\",\"w\",\"rw\"][a&3];a&512&&(b+=\"w\");return b}\nfunction ob(a,b){if(jb)return 0;if(!b.includes(\"r\")||a.mode&292){if(b.includes(\"w\")&&!(a.mode&146)||b.includes(\"x\")&&!(a.mode&73))return 2}else return 2;return 0}function rb(a,b){try{return cb(a,b),20}catch(c){}return ob(a,\"wx\")}function sb(a,b,c){try{var d=cb(a,b)}catch(e){return e.Qb}if(a=ob(a,\"wx\"))return a;if(c){if(!P(d.mode))return 54;if(d===d.parent||\"/\"===lb(d))return 10}else if(P(d.mode))return 31;return 0}function tb(){for(var a=0;4096>=a;a++)if(!hb[a])return a;throw new N(33);}\nfunction S(a){a=hb[a];if(!a)throw new N(8);return a}function ub(a,b=-1){vb||(vb=function(){this.jc={}},vb.prototype={},Object.defineProperties(vb.prototype,{object:{get(){return this.node},set(c){this.node=c}},flags:{get(){return this.jc.flags},set(c){this.jc.flags=c}},position:{get(){return this.jc.position},set(c){this.jc.position=c}}}));a=Object.assign(new vb,a);-1==b&&(b=tb());a.Yb=b;return hb[b]=a}var $a={open(a){a.Ob=gb[a.node.hc].Ob;a.Ob.open&&a.Ob.open(a)},ac(){throw new N(70);}};\nfunction Va(a,b){gb[a]={Ob:b}}function wb(a,b){var c=\"/\"===b,d=!b;if(c&&fb)throw new N(10);if(!c&&!d){var e=R(b,{yc:!1});b=e.path;e=e.node;if(e.bc)throw new N(10);if(!P(e.mode))throw new N(54);}b={type:a,dd:{},Bc:b,Nc:[]};a=a.Wb(b);a.Wb=b;b.root=a;c?fb=a:e&&(e.bc=b,e.Wb&&e.Wb.Nc.push(b))}function xb(a,b,c){var d=R(a,{parent:!0}).node;a=Ma(a);if(!a||\".\"===a||\"..\"===a)throw new N(28);var e=rb(d,a);if(e)throw new N(e);if(!d.Eb.lc)throw new N(63);return d.Eb.lc(d,a,b,c)}\nfunction T(a,b){return xb(a,(void 0!==b?b:511)&1023|16384,0)}function yb(a,b,c){\"undefined\"==typeof c&&(c=b,b=438);xb(a,b|8192,c)}function zb(a,b){if(!Pa(a))throw new N(44);var c=R(b,{parent:!0}).node;if(!c)throw new N(44);b=Ma(b);var d=rb(c,b);if(d)throw new N(d);if(!c.Eb.pc)throw new N(63);c.Eb.pc(c,b,a)}function Ab(a){var b=R(a,{parent:!0}).node;a=Ma(a);var c=cb(b,a),d=sb(b,a,!0);if(d)throw new N(d);if(!b.Eb.oc)throw new N(63);if(c.bc)throw new N(10);b.Eb.oc(b,a);nb(c)}\nfunction kb(a){a=R(a).node;if(!a)throw new N(44);if(!a.Eb.ic)throw new N(28);return Pa(lb(a.parent),a.Eb.ic(a))}function Bb(a,b){a=R(a,{$b:!b}).node;if(!a)throw new N(44);if(!a.Eb.Vb)throw new N(63);return a.Eb.Vb(a)}function Cb(a){return Bb(a,!0)}function Db(a,b){a=\"string\"==typeof a?R(a,{$b:!0}).node:a;if(!a.Eb.Sb)throw new N(63);a.Eb.Sb(a,{mode:b&4095|a.mode&-4096,timestamp:Date.now()})}\nfunction Eb(a,b){if(0>b)throw new N(28);a=\"string\"==typeof a?R(a,{$b:!0}).node:a;if(!a.Eb.Sb)throw new N(63);if(P(a.mode))throw new N(31);if(32768!==(a.mode&61440))throw new N(28);var c=ob(a,\"w\");if(c)throw new N(c);a.Eb.Sb(a,{size:b,timestamp:Date.now()})}\nfunction Fb(a,b,c){if(\"\"===a)throw new N(44);if(\"string\"==typeof b){var d={r:0,\"r+\":2,w:577,\"w+\":578,a:1089,\"a+\":1090}[b];if(\"undefined\"==typeof d)throw Error(`Unknown file open mode: ${b}`);b=d}c=b&64?(\"undefined\"==typeof c?438:c)&4095|32768:0;if(\"object\"==typeof a)var e=a;else{a=M(a);try{e=R(a,{$b:!(b&131072)}).node}catch(h){}}d=!1;if(b&64)if(e){if(b&128)throw new N(20);}else e=xb(a,c,0),d=!0;if(!e)throw new N(44);8192===(e.mode&61440)&&(b&=-513);if(b&65536&&!P(e.mode))throw new N(54);if(!d&&(c=\ne?40960===(e.mode&61440)?32:P(e.mode)&&(\"r\"!==qb(b)||b&512)?31:ob(e,qb(b)):44))throw new N(c);b&512&&!d&&Eb(e,0);b&=-131713;e=ub({node:e,path:lb(e),flags:b,seekable:!0,position:0,Ob:e.Ob,Tc:[],error:!1});e.Ob.open&&e.Ob.open(e);!f.logReadFiles||b&1||(Gb||(Gb={}),a in Gb||(Gb[a]=1));return e}function Hb(a,b,c){if(null===a.Yb)throw new N(8);if(!a.seekable||!a.Ob.ac)throw new N(70);if(0!=c&&1!=c&&2!=c)throw new N(28);a.position=a.Ob.ac(a,b,c);a.Tc=[]}\nfunction Ib(){N||(N=function(a,b){this.name=\"ErrnoError\";this.node=b;this.Rc=function(c){this.Qb=c};this.Rc(a);this.message=\"FS error\"},N.prototype=Error(),N.prototype.constructor=N,[44].forEach(a=>{bb[a]=new N(a);bb[a].stack=\"<generic error, no stack>\"}))}var Jb;\nfunction Kb(a,b,c){a=M(\"/dev/\"+a);var d=eb(!!b,!!c);Lb||(Lb=64);var e=Lb++<<8|0;Va(e,{open(h){h.seekable=!1},close(){c&&c.buffer&&c.buffer.length&&c(10)},read(h,g,n,k){for(var l=0,q=0;q<k;q++){try{var m=b()}catch(r){throw new N(29);}if(void 0===m&&0===l)throw new N(6);if(null===m||void 0===m)break;l++;g[n+q]=m}l&&(h.node.timestamp=Date.now());return l},write(h,g,n,k){for(var l=0;l<k;l++)try{c(g[n+l])}catch(q){throw new N(29);}k&&(h.node.timestamp=Date.now());return l}});yb(a,d,e)}var Lb,U={},vb,Gb;\nfunction Mb(a,b,c){if(\"/\"===b.charAt(0))return b;a=-100===a?\"/\":S(a).path;if(0==b.length){if(!c)throw new N(44);return a}return M(a+\"/\"+b)}\nfunction Nb(a,b,c){try{var d=a(b)}catch(h){if(h&&h.node&&M(b)!==M(lb(h.node)))return-54;throw h;}z[c>>2]=d.Jc;z[c+4>>2]=d.mode;B[c+8>>2]=d.Pc;z[c+12>>2]=d.uid;z[c+16>>2]=d.Mc;z[c+20>>2]=d.hc;F=[d.size>>>0,(D=d.size,1<=+Math.abs(D)?0<D?+Math.floor(D/4294967296)>>>0:~~+Math.ceil((D-+(~~D>>>0))/4294967296)>>>0:0)];z[c+24>>2]=F[0];z[c+28>>2]=F[1];z[c+32>>2]=4096;z[c+36>>2]=d.Hc;a=d.Fc.getTime();b=d.Oc.getTime();var e=d.Ic.getTime();F=[Math.floor(a/1E3)>>>0,(D=Math.floor(a/1E3),1<=+Math.abs(D)?0<D?+Math.floor(D/\n4294967296)>>>0:~~+Math.ceil((D-+(~~D>>>0))/4294967296)>>>0:0)];z[c+40>>2]=F[0];z[c+44>>2]=F[1];B[c+48>>2]=a%1E3*1E3;F=[Math.floor(b/1E3)>>>0,(D=Math.floor(b/1E3),1<=+Math.abs(D)?0<D?+Math.floor(D/4294967296)>>>0:~~+Math.ceil((D-+(~~D>>>0))/4294967296)>>>0:0)];z[c+56>>2]=F[0];z[c+60>>2]=F[1];B[c+64>>2]=b%1E3*1E3;F=[Math.floor(e/1E3)>>>0,(D=Math.floor(e/1E3),1<=+Math.abs(D)?0<D?+Math.floor(D/4294967296)>>>0:~~+Math.ceil((D-+(~~D>>>0))/4294967296)>>>0:0)];z[c+72>>2]=F[0];z[c+76>>2]=F[1];B[c+80>>2]=\ne%1E3*1E3;F=[d.Ac>>>0,(D=d.Ac,1<=+Math.abs(D)?0<D?+Math.floor(D/4294967296)>>>0:~~+Math.ceil((D-+(~~D>>>0))/4294967296)>>>0:0)];z[c+88>>2]=F[0];z[c+92>>2]=F[1];return 0}var Ob=void 0;function Pb(){var a=z[Ob>>2];Ob+=4;return a}\nvar Qb=(a,b)=>b+2097152>>>0<4194305-!!a?(a>>>0)+4294967296*b:NaN,Rb=[0,31,60,91,121,152,182,213,244,274,305,335],Sb=[0,31,59,90,120,151,181,212,243,273,304,334],Ub=a=>{var b=Ra(a)+1,c=Tb(b);c&&Sa(a,y,c,b);return c},Vb={},Xb=()=>{if(!Wb){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:da||\"./this.program\"},b;for(b in Vb)void 0===Vb[b]?delete a[b]:a[b]=Vb[b];\nvar c=[];for(b in a)c.push(`${b}=${a[b]}`);Wb=c}return Wb},Wb;function Yb(){}function Zb(){}function $b(){}function ac(){}function bc(){}function cc(){}function dc(){}function ec(){}function fc(){}function gc(){}function hc(){}function ic(){}function jc(){}function kc(){}function lc(){}function mc(){}function nc(){}function oc(){}function pc(){}function qc(){}function rc(){}function sc(){}function tc(){}function uc(){}function vc(){}function wc(){}function xc(){}function yc(){}function zc(){}\nfunction Ac(){}function Bc(){}function Cc(){}function Dc(){}function Ec(){}function Fc(){}function Gc(){}function Hc(){}function Ic(){}function Jc(){}function Kc(){}var Lc=a=>{na=a;if(!(noExitRuntime||0<wa)){if(f.onExit)f.onExit(a);v=!0}ea(a,new Ha(a))},Mc=a=>{a instanceof Ha||\"unwind\"==a||ea(1,a)},Nc=a=>{try{a()}catch(b){u(b)}};\nfunction Oc(a){var b={},c;for(c in a)(function(d){var e=a[d];b[d]=\"function\"==typeof e?function(){Pc.push(d);try{return e.apply(null,arguments)}finally{v||(Pc.pop()===d||u(),V&&1===X&&0===Pc.length&&(X=0,Nc(Qc),\"undefined\"!=typeof Fibers&&Fibers.ed()))}}:e})(c);return b}var X=0,V=null,Rc=0,Pc=[],Sc={},Tc={},Uc=0,Vc=null,Wc=[];function Xc(){return new Promise((a,b)=>{Vc={resolve:a,reject:b}})}\nfunction Yc(){var a=Tb(16396),b=a+12;B[a>>2]=b;B[a+4>>2]=b+16384;b=Pc[0];var c=Sc[b];void 0===c&&(c=Uc++,Sc[b]=c,Tc[c]=b);z[a+8>>2]=c;return a}\nfunction Zc(a){if(!v){if(0===X){var b=!1,c=!1;a((d=0)=>{if(!v&&(Rc=d,b=!0,c)){X=2;Nc(()=>$c(V));\"undefined\"!=typeof Browser&&Browser.sc.Lc&&Browser.sc.resume();d=!1;try{var e=(0,Y[Tc[z[V+8>>2]]])()}catch(n){e=n,d=!0}var h=!1;if(!V){var g=Vc;g&&(Vc=null,(d?g.reject:g.resolve)(e),h=!0)}if(d&&!h)throw e;}});c=!0;b||(X=1,V=Yc(),\"undefined\"!=typeof Browser&&Browser.sc.Lc&&Browser.sc.pause(),Nc(()=>ad(V)))}else 2===X?(X=0,Nc(bd),cd(V),V=null,Wc.forEach(d=>{if(!v)try{if(d(),!(noExitRuntime||0<wa))try{na=\nd=na,Lc(d)}catch(e){Mc(e)}}catch(e){Mc(e)}})):u(`invalid state: ${X}`);return Rc}}function dd(a){return Zc(b=>{a().then(b)})}\nvar ed={},Z=(a,b,c,d,e)=>{function h(m){--wa;0!==k&&fd(k);return\"string\"===b?m?K(y,m):\"\":\"boolean\"===b?!!m:m}var g={string:m=>{var r=0;if(null!==m&&void 0!==m&&0!==m){r=Ra(m)+1;var x=gd(r);Sa(m,y,x,r);r=x}return r},array:m=>{var r=gd(m.length);w.set(m,r);return r}};a=f[\"_\"+a];var n=[],k=0;if(d)for(var l=0;l<d.length;l++){var q=g[c[l]];q?(0===k&&(k=hd()),n[l]=q(d[l])):n[l]=d[l]}c=V;d=a.apply(null,n);e=e&&e.async;wa+=1;if(V!=c)return Xc().then(h);d=h(d);return e?Promise.resolve(d):d};\nfunction pb(a,b,c,d){a||(a=this);this.parent=a;this.Wb=a.Wb;this.bc=null;this.id=ib++;this.name=b;this.mode=c;this.Eb={};this.Ob={};this.hc=d}Object.defineProperties(pb.prototype,{read:{get:function(){return 365===(this.mode&365)},set:function(a){a?this.mode|=365:this.mode&=-366}},write:{get:function(){return 146===(this.mode&146)},set:function(a){a?this.mode|=146:this.mode&=-147}}});Ib();Q=Array(4096);wb(O,\"/\");T(\"/tmp\");T(\"/home\");T(\"/home/web_user\");\n(function(){T(\"/dev\");Va(259,{read:()=>0,write:(d,e,h,g)=>g});yb(\"/dev/null\",259);Ua(1280,Xa);Ua(1536,Ya);yb(\"/dev/tty\",1280);yb(\"/dev/tty1\",1536);var a=new Uint8Array(1024),b=0,c=()=>{0===b&&(b=Oa(a).byteLength);return a[--b]};Kb(\"random\",c);Kb(\"urandom\",c);T(\"/dev/shm\");T(\"/dev/shm/tmp\")})();\n(function(){T(\"/proc\");var a=T(\"/proc/self\");T(\"/proc/self/fd\");wb({Wb(){var b=ab(a,\"fd\",16895,73);b.Eb={ec(c,d){var e=S(+d);c={parent:null,Wb:{Bc:\"fake\"},Eb:{ic:()=>e.path}};return c.parent=c}};return b}},\"/proc/self/fd\")})();\n(function(){const a=new Map;f.setAuthorizer=function(b,c,d){c?a.set(b,{f:c,vc:d}):a.delete(b);return Z(\"set_authorizer\",\"number\",[\"number\"],[b])};Yb=function(b,c,d,e,h,g){if(a.has(b)){const {f:n,vc:k}=a.get(b);return n(k,c,d?d?K(y,d):\"\":null,e?e?K(y,e):\"\":null,h?h?K(y,h):\"\":null,g?g?K(y,g):\"\":null)}return 0}})();\n(function(){function a(d,e){const h=[];for(let g=0;0!=d[e+g];++g){if(1E3<g)throw Error(\"C-string never terminated after 1k characters\");h.push(d[e+g])}return String.fromCharCode(...h)}const b=new Map,c=new Map;f.createFunction=function(d,e,h,g,n,k){const l=b.size;b.set(l,{f:k,Zb:n});return Z(\"create_function\",\"number\",\"number string number number number number\".split(\" \"),[d,e,h,g,l,0])};f.createAggregate=function(d,e,h,g,n,k,l){const q=b.size;b.set(q,{step:k,Kc:l,Zb:n});return Z(\"create_function\",\n\"number\",\"number string number number number number\".split(\" \"),[d,e,h,g,q,1])};f.getFunctionUserData=function(d){return c.get(d)};f.updateHook=function(d,e){const h=b.size;b.set(h,e);return Z(\"update_hook\",\"void\",[\"number\",\"number\"],[d,h])};$b=function(d,e,h,g){d=b.get(d);c.set(e,d.Zb);d.f(e,new Uint32Array(y.buffer,g,h));c.delete(e)};bc=function(d,e,h,g){d=b.get(d);c.set(e,d.Zb);d.step(e,new Uint32Array(y.buffer,g,h));c.delete(e)};Zb=function(d,e){d=b.get(d);c.set(e,d.Zb);d.Kc(e);c.delete(e)};cc=\nfunction(d,e,h,g,n,k){d=b.get(d);const l=y;n=BigInt(k)<<32n|BigInt(n)&4294967295n;d(e,a(l,h),a(l,g),n)}})();(function(){const a=new Map;f.progressHandler=function(b,c,d,e){d?a.set(b,{f:d,vc:e}):a.delete(b);return Z(\"progress_handler\",null,[\"number\",\"number\"],[b,c])};ac=function(b){if(a.has(b)){const {f:c,vc:d}=a.get(b);return c(d)}return 0}})();\n(function(){function a(k,l){const q=`get${k}`,m=`set${k}`;return new Proxy(new DataView(y.buffer,l,\"Int32\"===k?4:8),{get(r,x){if(x===q)return function(A,G){if(!G)throw Error(\"must be little endian\");return r[x](A,G)};if(x===m)return function(A,G,E){if(!E)throw Error(\"must be little endian\");return r[x](A,G,E)};if(\"string\"===typeof x&&x.match(/^(get)|(set)/))throw Error(\"invalid type\");return r[x]}})}const b=\"object\"===typeof ed,c=new Map,d=new Map,e=new Map,h=b?new Set:null,g=b?new Set:null,n=new Map;\ntc=function(k,l,q,m){n.set(k?K(y,k):\"\",{size:l,fc:Array.from(new Uint32Array(y.buffer,m,q))})};f.createModule=function(k,l,q,m){b&&(q.handleAsync=dd);const r=c.size;c.set(r,{module:q,Zb:m});m=0;q.xCreate&&(m|=1);q.xConnect&&(m|=2);q.xBestIndex&&(m|=4);q.xDisconnect&&(m|=8);q.xDestroy&&(m|=16);q.xOpen&&(m|=32);q.xClose&&(m|=64);q.xFilter&&(m|=128);q.xNext&&(m|=256);q.xEof&&(m|=512);q.xColumn&&(m|=1024);q.xRowid&&(m|=2048);q.xUpdate&&(m|=4096);q.xBegin&&(m|=8192);q.xSync&&(m|=16384);q.xCommit&&(m|=\n32768);q.xRollback&&(m|=65536);q.xFindFunction&&(m|=131072);q.xRename&&(m|=262144);return Z(\"create_module\",\"number\",[\"number\",\"string\",\"number\",\"number\"],[k,l,r,m])};jc=function(k,l,q,m,r,x){l=c.get(l);d.set(r,l);if(b){h.delete(r);for(const A of h)d.delete(A)}m=Array.from(new Uint32Array(y.buffer,m,q)).map(A=>A?K(y,A):\"\");return l.module.xCreate(k,l.Zb,m,r,a(\"Int32\",x))};ic=function(k,l,q,m,r,x){l=c.get(l);d.set(r,l);if(b){h.delete(r);for(const A of h)d.delete(A)}m=Array.from(new Uint32Array(y.buffer,\nm,q)).map(A=>A?K(y,A):\"\");return l.module.xConnect(k,l.Zb,m,r,a(\"Int32\",x))};ec=function(k,l){var q=d.get(k),m=n.get(\"sqlite3_index_info\").fc;const r={};r.nConstraint=I(l+m[0],\"i32\");r.aConstraint=[];var x=I(l+m[1],\"*\"),A=n.get(\"sqlite3_index_constraint\").size;for(var G=0;G<r.nConstraint;++G){var E=r.aConstraint,L=E.push,H=x+G*A,ha=n.get(\"sqlite3_index_constraint\").fc,W={};W.iColumn=I(H+ha[0],\"i32\");W.op=I(H+ha[1],\"i8\");W.usable=!!I(H+ha[2],\"i8\");L.call(E,W)}r.nOrderBy=I(l+m[2],\"i32\");r.aOrderBy=\n[];x=I(l+m[3],\"*\");A=n.get(\"sqlite3_index_orderby\").size;for(G=0;G<r.nOrderBy;++G)E=r.aOrderBy,L=E.push,H=x+G*A,ha=n.get(\"sqlite3_index_orderby\").fc,W={},W.iColumn=I(H+ha[0],\"i32\"),W.desc=!!I(H+ha[1],\"i8\"),L.call(E,W);r.aConstraintUsage=[];for(x=0;x<r.nConstraint;++x)r.aConstraintUsage.push({argvIndex:0,omit:!1});r.idxNum=I(l+m[5],\"i32\");r.idxStr=null;r.orderByConsumed=!!I(l+m[8],\"i8\");r.estimatedCost=I(l+m[9],\"double\");r.estimatedRows=I(l+m[10],\"i32\");r.idxFlags=I(l+m[11],\"i32\");r.colUsed=I(l+m[12],\n\"i32\");k=q.module.xBestIndex(k,r);q=n.get(\"sqlite3_index_info\").fc;m=I(l+q[4],\"*\");x=n.get(\"sqlite3_index_constraint_usage\").size;for(L=0;L<r.nConstraint;++L)A=m+L*x,E=r.aConstraintUsage[L],H=n.get(\"sqlite3_index_constraint_usage\").fc,J(A+H[0],E.argvIndex,\"i32\"),J(A+H[1],E.omit?1:0,\"i8\");J(l+q[5],r.idxNum,\"i32\");\"string\"===typeof r.idxStr&&(m=Ra(r.idxStr),x=Z(\"sqlite3_malloc\",\"number\",[\"number\"],[m+1]),Sa(r.idxStr,y,x,m+1),J(l+q[6],x,\"*\"),J(l+q[7],1,\"i32\"));J(l+q[8],r.orderByConsumed,\"i32\");J(l+q[9],\nr.estimatedCost,\"double\");J(l+q[10],r.estimatedRows,\"i32\");J(l+q[11],r.idxFlags,\"i32\");return k};lc=function(k){const l=d.get(k);b?h.add(k):d.delete(k);return l.module.xDisconnect(k)};kc=function(k){const l=d.get(k);b?h.add(k):d.delete(k);return l.module.xDestroy(k)};pc=function(k,l){const q=d.get(k);e.set(l,q);if(b){g.delete(l);for(const m of g)e.delete(m)}return q.module.xOpen(k,l)};fc=function(k){const l=e.get(k);b?g.add(k):e.delete(k);return l.module.xClose(k)};mc=function(k){return e.get(k).module.xEof(k)?\n1:0};nc=function(k,l,q,m,r){const x=e.get(k);q=q?q?K(y,q):\"\":null;r=new Uint32Array(y.buffer,r,m);return x.module.xFilter(k,l,q,r)};oc=function(k){return e.get(k).module.xNext(k)};gc=function(k,l,q){return e.get(k).module.xColumn(k,l,q)};sc=function(k,l){return e.get(k).module.xRowid(k,a(\"BigInt64\",l))};vc=function(k,l,q,m){const r=d.get(k);q=new Uint32Array(y.buffer,q,l);return r.module.xUpdate(k,q,a(\"BigInt64\",m))};dc=function(k){return d.get(k).module.xBegin(k)};uc=function(k){return d.get(k).module.xSync(k)};\nhc=function(k){return d.get(k).module.xCommit(k)};rc=function(k){return d.get(k).module.xRollback(k)};qc=function(k,l){const q=d.get(k);l=l?K(y,l):\"\";return q.module.xRename(k,l)}})();\n(function(){function a(g,n){const k=`get${g}`,l=`set${g}`;return new Proxy(new DataView(y.buffer,n,\"Int32\"===g?4:8),{get(q,m){if(m===k)return function(r,x){if(!x)throw Error(\"must be little endian\");return q[m](r,x)};if(m===l)return function(r,x,A){if(!A)throw Error(\"must be little endian\");return q[m](r,x,A)};if(\"string\"===typeof m&&m.match(/^(get)|(set)/))throw Error(\"invalid type\");return q[m]}})}function b(g){g>>=2;return B[g]+B[g+1]*2**32}const c=\"object\"===typeof ed,d=new Map,e=new Map;f.registerVFS=\nfunction(g,n){if(Z(\"sqlite3_vfs_find\",\"number\",[\"string\"],[g.name]))throw Error(`VFS '${g.name}' already registered`);c&&(g.handleAsync=dd);var k=g.cd??64;const l=f._malloc(4);n=Z(\"register_vfs\",\"number\",[\"string\",\"number\",\"number\",\"number\"],[g.name,k,n?1:0,l]);n||(k=I(l,\"*\"),d.set(k,g));f._free(l);return n};const h=c?new Set:null;yc=function(g){const n=e.get(g);c?h.add(g):e.delete(g);return n.xClose(g)};Fc=function(g,n,k,l){return e.get(g).xRead(g,y.subarray(n,n+k),b(l))};Kc=function(g,n,k,l){return e.get(g).xWrite(g,\ny.subarray(n,n+k),b(l))};Ic=function(g,n){return e.get(g).xTruncate(g,b(n))};Hc=function(g,n){return e.get(g).xSync(g,n)};Cc=function(g,n){const k=e.get(g);n=a(\"BigInt64\",n);return k.xFileSize(g,n)};Dc=function(g,n){return e.get(g).xLock(g,n)};Jc=function(g,n){return e.get(g).xUnlock(g,n)};xc=function(g,n){const k=e.get(g);n=a(\"Int32\",n);return k.xCheckReservedLock(g,n)};Bc=function(g,n,k){const l=e.get(g);k=new DataView(y.buffer,k);return l.xFileControl(g,n,k)};Gc=function(g){return e.get(g).xSectorSize(g)};\nAc=function(g){return e.get(g).xDeviceCharacteristics(g)};Ec=function(g,n,k,l,q){g=d.get(g);e.set(k,g);if(c){h.delete(k);for(var m of h)e.delete(m)}m=null;if(l&64){m=1;const r=[];for(;m;){const x=y[n++];if(x)r.push(x);else switch(y[n]||(m=null),m){case 1:r.push(63);m=2;break;case 2:r.push(61);m=3;break;case 3:r.push(38),m=2}}m=(new TextDecoder).decode(new Uint8Array(r))}else n&&(m=n?K(y,n):\"\");q=a(\"Int32\",q);return g.xOpen(m,k,l,q)};zc=function(g,n,k){return d.get(g).xDelete(n?K(y,n):\"\",k)};wc=function(g,\nn,k,l){g=d.get(g);l=a(\"Int32\",l);return g.xAccess(n?K(y,n):\"\",k,l)}})();\nvar kd={a:(a,b,c,d)=>{u(`Assertion failed: ${a?K(y,a):\"\"}, at: `+[b?b?K(y,b):\"\":\"unknown filename\",c,d?d?K(y,d):\"\":\"unknown function\"])},K:function(a,b){try{return a=a?K(y,a):\"\",Db(a,b),0}catch(c){if(\"undefined\"==typeof U||\"ErrnoError\"!==c.name)throw c;return-c.Qb}},M:function(a,b,c){try{b=b?K(y,b):\"\";b=Mb(a,b);if(c&-8)return-28;var d=R(b,{$b:!0}).node;if(!d)return-44;a=\"\";c&4&&(a+=\"r\");c&2&&(a+=\"w\");c&1&&(a+=\"x\");return a&&ob(d,a)?-2:0}catch(e){if(\"undefined\"==typeof U||\"ErrnoError\"!==e.name)throw e;\nreturn-e.Qb}},L:function(a,b){try{var c=S(a);Db(c.node,b);return 0}catch(d){if(\"undefined\"==typeof U||\"ErrnoError\"!==d.name)throw d;return-d.Qb}},J:function(a){try{var b=S(a).node;var c=\"string\"==typeof b?R(b,{$b:!0}).node:b;if(!c.Eb.Sb)throw new N(63);c.Eb.Sb(c,{timestamp:Date.now()});return 0}catch(d){if(\"undefined\"==typeof U||\"ErrnoError\"!==d.name)throw d;return-d.Qb}},b:function(a,b,c){Ob=c;try{var d=S(a);switch(b){case 0:var e=Pb();if(0>e)return-28;for(;hb[e];)e++;return ub(d,e).Yb;case 1:case 2:return 0;\ncase 3:return d.flags;case 4:return e=Pb(),d.flags|=e,0;case 5:return e=Pb(),oa[e+0>>1]=2,0;case 6:case 7:return 0;case 16:case 8:return-28;case 9:return z[jd()>>2]=28,-1;default:return-28}}catch(h){if(\"undefined\"==typeof U||\"ErrnoError\"!==h.name)throw h;return-h.Qb}},I:function(a,b){try{var c=S(a);return Nb(Bb,c.path,b)}catch(d){if(\"undefined\"==typeof U||\"ErrnoError\"!==d.name)throw d;return-d.Qb}},n:function(a,b,c){b=Qb(b,c);try{if(isNaN(b))return 61;var d=S(a);if(0===(d.flags&2097155))throw new N(28);\nEb(d.node,b);return 0}catch(e){if(\"undefined\"==typeof U||\"ErrnoError\"!==e.name)throw e;return-e.Qb}},C:function(a,b){try{if(0===b)return-28;var c=Ra(\"/\")+1;if(b<c)return-68;Sa(\"/\",y,a,b);return c}catch(d){if(\"undefined\"==typeof U||\"ErrnoError\"!==d.name)throw d;return-d.Qb}},F:function(a,b){try{return a=a?K(y,a):\"\",Nb(Cb,a,b)}catch(c){if(\"undefined\"==typeof U||\"ErrnoError\"!==c.name)throw c;return-c.Qb}},z:function(a,b,c){try{return b=b?K(y,b):\"\",b=Mb(a,b),b=M(b),\"/\"===b[b.length-1]&&(b=b.substr(0,\nb.length-1)),T(b,c),0}catch(d){if(\"undefined\"==typeof U||\"ErrnoError\"!==d.name)throw d;return-d.Qb}},E:function(a,b,c,d){try{b=b?K(y,b):\"\";var e=d&256;b=Mb(a,b,d&4096);return Nb(e?Cb:Bb,b,c)}catch(h){if(\"undefined\"==typeof U||\"ErrnoError\"!==h.name)throw h;return-h.Qb}},y:function(a,b,c,d){Ob=d;try{b=b?K(y,b):\"\";b=Mb(a,b);var e=d?Pb():0;return Fb(b,c,e).Yb}catch(h){if(\"undefined\"==typeof U||\"ErrnoError\"!==h.name)throw h;return-h.Qb}},v:function(a,b,c,d){try{b=b?K(y,b):\"\";b=Mb(a,b);if(0>=d)return-28;\nvar e=kb(b),h=Math.min(d,Ra(e)),g=w[c+h];Sa(e,y,c,d+1);w[c+h]=g;return h}catch(n){if(\"undefined\"==typeof U||\"ErrnoError\"!==n.name)throw n;return-n.Qb}},u:function(a){try{return a=a?K(y,a):\"\",Ab(a),0}catch(b){if(\"undefined\"==typeof U||\"ErrnoError\"!==b.name)throw b;return-b.Qb}},G:function(a,b){try{return a=a?K(y,a):\"\",Nb(Bb,a,b)}catch(c){if(\"undefined\"==typeof U||\"ErrnoError\"!==c.name)throw c;return-c.Qb}},r:function(a,b,c){try{b=b?K(y,b):\"\";b=Mb(a,b);if(0===c){a=b;var d=R(a,{parent:!0}).node;if(!d)throw new N(44);\nvar e=Ma(a),h=cb(d,e),g=sb(d,e,!1);if(g)throw new N(g);if(!d.Eb.qc)throw new N(63);if(h.bc)throw new N(10);d.Eb.qc(d,e);nb(h)}else 512===c?Ab(b):u(\"Invalid flags passed to unlinkat\");return 0}catch(n){if(\"undefined\"==typeof U||\"ErrnoError\"!==n.name)throw n;return-n.Qb}},q:function(a,b,c){try{b=b?K(y,b):\"\";b=Mb(a,b,!0);if(c){var d=B[c>>2]+4294967296*z[c+4>>2],e=z[c+8>>2];h=1E3*d+e/1E6;c+=16;d=B[c>>2]+4294967296*z[c+4>>2];e=z[c+8>>2];g=1E3*d+e/1E6}else var h=Date.now(),g=h;a=h;var n=R(b,{$b:!0}).node;\nn.Eb.Sb(n,{timestamp:Math.max(a,g)});return 0}catch(k){if(\"undefined\"==typeof U||\"ErrnoError\"!==k.name)throw k;return-k.Qb}},k:function(a,b,c){a=new Date(1E3*Qb(a,b));z[c>>2]=a.getSeconds();z[c+4>>2]=a.getMinutes();z[c+8>>2]=a.getHours();z[c+12>>2]=a.getDate();z[c+16>>2]=a.getMonth();z[c+20>>2]=a.getFullYear()-1900;z[c+24>>2]=a.getDay();b=a.getFullYear();z[c+28>>2]=(0!==b%4||0===b%100&&0!==b%400?Sb:Rb)[a.getMonth()]+a.getDate()-1|0;z[c+36>>2]=-(60*a.getTimezoneOffset());b=(new Date(a.getFullYear(),\n6,1)).getTimezoneOffset();var d=(new Date(a.getFullYear(),0,1)).getTimezoneOffset();z[c+32>>2]=(b!=d&&a.getTimezoneOffset()==Math.min(d,b))|0},i:function(a,b,c,d,e,h,g,n){e=Qb(e,h);try{if(isNaN(e))return 61;var k=S(d);if(0!==(b&2)&&0===(c&2)&&2!==(k.flags&2097155))throw new N(2);if(1===(k.flags&2097155))throw new N(2);if(!k.Ob.mc)throw new N(43);var l=k.Ob.mc(k,a,e,b,c);var q=l.Qc;z[g>>2]=l.Ec;B[n>>2]=q;return 0}catch(m){if(\"undefined\"==typeof U||\"ErrnoError\"!==m.name)throw m;return-m.Qb}},j:function(a,\nb,c,d,e,h,g){h=Qb(h,g);try{if(isNaN(h))return 61;var n=S(e);if(c&2){if(32768!==(n.node.mode&61440))throw new N(43);d&2||n.Ob.nc&&n.Ob.nc(n,y.slice(a,a+b),h,b,d)}}catch(k){if(\"undefined\"==typeof U||\"ErrnoError\"!==k.name)throw k;return-k.Qb}},s:(a,b,c)=>{function d(k){return(k=k.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?k[1]:\"GMT\"}var e=(new Date).getFullYear(),h=new Date(e,0,1),g=new Date(e,6,1);e=h.getTimezoneOffset();var n=g.getTimezoneOffset();B[a>>2]=60*Math.max(e,n);z[b>>2]=Number(e!=n);a=d(h);\nb=d(g);a=Ub(a);b=Ub(b);n<e?(B[c>>2]=a,B[c+4>>2]=b):(B[c>>2]=b,B[c+4>>2]=a)},e:()=>Date.now(),d:()=>performance.now(),o:a=>{var b=y.length;a>>>=0;if(2147483648<a)return!1;for(var c=1;4>=c;c*=2){var d=b*(1+.2/c);d=Math.min(d,a+100663296);var e=Math;d=Math.max(a,d);a:{e=(e.min.call(e,2147483648,d+(65536-d%65536)%65536)-ma.buffer.byteLength+65535)/65536;try{ma.grow(e);ra();var h=1;break a}catch(g){}h=void 0}if(h)return!0}return!1},A:(a,b)=>{var c=0;Xb().forEach((d,e)=>{var h=b+c;e=B[a+4*e>>2]=h;for(h=\n0;h<d.length;++h)w[e++>>0]=d.charCodeAt(h);w[e>>0]=0;c+=d.length+1});return 0},B:(a,b)=>{var c=Xb();B[a>>2]=c.length;var d=0;c.forEach(e=>d+=e.length+1);B[b>>2]=d;return 0},f:function(a){try{var b=S(a);if(null===b.Yb)throw new N(8);b.rc&&(b.rc=null);try{b.Ob.close&&b.Ob.close(b)}catch(c){throw c;}finally{hb[b.Yb]=null}b.Yb=null;return 0}catch(c){if(\"undefined\"==typeof U||\"ErrnoError\"!==c.name)throw c;return c.Qb}},p:function(a,b){try{var c=S(a);w[b>>0]=c.Ub?2:P(c.mode)?3:40960===(c.mode&61440)?7:\n4;oa[b+2>>1]=0;F=[0,(D=0,1<=+Math.abs(D)?0<D?+Math.floor(D/4294967296)>>>0:~~+Math.ceil((D-+(~~D>>>0))/4294967296)>>>0:0)];z[b+8>>2]=F[0];z[b+12>>2]=F[1];F=[0,(D=0,1<=+Math.abs(D)?0<D?+Math.floor(D/4294967296)>>>0:~~+Math.ceil((D-+(~~D>>>0))/4294967296)>>>0:0)];z[b+16>>2]=F[0];z[b+20>>2]=F[1];return 0}catch(d){if(\"undefined\"==typeof U||\"ErrnoError\"!==d.name)throw d;return d.Qb}},x:function(a,b,c,d){try{a:{var e=S(a);a=b;for(var h,g=b=0;g<c;g++){var n=B[a>>2],k=B[a+4>>2];a+=8;var l=e,q=n,m=k,r=h,x=\nw;if(0>m||0>r)throw new N(28);if(null===l.Yb)throw new N(8);if(1===(l.flags&2097155))throw new N(8);if(P(l.node.mode))throw new N(31);if(!l.Ob.read)throw new N(28);var A=\"undefined\"!=typeof r;if(!A)r=l.position;else if(!l.seekable)throw new N(70);var G=l.Ob.read(l,x,q,m,r);A||(l.position+=G);var E=G;if(0>E){var L=-1;break a}b+=E;if(E<k)break;\"undefined\"!==typeof h&&(h+=E)}L=b}B[d>>2]=L;return 0}catch(H){if(\"undefined\"==typeof U||\"ErrnoError\"!==H.name)throw H;return H.Qb}},m:function(a,b,c,d,e){b=\nQb(b,c);try{if(isNaN(b))return 61;var h=S(a);Hb(h,b,d);F=[h.position>>>0,(D=h.position,1<=+Math.abs(D)?0<D?+Math.floor(D/4294967296)>>>0:~~+Math.ceil((D-+(~~D>>>0))/4294967296)>>>0:0)];z[e>>2]=F[0];z[e+4>>2]=F[1];h.rc&&0===b&&0===d&&(h.rc=null);return 0}catch(g){if(\"undefined\"==typeof U||\"ErrnoError\"!==g.name)throw g;return g.Qb}},D:function(a){try{var b=S(a);return Zc(c=>{var d=b.node.Wb;d.type.Sc?d.type.Sc(d,!1,e=>{e?c(29):c(0)}):c(0)})}catch(c){if(\"undefined\"==typeof U||\"ErrnoError\"!==c.name)throw c;\nreturn c.Qb}},t:function(a,b,c,d){try{a:{var e=S(a);a=b;for(var h,g=b=0;g<c;g++){var n=B[a>>2],k=B[a+4>>2];a+=8;var l=e,q=n,m=k,r=h,x=w;if(0>m||0>r)throw new N(28);if(null===l.Yb)throw new N(8);if(0===(l.flags&2097155))throw new N(8);if(P(l.node.mode))throw new N(31);if(!l.Ob.write)throw new N(28);l.seekable&&l.flags&1024&&Hb(l,0,2);var A=\"undefined\"!=typeof r;if(!A)r=l.position;else if(!l.seekable)throw new N(70);var G=l.Ob.write(l,x,q,m,r,void 0);A||(l.position+=G);var E=G;if(0>E){var L=-1;break a}b+=\nE;\"undefined\"!==typeof h&&(h+=E)}L=b}B[d>>2]=L;return 0}catch(H){if(\"undefined\"==typeof U||\"ErrnoError\"!==H.name)throw H;return H.Qb}},sa:Yb,O:Zb,ha:$b,ca:ac,Z:bc,H:cc,la:dc,w:ec,g:fc,oa:gc,ja:hc,ea:ic,fa:jc,h:kc,l:lc,pa:mc,ra:nc,qa:oc,da:pc,ga:qc,ia:rc,na:sc,c:tc,ka:uc,ma:vc,aa:wc,V:xc,$:yc,ba:zc,S:Ac,U:Bc,Y:Cc,X:Dc,R:Ec,Q:Fc,T:Gc,_:Hc,N:Ic,W:Jc,P:Kc},Y=function(){function a(c){c=c.exports;Y=c=Oc(c);ma=Y.ta;ra();ta.unshift(Y.ua);C--;f.monitorRunDependencies&&f.monitorRunDependencies(C);if(0==C&&\n(null!==ya&&(clearInterval(ya),ya=null),za)){var d=za;za=null;d()}return c}var b={a:kd};C++;f.monitorRunDependencies&&f.monitorRunDependencies(C);if(f.instantiateWasm)try{return f.instantiateWasm(b,a)}catch(c){t(`Module.instantiateWasm callback failed with error: ${c}`),ba(c)}Ga(b,function(c){a(c.instance)}).catch(ba);return{}}();f._sqlite3_vfs_find=a=>(f._sqlite3_vfs_find=Y.va)(a);f._sqlite3_malloc=a=>(f._sqlite3_malloc=Y.wa)(a);f._sqlite3_free=a=>(f._sqlite3_free=Y.xa)(a);\nf._sqlite3_prepare_v2=(a,b,c,d,e)=>(f._sqlite3_prepare_v2=Y.ya)(a,b,c,d,e);f._sqlite3_step=a=>(f._sqlite3_step=Y.za)(a);f._sqlite3_column_int64=(a,b)=>(f._sqlite3_column_int64=Y.Aa)(a,b);f._sqlite3_column_int=(a,b)=>(f._sqlite3_column_int=Y.Ba)(a,b);f._sqlite3_finalize=a=>(f._sqlite3_finalize=Y.Ca)(a);f._sqlite3_reset=a=>(f._sqlite3_reset=Y.Da)(a);f._sqlite3_clear_bindings=a=>(f._sqlite3_clear_bindings=Y.Ea)(a);f._sqlite3_value_blob=a=>(f._sqlite3_value_blob=Y.Fa)(a);\nf._sqlite3_value_text=a=>(f._sqlite3_value_text=Y.Ga)(a);f._sqlite3_value_bytes=a=>(f._sqlite3_value_bytes=Y.Ha)(a);f._sqlite3_value_double=a=>(f._sqlite3_value_double=Y.Ia)(a);f._sqlite3_value_int=a=>(f._sqlite3_value_int=Y.Ja)(a);f._sqlite3_value_int64=a=>(f._sqlite3_value_int64=Y.Ka)(a);f._sqlite3_value_type=a=>(f._sqlite3_value_type=Y.La)(a);f._sqlite3_result_blob=(a,b,c,d)=>(f._sqlite3_result_blob=Y.Ma)(a,b,c,d);f._sqlite3_result_double=(a,b)=>(f._sqlite3_result_double=Y.Na)(a,b);\nf._sqlite3_result_error=(a,b,c)=>(f._sqlite3_result_error=Y.Oa)(a,b,c);f._sqlite3_result_int=(a,b)=>(f._sqlite3_result_int=Y.Pa)(a,b);f._sqlite3_result_int64=(a,b,c)=>(f._sqlite3_result_int64=Y.Qa)(a,b,c);f._sqlite3_result_null=a=>(f._sqlite3_result_null=Y.Ra)(a);f._sqlite3_result_text=(a,b,c,d)=>(f._sqlite3_result_text=Y.Sa)(a,b,c,d);f._sqlite3_column_count=a=>(f._sqlite3_column_count=Y.Ta)(a);f._sqlite3_data_count=a=>(f._sqlite3_data_count=Y.Ua)(a);\nf._sqlite3_column_blob=(a,b)=>(f._sqlite3_column_blob=Y.Va)(a,b);f._sqlite3_column_bytes=(a,b)=>(f._sqlite3_column_bytes=Y.Wa)(a,b);f._sqlite3_column_double=(a,b)=>(f._sqlite3_column_double=Y.Xa)(a,b);f._sqlite3_column_text=(a,b)=>(f._sqlite3_column_text=Y.Ya)(a,b);f._sqlite3_column_type=(a,b)=>(f._sqlite3_column_type=Y.Za)(a,b);f._sqlite3_column_name=(a,b)=>(f._sqlite3_column_name=Y._a)(a,b);f._sqlite3_bind_blob=(a,b,c,d,e)=>(f._sqlite3_bind_blob=Y.$a)(a,b,c,d,e);\nf._sqlite3_bind_double=(a,b,c)=>(f._sqlite3_bind_double=Y.ab)(a,b,c);f._sqlite3_bind_int=(a,b,c)=>(f._sqlite3_bind_int=Y.bb)(a,b,c);f._sqlite3_bind_int64=(a,b,c,d)=>(f._sqlite3_bind_int64=Y.cb)(a,b,c,d);f._sqlite3_bind_null=(a,b)=>(f._sqlite3_bind_null=Y.db)(a,b);f._sqlite3_bind_text=(a,b,c,d,e)=>(f._sqlite3_bind_text=Y.eb)(a,b,c,d,e);f._sqlite3_bind_parameter_count=a=>(f._sqlite3_bind_parameter_count=Y.fb)(a);f._sqlite3_bind_parameter_name=(a,b)=>(f._sqlite3_bind_parameter_name=Y.gb)(a,b);\nf._sqlite3_sql=a=>(f._sqlite3_sql=Y.hb)(a);f._sqlite3_exec=(a,b,c,d,e)=>(f._sqlite3_exec=Y.ib)(a,b,c,d,e);f._sqlite3_errmsg=a=>(f._sqlite3_errmsg=Y.jb)(a);f._sqlite3_declare_vtab=(a,b)=>(f._sqlite3_declare_vtab=Y.kb)(a,b);f._sqlite3_libversion=()=>(f._sqlite3_libversion=Y.lb)();f._sqlite3_libversion_number=()=>(f._sqlite3_libversion_number=Y.mb)();f._sqlite3_changes=a=>(f._sqlite3_changes=Y.nb)(a);f._sqlite3_close=a=>(f._sqlite3_close=Y.ob)(a);\nf._sqlite3_limit=(a,b,c)=>(f._sqlite3_limit=Y.pb)(a,b,c);f._sqlite3_open_v2=(a,b,c,d)=>(f._sqlite3_open_v2=Y.qb)(a,b,c,d);f._sqlite3_get_autocommit=a=>(f._sqlite3_get_autocommit=Y.rb)(a);var jd=()=>(jd=Y.sb)(),Tb=f._malloc=a=>(Tb=f._malloc=Y.tb)(a),cd=f._free=a=>(cd=f._free=Y.ub)(a);f._RegisterExtensionFunctions=a=>(f._RegisterExtensionFunctions=Y.vb)(a);f._set_authorizer=a=>(f._set_authorizer=Y.wb)(a);f._create_function=(a,b,c,d,e,h)=>(f._create_function=Y.xb)(a,b,c,d,e,h);\nf._update_hook=(a,b)=>(f._update_hook=Y.yb)(a,b);f._create_module=(a,b,c,d)=>(f._create_module=Y.zb)(a,b,c,d);f._progress_handler=(a,b)=>(f._progress_handler=Y.Ab)(a,b);f._register_vfs=(a,b,c,d)=>(f._register_vfs=Y.Bb)(a,b,c,d);f._getSqliteFree=()=>(f._getSqliteFree=Y.Cb)();var ld=f._main=(a,b)=>(ld=f._main=Y.Db)(a,b),db=(a,b)=>(db=Y.Fb)(a,b),md=()=>(md=Y.Gb)(),hd=()=>(hd=Y.Hb)(),fd=a=>(fd=Y.Ib)(a),gd=a=>(gd=Y.Jb)(a),ad=a=>(ad=Y.Kb)(a),Qc=()=>(Qc=Y.Lb)(),$c=a=>($c=Y.Mb)(a),bd=()=>(bd=Y.Nb)();\nf.getTempRet0=md;f.ccall=Z;f.cwrap=(a,b,c,d)=>{var e=!c||c.every(h=>\"number\"===h||\"boolean\"===h);return\"string\"!==b&&e&&!d?f[\"_\"+a]:function(){return Z(a,b,c,arguments,d)}};f.setValue=J;f.getValue=I;f.UTF8ToString=(a,b)=>a?K(y,a,b):\"\";f.stringToUTF8=(a,b,c)=>Sa(a,y,b,c);f.lengthBytesUTF8=Ra;var nd;za=function od(){nd||pd();nd||(za=od)};\nfunction pd(){function a(){if(!nd&&(nd=!0,f.calledRun=!0,!v)){f.noFSInit||Jb||(Jb=!0,Ib(),f.stdin=f.stdin,f.stdout=f.stdout,f.stderr=f.stderr,f.stdin?Kb(\"stdin\",f.stdin):zb(\"/dev/tty\",\"/dev/stdin\"),f.stdout?Kb(\"stdout\",null,f.stdout):zb(\"/dev/tty\",\"/dev/stdout\"),f.stderr?Kb(\"stderr\",null,f.stderr):zb(\"/dev/tty1\",\"/dev/stderr\"),Fb(\"/dev/stdin\",0),Fb(\"/dev/stdout\",1),Fb(\"/dev/stderr\",1));jb=!1;Ia(ta);Ia(ua);aa(f);if(f.onRuntimeInitialized)f.onRuntimeInitialized();if(qd){var b=ld;try{var c=b(0,0);na=\nc;Lc(c)}catch(d){Mc(d)}}if(f.postRun)for(\"function\"==typeof f.postRun&&(f.postRun=[f.postRun]);f.postRun.length;)b=f.postRun.shift(),va.unshift(b);Ia(va)}}if(!(0<C)){if(f.preRun)for(\"function\"==typeof f.preRun&&(f.preRun=[f.preRun]);f.preRun.length;)xa();Ia(sa);0<C||(f.setStatus?(f.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){f.setStatus(\"\")},1);a()},1)):a())}}if(f.preInit)for(\"function\"==typeof f.preInit&&(f.preInit=[f.preInit]);0<f.preInit.length;)f.preInit.pop()();\nvar qd=!0;f.noInitialRun&&(qd=!1);pd();\n\n\n  return moduleArg.ready\n}\n\n);\n})();\nexport default Module;","// Primary result codes.\n// https://www.sqlite.org/rescode.html\nexport const SQLITE_OK = 0;\nexport const SQLITE_ERROR = 1;\nexport const SQLITE_INTERNAL = 2;\nexport const SQLITE_PERM = 3;\nexport const SQLITE_ABORT = 4;\nexport const SQLITE_BUSY = 5;\nexport const SQLITE_LOCKED = 6;\nexport const SQLITE_NOMEM = 7;\nexport const SQLITE_READONLY = 8;\nexport const SQLITE_INTERRUPT = 9;\nexport const SQLITE_IOERR = 10;\nexport const SQLITE_CORRUPT = 11;\nexport const SQLITE_NOTFOUND = 12;\nexport const SQLITE_FULL = 13;\nexport const SQLITE_CANTOPEN = 14;\nexport const SQLITE_PROTOCOL = 15;\nexport const SQLITE_EMPTY = 16;\nexport const SQLITE_SCHEMA = 17;\nexport const SQLITE_TOOBIG = 18;\nexport const SQLITE_CONSTRAINT = 19;\nexport const SQLITE_MISMATCH = 20;\nexport const SQLITE_MISUSE = 21;\nexport const SQLITE_NOLFS = 22;\nexport const SQLITE_AUTH = 23;\nexport const SQLITE_FORMAT = 24;\nexport const SQLITE_RANGE = 25;\nexport const SQLITE_NOTADB = 26;\nexport const SQLITE_NOTICE = 27;\nexport const SQLITE_WARNING = 28;\nexport const SQLITE_ROW = 100;\nexport const SQLITE_DONE = 101;\n\n// Extended error codes.\nexport const SQLITE_IOERR_ACCESS = 3338;\nexport const SQLITE_IOERR_CHECKRESERVEDLOCK = 3594;\nexport const SQLITE_IOERR_CLOSE = 4106;\nexport const SQLITE_IOERR_DATA = 8202;\nexport const SQLITE_IOERR_DELETE = 2570;\nexport const SQLITE_IOERR_DELETE_NOENT = 5898;\nexport const SQLITE_IOERR_DIR_FSYNC = 1290;\nexport const SQLITE_IOERR_FSTAT = 1802;\nexport const SQLITE_IOERR_FSYNC = 1034;\nexport const SQLITE_IOERR_GETTEMPPATH = 6410;\nexport const SQLITE_IOERR_LOCK = 3850;\nexport const SQLITE_IOERR_NOMEM = 3082;\nexport const SQLITE_IOERR_READ = 266;\nexport const SQLITE_IOERR_RDLOCK = 2314;\nexport const SQLITE_IOERR_SEEK = 5642;\nexport const SQLITE_IOERR_SHORT_READ = 522;\nexport const SQLITE_IOERR_TRUNCATE = 1546;\nexport const SQLITE_IOERR_UNLOCK = 2058;\nexport const SQLITE_IOERR_VNODE = 6922;\nexport const SQLITE_IOERR_WRITE = 778;\nexport const SQLITE_IOERR_BEGIN_ATOMIC = 7434;\nexport const SQLITE_IOERR_COMMIT_ATOMIC = 7690;\nexport const SQLITE_IOERR_ROLLBACK_ATOMIC = 7946;\n\n// Other extended result codes.\nexport const SQLITE_CONSTRAINT_CHECK = 275;\nexport const SQLITE_CONSTRAINT_COMMITHOOK = 531;\nexport const SQLITE_CONSTRAINT_FOREIGNKEY = 787;\nexport const SQLITE_CONSTRAINT_FUNCTION = 1043;\nexport const SQLITE_CONSTRAINT_NOTNULL = 1299;\nexport const SQLITE_CONSTRAINT_PINNED = 2835;\nexport const SQLITE_CONSTRAINT_PRIMARYKEY = 1555;\nexport const SQLITE_CONSTRAINT_ROWID = 2579;\nexport const SQLITE_CONSTRAINT_TRIGGER = 1811;\nexport const SQLITE_CONSTRAINT_UNIQUE = 2067;\nexport const SQLITE_CONSTRAINT_VTAB = 2323;\n\n// Open flags.\n// https://www.sqlite.org/c3ref/c_open_autoproxy.html\nexport const SQLITE_OPEN_READONLY = 0x00000001;\nexport const SQLITE_OPEN_READWRITE = 0x00000002;\nexport const SQLITE_OPEN_CREATE = 0x00000004;\nexport const SQLITE_OPEN_DELETEONCLOSE = 0x00000008;\nexport const SQLITE_OPEN_EXCLUSIVE = 0x00000010;\nexport const SQLITE_OPEN_AUTOPROXY = 0x00000020;\nexport const SQLITE_OPEN_URI = 0x00000040;\nexport const SQLITE_OPEN_MEMORY = 0x00000080;\nexport const SQLITE_OPEN_MAIN_DB = 0x00000100;\nexport const SQLITE_OPEN_TEMP_DB = 0x00000200;\nexport const SQLITE_OPEN_TRANSIENT_DB = 0x00000400;\nexport const SQLITE_OPEN_MAIN_JOURNAL = 0x00000800;\nexport const SQLITE_OPEN_TEMP_JOURNAL = 0x00001000;\nexport const SQLITE_OPEN_SUBJOURNAL = 0x00002000;\nexport const SQLITE_OPEN_SUPER_JOURNAL = 0x00004000;\nexport const SQLITE_OPEN_NOMUTEX = 0x00008000;\nexport const SQLITE_OPEN_FULLMUTEX = 0x00010000;\nexport const SQLITE_OPEN_SHAREDCACHE = 0x00020000;\nexport const SQLITE_OPEN_PRIVATECACHE = 0x00040000;\nexport const SQLITE_OPEN_WAL = 0x00080000;\nexport const SQLITE_OPEN_NOFOLLOW = 0x01000000;\n\n// Locking levels.\n// https://www.sqlite.org/c3ref/c_lock_exclusive.html\nexport const SQLITE_LOCK_NONE = 0;\nexport const SQLITE_LOCK_SHARED = 1;\nexport const SQLITE_LOCK_RESERVED = 2;\nexport const SQLITE_LOCK_PENDING = 3;\nexport const SQLITE_LOCK_EXCLUSIVE = 4;\n\n// Device characteristics.\n// https://www.sqlite.org/c3ref/c_iocap_atomic.html\nexport const SQLITE_IOCAP_ATOMIC = 0x00000001;\nexport const SQLITE_IOCAP_ATOMIC512 = 0x00000002;\nexport const SQLITE_IOCAP_ATOMIC1K = 0x00000004;\nexport const SQLITE_IOCAP_ATOMIC2K = 0x00000008;\nexport const SQLITE_IOCAP_ATOMIC4K = 0x00000010;\nexport const SQLITE_IOCAP_ATOMIC8K = 0x00000020;\nexport const SQLITE_IOCAP_ATOMIC16K = 0x00000040;\nexport const SQLITE_IOCAP_ATOMIC32K = 0x00000080;\nexport const SQLITE_IOCAP_ATOMIC64K = 0x00000100;\nexport const SQLITE_IOCAP_SAFE_APPEND = 0x00000200;\nexport const SQLITE_IOCAP_SEQUENTIAL = 0x00000400;\nexport const SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN = 0x00000800;\nexport const SQLITE_IOCAP_POWERSAFE_OVERWRITE = 0x00001000;\nexport const SQLITE_IOCAP_IMMUTABLE = 0x00002000;\nexport const SQLITE_IOCAP_BATCH_ATOMIC = 0x00004000;\n\n// xAccess flags.\n// https://www.sqlite.org/c3ref/c_access_exists.html\nexport const SQLITE_ACCESS_EXISTS = 0;\nexport const SQLITE_ACCESS_READWRITE = 1;\nexport const SQLITE_ACCESS_READ = 2;\n\n// File control opcodes\n// https://www.sqlite.org/c3ref/c_fcntl_begin_atomic_write.html#sqlitefcntlbeginatomicwrite\nexport const SQLITE_FCNTL_LOCKSTATE = 1; \nexport const SQLITE_FCNTL_GET_LOCKPROXYFILE = 2; \nexport const SQLITE_FCNTL_SET_LOCKPROXYFILE = 3; \nexport const SQLITE_FCNTL_LAST_ERRNO = 4; \nexport const SQLITE_FCNTL_SIZE_HINT = 5; \nexport const SQLITE_FCNTL_CHUNK_SIZE = 6; \nexport const SQLITE_FCNTL_FILE_POINTER = 7; \nexport const SQLITE_FCNTL_SYNC_OMITTED = 8; \nexport const SQLITE_FCNTL_WIN32_AV_RETRY = 9; \nexport const SQLITE_FCNTL_PERSIST_WAL = 10; \nexport const SQLITE_FCNTL_OVERWRITE = 11; \nexport const SQLITE_FCNTL_VFSNAME = 12; \nexport const SQLITE_FCNTL_POWERSAFE_OVERWRITE = 13; \nexport const SQLITE_FCNTL_PRAGMA = 14; \nexport const SQLITE_FCNTL_BUSYHANDLER = 15; \nexport const SQLITE_FCNTL_TEMPFILENAME = 16; \nexport const SQLITE_FCNTL_MMAP_SIZE = 18; \nexport const SQLITE_FCNTL_TRACE = 19; \nexport const SQLITE_FCNTL_HAS_MOVED = 20; \nexport const SQLITE_FCNTL_SYNC = 21; \nexport const SQLITE_FCNTL_COMMIT_PHASETWO = 22; \nexport const SQLITE_FCNTL_WIN32_SET_HANDLE = 23; \nexport const SQLITE_FCNTL_WAL_BLOCK = 24; \nexport const SQLITE_FCNTL_ZIPVFS = 25; \nexport const SQLITE_FCNTL_RBU = 26; \nexport const SQLITE_FCNTL_VFS_POINTER = 27; \nexport const SQLITE_FCNTL_JOURNAL_POINTER = 28; \nexport const SQLITE_FCNTL_WIN32_GET_HANDLE = 29; \nexport const SQLITE_FCNTL_PDB = 30; \nexport const SQLITE_FCNTL_BEGIN_ATOMIC_WRITE = 31; \nexport const SQLITE_FCNTL_COMMIT_ATOMIC_WRITE = 32; \nexport const SQLITE_FCNTL_ROLLBACK_ATOMIC_WRITE = 33; \nexport const SQLITE_FCNTL_LOCK_TIMEOUT = 34; \nexport const SQLITE_FCNTL_DATA_VERSION = 35; \nexport const SQLITE_FCNTL_SIZE_LIMIT = 36; \nexport const SQLITE_FCNTL_CKPT_DONE = 37; \nexport const SQLITE_FCNTL_RESERVE_BYTES = 38; \nexport const SQLITE_FCNTL_CKPT_START = 39;\n\n// Fundamental datatypes.\n// https://www.sqlite.org/c3ref/c_blob.html\nexport const SQLITE_INTEGER = 1;\nexport const SQLITE_FLOAT = 2;\nexport const SQLITE_TEXT = 3;\nexport const SQLITE_BLOB = 4;\nexport const SQLITE_NULL = 5;\n\n// Special destructor behavior.\n// https://www.sqlite.org/c3ref/c_static.html\nexport const SQLITE_STATIC = 0;\nexport const SQLITE_TRANSIENT = -1;\n\n// Text encodings.\n// https://sqlite.org/c3ref/c_any.html\nexport const SQLITE_UTF8 = 1;     /* IMP: R-37514-35566 */\nexport const SQLITE_UTF16LE = 2;  /* IMP: R-03371-37637 */\nexport const SQLITE_UTF16BE = 3;  /* IMP: R-51971-34154 */\nexport const SQLITE_UTF16 = 4;    /* Use native byte order */\n\n// Module constraint ops.\nexport const SQLITE_INDEX_CONSTRAINT_EQ        = 2;\nexport const SQLITE_INDEX_CONSTRAINT_GT        = 4;\nexport const SQLITE_INDEX_CONSTRAINT_LE        = 8;\nexport const SQLITE_INDEX_CONSTRAINT_LT        = 16;\nexport const SQLITE_INDEX_CONSTRAINT_GE        = 32;\nexport const SQLITE_INDEX_CONSTRAINT_MATCH     = 64;\nexport const SQLITE_INDEX_CONSTRAINT_LIKE      = 65;\nexport const SQLITE_INDEX_CONSTRAINT_GLOB      = 66;\nexport const SQLITE_INDEX_CONSTRAINT_REGEXP    = 67;\nexport const SQLITE_INDEX_CONSTRAINT_NE        = 68;\nexport const SQLITE_INDEX_CONSTRAINT_ISNOT     = 69;\nexport const SQLITE_INDEX_CONSTRAINT_ISNOTNULL = 70;\nexport const SQLITE_INDEX_CONSTRAINT_ISNULL    = 71;\nexport const SQLITE_INDEX_CONSTRAINT_IS        = 72;\nexport const SQLITE_INDEX_CONSTRAINT_FUNCTION  = 150;\nexport const SQLITE_INDEX_SCAN_UNIQUE          = 1;  /* Scan visits at most = 1 row */\n\n// Function flags\nexport const SQLITE_DETERMINISTIC = 0x000000800;\nexport const SQLITE_DIRECTONLY    = 0x000080000;\nexport const SQLITE_SUBTYPE       = 0x000100000;\nexport const SQLITE_INNOCUOUS     = 0x000200000;\n\n// Sync flags\nexport const SQLITE_SYNC_NORMAL   = 0x00002;\nexport const SQLITE_SYNC_FULL     = 0x00003;\nexport const SQLITE_SYNC_DATAONLY = 0x00010;\n\n// Authorizer action codes\nexport const SQLITE_CREATE_INDEX        = 1;\nexport const SQLITE_CREATE_TABLE        = 2;\nexport const SQLITE_CREATE_TEMP_INDEX   = 3;\nexport const SQLITE_CREATE_TEMP_TABLE   = 4;\nexport const SQLITE_CREATE_TEMP_TRIGGER = 5;\nexport const SQLITE_CREATE_TEMP_VIEW    = 6;\nexport const SQLITE_CREATE_TRIGGER      = 7;\nexport const SQLITE_CREATE_VIEW         = 8;\nexport const SQLITE_DELETE              = 9;\nexport const SQLITE_DROP_INDEX          = 10;\nexport const SQLITE_DROP_TABLE          = 11;\nexport const SQLITE_DROP_TEMP_INDEX     = 12;\nexport const SQLITE_DROP_TEMP_TABLE     = 13;\nexport const SQLITE_DROP_TEMP_TRIGGER   = 14;\nexport const SQLITE_DROP_TEMP_VIEW      = 15;\nexport const SQLITE_DROP_TRIGGER        = 16;\nexport const SQLITE_DROP_VIEW           = 17;\nexport const SQLITE_INSERT              = 18;\nexport const SQLITE_PRAGMA              = 19;\nexport const SQLITE_READ                = 20;\nexport const SQLITE_SELECT              = 21;\nexport const SQLITE_TRANSACTION         = 22;\nexport const SQLITE_UPDATE              = 23;\nexport const SQLITE_ATTACH              = 24;\nexport const SQLITE_DETACH              = 25;\nexport const SQLITE_ALTER_TABLE         = 26;\nexport const SQLITE_REINDEX             = 27;\nexport const SQLITE_ANALYZE             = 28;\nexport const SQLITE_CREATE_VTABLE       = 29;\nexport const SQLITE_DROP_VTABLE         = 30;\nexport const SQLITE_FUNCTION            = 31;\nexport const SQLITE_SAVEPOINT           = 32;\nexport const SQLITE_COPY                = 0;\nexport const SQLITE_RECURSIVE           = 33;\n\n// Authorizer return codes\nexport const SQLITE_DENY   = 1;\nexport const SQLITE_IGNORE = 2;\n\n// Limit categories\nexport const SQLITE_LIMIT_LENGTH              = 0;\nexport const SQLITE_LIMIT_SQL_LENGTH          = 1;\nexport const SQLITE_LIMIT_COLUMN              = 2;\nexport const SQLITE_LIMIT_EXPR_DEPTH          = 3;\nexport const SQLITE_LIMIT_COMPOUND_SELECT     = 4;\nexport const SQLITE_LIMIT_VDBE_OP             = 5;\nexport const SQLITE_LIMIT_FUNCTION_ARG        = 6;\nexport const SQLITE_LIMIT_ATTACHED            = 7;\nexport const SQLITE_LIMIT_LIKE_PATTERN_LENGTH = 8;\nexport const SQLITE_LIMIT_VARIABLE_NUMBER     = 9;\nexport const SQLITE_LIMIT_TRIGGER_DEPTH       = 10;\nexport const SQLITE_LIMIT_WORKER_THREADS      = 11;","// Copyright 2021 Roy T. Hashimoto. All Rights Reserved.\n\nimport * as SQLite from './sqlite-constants.js';\nexport * from './sqlite-constants.js';\n\nconst MAX_INT64 = 0x7fffffffffffffffn;\nconst MIN_INT64 = -0x8000000000000000n;\n\nexport class SQLiteError extends Error {\n  constructor(message, code) {\n    super(message);\n    this.code = code;\n  }\n}\n\nconst async = true;\n\n/**\n * Builds a Javascript API from the Emscripten module. This API is still\n * low-level and closely corresponds to the C API exported by the module,\n * but differs in some specifics like throwing exceptions on errors.\n * @param {*} Module SQLite Emscripten module\n * @returns {SQLiteAPI}\n */\nexport function Factory(Module) {\n  /** @type {SQLiteAPI} */ const sqlite3 = {};\n\n  const sqliteFreeAddress = Module._getSqliteFree();\n\n  // Allocate some space for 32-bit returned values.\n  const tmp = Module._malloc(8);\n  const tmpPtr = [tmp, tmp + 4];\n\n  // Convert a JS string to a C string. sqlite3_malloc is used to allocate\n  // memory (use sqlite3_free to deallocate).\n  function createUTF8(s) {\n    if (typeof s !== 'string') return 0;\n    const n = Module.lengthBytesUTF8(s);\n    const zts = Module._sqlite3_malloc(n + 1);\n    Module.stringToUTF8(s, zts, n + 1);\n    return zts;\n  }\n\n  /**\n   * Concatenate 32-bit numbers into a 64-bit (signed) BigInt.\n   * @param {number} lo32\n   * @param {number} hi32\n   * @returns {bigint}\n   */\n  function cvt32x2ToBigInt(lo32, hi32) {\n    return (BigInt(hi32) << 32n) | (BigInt(lo32) & 0xffffffffn);\n  }\n\n  /**\n   * Concatenate 32-bit numbers and return as number or BigInt, depending\n   * on the value.\n   * @param {number} lo32 \n   * @param {number} hi32 \n   * @returns {number|bigint}\n   */\n  const cvt32x2AsSafe = (function () {\n    const hiMax = BigInt(Number.MAX_SAFE_INTEGER) >> 32n;\n    const hiMin = BigInt(Number.MIN_SAFE_INTEGER) >> 32n;\n\n    return function (lo32, hi32) {\n      if (hi32 > hiMax || hi32 < hiMin) {\n        // Can't be expressed as a Number so use BigInt.\n        return cvt32x2ToBigInt(lo32, hi32);\n      } else {\n        // Combine the upper and lower 32-bit numbers. The complication is\n        // that lo32 is a signed integer which makes manipulating its bits\n        // a little tricky - the sign bit gets handled separately.\n        return (hi32 * 0x100000000) + (lo32 & 0x7fffffff) - (lo32 & 0x80000000);\n      }\n    }\n  })();\n\n  const databases = new Set();\n  function verifyDatabase(db) {\n    if (!databases.has(db)) {\n      throw new SQLiteError('not a database', SQLite.SQLITE_MISUSE);\n    }\n  }\n\n  const mapStmtToDB = new Map();\n  function verifyStatement(stmt) {\n    if (!mapStmtToDB.has(stmt)) {\n      throw new SQLiteError('not a statement', SQLite.SQLITE_MISUSE);\n    }\n  }\n\n  sqlite3.bind_collection = function (stmt, bindings) {\n    verifyStatement(stmt);\n    const isArray = Array.isArray(bindings);\n    const nBindings = sqlite3.bind_parameter_count(stmt);\n    for (let i = 1; i <= nBindings; ++i) {\n      const key = isArray ? i - 1 : sqlite3.bind_parameter_name(stmt, i);\n      const value = bindings[key];\n      if (value !== undefined) {\n        sqlite3.bind(stmt, i, value);\n      }\n    }\n    return SQLite.SQLITE_OK;\n  };\n\n  sqlite3.bind = function (stmt, i, value) {\n    verifyStatement(stmt);\n    switch (typeof value) {\n      case 'number':\n        if (value === (value | 0)) {\n          return sqlite3.bind_int(stmt, i, value);\n        } else {\n          return sqlite3.bind_double(stmt, i, value);\n        }\n      case 'string':\n        return sqlite3.bind_text(stmt, i, value);\n      default:\n        if (value instanceof Uint8Array || Array.isArray(value)) {\n          return sqlite3.bind_blob(stmt, i, value);\n        } else if (value === null) {\n          return sqlite3.bind_null(stmt, i);\n        } else if (typeof value === 'bigint') {\n          return sqlite3.bind_int64(stmt, i, value);\n        } else if (value === undefined) {\n          // Existing binding (or NULL) will be used.\n          return SQLite.SQLITE_NOTICE;\n        } else {\n          console.warn('unknown binding converted to null', value);\n          return sqlite3.bind_null(stmt, i);\n        }\n    }\n  };\n\n  sqlite3.bind_blob = (function () {\n    const fname = 'sqlite3_bind_blob';\n    const f = Module.cwrap(fname, ...decl('nnnnn:n'));\n    return function (stmt, i, value) {\n      verifyStatement(stmt);\n      // @ts-ignore\n      const byteLength = value.byteLength ?? value.length;\n      const ptr = Module._sqlite3_malloc(byteLength);\n      Module.HEAPU8.subarray(ptr).set(value);\n      const result = f(stmt, i, ptr, byteLength, sqliteFreeAddress);\n      // trace(fname, result);\n      return check(fname, result, mapStmtToDB.get(stmt));\n    };\n  })();\n\n  sqlite3.bind_parameter_count = (function () {\n    const fname = 'sqlite3_bind_parameter_count';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function (stmt) {\n      verifyStatement(stmt);\n      const result = f(stmt);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.bind_double = (function () {\n    const fname = 'sqlite3_bind_double';\n    const f = Module.cwrap(fname, ...decl('nnn:n'));\n    return function (stmt, i, value) {\n      verifyStatement(stmt);\n      const result = f(stmt, i, value);\n      // trace(fname, result);\n      return check(fname, result, mapStmtToDB.get(stmt));\n    };\n  })();\n\n  sqlite3.bind_int = (function () {\n    const fname = 'sqlite3_bind_int';\n    const f = Module.cwrap(fname, ...decl('nnn:n'));\n    return function (stmt, i, value) {\n      verifyStatement(stmt);\n      if (value > 0x7fffffff || value < -0x80000000) return SQLite.SQLITE_RANGE;\n\n      const result = f(stmt, i, value);\n      // trace(fname, result);\n      return check(fname, result, mapStmtToDB.get(stmt));\n    };\n  })();\n\n  sqlite3.bind_int64 = (function () {\n    const fname = 'sqlite3_bind_int64';\n    const f = Module.cwrap(fname, ...decl('nnnn:n'));\n    return function (stmt, i, value) {\n      verifyStatement(stmt);\n      if (value > MAX_INT64 || value < MIN_INT64) return SQLite.SQLITE_RANGE;\n\n      const lo32 = value & 0xffffffffn;\n      const hi32 = value >> 32n;\n      const result = f(stmt, i, Number(lo32), Number(hi32));\n      // trace(fname, result);\n      return check(fname, result, mapStmtToDB.get(stmt));\n    };\n  })();\n\n  sqlite3.bind_null = (function () {\n    const fname = 'sqlite3_bind_null';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function (stmt, i) {\n      verifyStatement(stmt);\n      const result = f(stmt, i);\n      // trace(fname, result);\n      return check(fname, result, mapStmtToDB.get(stmt));\n    };\n  })();\n\n  sqlite3.bind_parameter_name = (function () {\n    const fname = 'sqlite3_bind_parameter_name';\n    const f = Module.cwrap(fname, ...decl('n:s'));\n    return function (stmt, i) {\n      verifyStatement(stmt);\n      const result = f(stmt, i);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.bind_text = (function () {\n    const fname = 'sqlite3_bind_text';\n    const f = Module.cwrap(fname, ...decl('nnnnn:n'));\n    return function (stmt, i, value) {\n      verifyStatement(stmt);\n      const ptr = createUTF8(value);\n      const result = f(stmt, i, ptr, -1, sqliteFreeAddress);\n      // trace(fname, result);\n      return check(fname, result, mapStmtToDB.get(stmt));\n    };\n  })();\n\n  sqlite3.changes = (function () {\n    const fname = 'sqlite3_changes';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function (db) {\n      verifyDatabase(db);\n      const result = f(db);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.close = (function () {\n    const fname = 'sqlite3_close';\n    const f = Module.cwrap(fname, ...decl('n:n'), { async });\n    return async function (db) {\n      verifyDatabase(db);\n      const result = await f(db);\n      databases.delete(db);\n      return check(fname, result, db);\n    };\n  })();\n\n  sqlite3.column = function (stmt, iCol) {\n    verifyStatement(stmt);\n    const type = sqlite3.column_type(stmt, iCol);\n    switch (type) {\n      case SQLite.SQLITE_BLOB:\n        return sqlite3.column_blob(stmt, iCol);\n      case SQLite.SQLITE_FLOAT:\n        return sqlite3.column_double(stmt, iCol);\n      case SQLite.SQLITE_INTEGER:\n        const lo32 = sqlite3.column_int(stmt, iCol);\n        const hi32 = Module.getTempRet0();\n        return cvt32x2AsSafe(lo32, hi32);\n      case SQLite.SQLITE_NULL:\n        return null;\n      case SQLite.SQLITE_TEXT:\n        return sqlite3.column_text(stmt, iCol);\n      default:\n        throw new SQLiteError('unknown type', type);\n    }\n  };\n\n  sqlite3.column_blob = (function () {\n    const fname = 'sqlite3_column_blob';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function (stmt, iCol) {\n      verifyStatement(stmt);\n      const nBytes = sqlite3.column_bytes(stmt, iCol);\n      const address = f(stmt, iCol);\n      const result = Module.HEAPU8.subarray(address, address + nBytes);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.column_bytes = (function () {\n    const fname = 'sqlite3_column_bytes';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function (stmt, iCol) {\n      verifyStatement(stmt);\n      const result = f(stmt, iCol);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.column_count = (function () {\n    const fname = 'sqlite3_column_count';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function (stmt) {\n      verifyStatement(stmt);\n      const result = f(stmt);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.column_double = (function () {\n    const fname = 'sqlite3_column_double';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function (stmt, iCol) {\n      verifyStatement(stmt);\n      const result = f(stmt, iCol);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.column_int = (function () {\n    // Retrieve int64 but use only the lower 32 bits. The upper 32-bits are\n    // accessible with Module.getTempRet0().\n    const fname = 'sqlite3_column_int64';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function (stmt, iCol) {\n      verifyStatement(stmt);\n      const result = f(stmt, iCol);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.column_int64 = (function () {\n    const fname = 'sqlite3_column_int64';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function (stmt, iCol) {\n      verifyStatement(stmt);\n      const lo32 = f(stmt, iCol);\n      const hi32 = Module.getTempRet0();\n      const result = cvt32x2ToBigInt(lo32, hi32);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.column_name = (function () {\n    const fname = 'sqlite3_column_name';\n    const f = Module.cwrap(fname, ...decl('nn:s'));\n    return function (stmt, iCol) {\n      verifyStatement(stmt);\n      const result = f(stmt, iCol);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.column_names = function (stmt) {\n    const columns = [];\n    const nColumns = sqlite3.column_count(stmt);\n    for (let i = 0; i < nColumns; ++i) {\n      columns.push(sqlite3.column_name(stmt, i));\n    }\n    return columns;\n  };\n\n  sqlite3.column_text = (function () {\n    const fname = 'sqlite3_column_text';\n    const f = Module.cwrap(fname, ...decl('nn:s'));\n    return function (stmt, iCol) {\n      verifyStatement(stmt);\n      const result = f(stmt, iCol);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.column_type = (function () {\n    const fname = 'sqlite3_column_type';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function (stmt, iCol) {\n      verifyStatement(stmt);\n      const result = f(stmt, iCol);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.create_function = function (db, zFunctionName, nArg, eTextRep, pApp, xFunc, xStep, xFinal) {\n    verifyDatabase(db);\n    if (xFunc && !xStep && !xFinal) {\n      const result = Module.createFunction(db, zFunctionName, nArg, eTextRep, pApp, xFunc);\n      return check('sqlite3_create_function', result, db);\n    }\n\n    if (!xFunc && xStep && xFinal) {\n      const result = Module.createAggregate(db, zFunctionName, nArg, eTextRep, pApp, xStep, xFinal);\n      return check('sqlite3_create_function', result, db);\n    }\n\n    throw new SQLiteError('invalid function combination', SQLite.SQLITE_MISUSE);\n  };\n\n  sqlite3.create_module = function (db, zName, module, appData) {\n    verifyDatabase(db);\n    const result = Module.createModule(db, zName, module, appData);\n    return check('sqlite3_create_module', result, db);\n  };\n\n  sqlite3.data_count = (function () {\n    const fname = 'sqlite3_data_count';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function (stmt) {\n      verifyStatement(stmt);\n      const result = f(stmt);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.declare_vtab = (function () {\n    const fname = 'sqlite3_declare_vtab';\n    const f = Module.cwrap(fname, ...decl('ns:n'));\n    return function (pVTab, zSQL) {\n      const result = f(pVTab, zSQL);\n      return check('sqlite3_declare_vtab', result);\n    }\n  })();\n\n  sqlite3.exec = async function (db, sql, callback) {\n    for await (const stmt of sqlite3.statements(db, sql)) {\n      let columns;\n      while (await sqlite3.step(stmt) === SQLite.SQLITE_ROW) {\n        if (callback) {\n          columns = columns ?? sqlite3.column_names(stmt);\n          const row = sqlite3.row(stmt);\n          await callback(row, columns);\n        }\n      }\n    }\n    return SQLite.SQLITE_OK;\n  };\n\n  sqlite3.run = async function (db, sql, params) {\n    for await (const stmt of sqlite3.statements(db, sql)) {\n      if (params) {\n        sqlite3.bind_collection(stmt, params)\n      }\n      await sqlite3.step(stmt)\n    }\n    return SQLite.SQLITE_OK;\n  };\n\n  sqlite3.execWithParams = async function (db, sql, params) {\n    let columns = [];\n    const rows = []\n    for await (const stmt of sqlite3.statements(db, sql)) {\n      if (params) {\n        sqlite3.bind_collection(stmt, params)\n      }\n      while (await sqlite3.step(stmt) === SQLite.SQLITE_ROW) {\n        columns = columns.length === 0 ? sqlite3.column_names(stmt) : columns;\n        const row = sqlite3.row(stmt);\n        rows.push(row)\n        // await callback(row, columns);\n      }\n    }\n    return {\n      rows: rows,\n      columns: columns\n    }\n  };\n\n  sqlite3.executeBatch = async function (db, sqlQueries, params) {\n    try {\n      await sqlite3.run(db, `BEGIN EXCLUSIVE TRANSACTION`, null)\n      for (let i = 0; i < sqlQueries.length; i++) {\n        const bindParams = params ? params[i] : null;\n        let stmt;\n        const str = sqlite3.str_new(db, sqlQueries[i]);\n        try {\n          const sqlPointer = sqlite3.str_value(str)\n          stmt = await sqlite3.prepare_v2(db, sqlPointer)\n          if (bindParams) {\n            sqlite3.bind_collection(stmt.stmt, bindParams)\n          }\n          await sqlite3.step(stmt.stmt)\n        } finally {\n          if (stmt?.stmt) {\n            sqlite3.finalize(stmt.stmt);\n          }\n          sqlite3.str_finish(str);\n        }\n      }\n      await sqlite3.run(db, `COMMIT`, null)\n      return SQLite.SQLITE_OK;\n    } catch (error) {\n      await sqlite3.run(db, `ROLLBACK`, null)\n    }\n  };\n\n  sqlite3.finalize = (function () {\n    const fname = 'sqlite3_finalize';\n    const f = Module.cwrap(fname, ...decl('n:n'), { async });\n    return async function (stmt) {\n      if (!mapStmtToDB.has(stmt)) {\n        return SQLite.SQLITE_MISUSE;\n      }\n      const result = await f(stmt);\n\n      const db = mapStmtToDB.get(stmt);\n      mapStmtToDB.delete(stmt)\n\n      // Don't throw on error here. Typically the error has already been\n      // thrown and finalize() is part of the cleanup.\n      return result;\n    };\n  })();\n\n  sqlite3.get_autocommit = (function () {\n    const fname = 'sqlite3_get_autocommit';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function (db) {\n      const result = f(db);\n      return result;\n    };\n  })();\n\n  sqlite3.libversion = (function () {\n    const fname = 'sqlite3_libversion';\n    const f = Module.cwrap(fname, ...decl(':s'));\n    return function () {\n      const result = f();\n      return result;\n    };\n  })();\n\n  sqlite3.libversion_number = (function () {\n    const fname = 'sqlite3_libversion_number';\n    const f = Module.cwrap(fname, ...decl(':n'));\n    return function () {\n      const result = f();\n      return result;\n    };\n  })();\n\n  sqlite3.limit = (function () {\n    const fname = 'sqlite3_limit';\n    const f = Module.cwrap(fname, ...decl('nnn:n'));\n    return function (db, id, newVal) {\n      const result = f(db, id, newVal);\n      return result;\n    };\n  })();\n\n  sqlite3.open_v2 = (function () {\n    const fname = 'sqlite3_open_v2';\n    const f = Module.cwrap(fname, ...decl('snnn:n'), { async });\n    return async function (zFilename, flags, zVfs) {\n      flags = flags || SQLite.SQLITE_OPEN_CREATE | SQLite.SQLITE_OPEN_READWRITE;\n      zVfs = createUTF8(zVfs);\n      const result = await f(zFilename, tmpPtr[0], flags, zVfs);\n\n      const db = Module.getValue(tmpPtr[0], '*');\n      databases.add(db);\n      Module._sqlite3_free(zVfs);\n\n      Module.ccall('RegisterExtensionFunctions', 'void', ['number'], [db]);\n      check(fname, result);\n      return db;\n    };\n  })();\n\n  sqlite3.prepare_v2 = (function () {\n    const fname = 'sqlite3_prepare_v2';\n    const f = Module.cwrap(fname, ...decl('nnnnn:n'), { async });\n    return async function (db, sql) {\n      const result = await f(db, sql, -1, tmpPtr[0], tmpPtr[1]);\n      check(fname, result, db);\n\n      const stmt = Module.getValue(tmpPtr[0], '*');\n      if (stmt) {\n        mapStmtToDB.set(stmt, db);\n        return { stmt, sql: Module.getValue(tmpPtr[1], '*') };\n      }\n      return null;\n    };\n  })();\n\n  sqlite3.progress_handler = function (db, nProgressOps, handler, userData) {\n    verifyDatabase(db);\n    Module.progressHandler(db, nProgressOps, handler, userData);\n  };;\n\n  sqlite3.reset = (function () {\n    const fname = 'sqlite3_reset';\n    const f = Module.cwrap(fname, ...decl('n:n'), { async });\n    return async function (stmt) {\n      verifyStatement(stmt);\n      const result = await f(stmt);\n      return check(fname, result, mapStmtToDB.get(stmt));\n    };\n  })();\n\n  sqlite3.result = function (context, value) {\n    switch (typeof value) {\n      case 'number':\n        if (value === (value | 0)) {\n          sqlite3.result_int(context, value);\n        } else {\n          sqlite3.result_double(context, value);\n        }\n        break;\n      case 'string':\n        sqlite3.result_text(context, value);\n        break;\n      default:\n        if (value instanceof Uint8Array || Array.isArray(value)) {\n          sqlite3.result_blob(context, value);\n        } else if (value === null) {\n          sqlite3.result_null(context);\n        } else if (typeof value === 'bigint') {\n          return sqlite3.result_int64(context, value);\n        } else {\n          console.warn('unknown result converted to null', value);\n          sqlite3.result_null(context);\n        }\n        break;\n    }\n\n  };\n\n  sqlite3.result_blob = (function () {\n    const fname = 'sqlite3_result_blob';\n    const f = Module.cwrap(fname, ...decl('nnnn:n'));\n    return function (context, value) {\n      // @ts-ignore\n      const byteLength = value.byteLength ?? value.length;\n      const ptr = Module._sqlite3_malloc(byteLength);\n      Module.HEAPU8.subarray(ptr).set(value);\n      f(context, ptr, byteLength, sqliteFreeAddress); // void return\n    };\n  })();\n\n  sqlite3.result_double = (function () {\n    const fname = 'sqlite3_result_double';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function (context, value) {\n      f(context, value); // void return\n    };\n  })();\n\n  sqlite3.result_int = (function () {\n    const fname = 'sqlite3_result_int';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function (context, value) {\n      f(context, value); // void return\n    };\n  })();\n\n  sqlite3.result_int64 = (function () {\n    const fname = 'sqlite3_result_int64';\n    const f = Module.cwrap(fname, ...decl('nnn:n'));\n    return function (context, value) {\n      if (value > MAX_INT64 || value < MIN_INT64) return SQLite.SQLITE_RANGE;\n\n      const lo32 = value & 0xffffffffn;\n      const hi32 = value >> 32n;\n      f(context, Number(lo32), Number(hi32)); // void return\n    };\n  })();\n\n  sqlite3.result_null = (function () {\n    const fname = 'sqlite3_result_null';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function (context) {\n      f(context); // void return\n    };\n  })();\n\n  sqlite3.result_text = (function () {\n    const fname = 'sqlite3_result_text';\n    const f = Module.cwrap(fname, ...decl('nnnn:n'));\n    return function (context, value) {\n      const ptr = createUTF8(value);\n      f(context, ptr, -1, sqliteFreeAddress); // void return\n    };\n  })();\n\n  sqlite3.row = function (stmt) {\n    const row = [];\n    const nColumns = sqlite3.data_count(stmt);\n    for (let i = 0; i < nColumns; ++i) {\n      const value = sqlite3.column(stmt, i);\n\n      // Copy blob if aliasing volatile WebAssembly memory. This avoids an\n      // unnecessary copy if users monkey patch column_blob to copy.\n      // @ts-ignore\n      row.push(value?.buffer === Module.HEAPU8.buffer ? value.slice() : value);\n    }\n    return row;\n  };\n\n  sqlite3.set_authorizer = function (db, authFunction, userData) {\n    verifyDatabase(db);\n    const result = Module.setAuthorizer(db, authFunction, userData);\n    return check('sqlite3_set_authorizer', result, db);\n  };;\n\n  sqlite3.sql = (function () {\n    const fname = 'sqlite3_sql';\n    const f = Module.cwrap(fname, ...decl('n:s'));\n    return function (stmt) {\n      verifyStatement(stmt);\n      const result = f(stmt);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.statements = function (db, sql) {\n    return (async function* () {\n      const str = sqlite3.str_new(db, sql);\n      let prepared = { stmt: null, sql: sqlite3.str_value(str) };\n      try {\n        while (prepared = await sqlite3.prepare_v2(db, prepared.sql)) {\n          // console.log(sqlite3.sql(prepared.stmt));\n          yield prepared.stmt;\n          sqlite3.finalize(prepared.stmt);\n          prepared.stmt = null;\n        }\n      } finally {\n        if (prepared?.stmt) {\n          sqlite3.finalize(prepared.stmt);\n        }\n        sqlite3.str_finish(str);\n      }\n    })();\n  };\n\n  sqlite3.step = (function () {\n    const fname = 'sqlite3_step';\n    const f = Module.cwrap(fname, ...decl('n:n'), { async });\n    return async function (stmt) {\n      verifyStatement(stmt);\n      const result = await f(stmt);\n      return check(fname, result, mapStmtToDB.get(stmt), [SQLite.SQLITE_ROW, SQLite.SQLITE_DONE]);\n    };\n  })();\n\n  // Duplicate some of the SQLite dynamic string API but without\n  // calling SQLite (except for memory allocation). We need some way\n  // to transfer Javascript strings and might as well use an API\n  // that mimics the SQLite API.\n  let stringId = 0;\n  const strings = new Map();\n\n  sqlite3.str_new = function (db, s = '') {\n    const sBytes = Module.lengthBytesUTF8(s);\n    const str = stringId++ & 0xffffffff;\n    const data = {\n      offset: Module._sqlite3_malloc(sBytes + 1),\n      bytes: sBytes\n    };\n    strings.set(str, data);\n    Module.stringToUTF8(s, data.offset, data.bytes + 1);\n    return str;\n  };\n\n  sqlite3.str_appendall = function (str, s) {\n    if (!strings.has(str)) {\n      throw new SQLiteError('not a string', SQLite.SQLITE_MISUSE);\n    }\n    const data = strings.get(str);\n\n    const sBytes = Module.lengthBytesUTF8(s);\n    const newBytes = data.bytes + sBytes;\n    const newOffset = Module._sqlite3_malloc(newBytes + 1);\n    const newArray = Module.HEAPU8.subarray(newOffset, newOffset + newBytes + 1);\n    newArray.set(Module.HEAPU8.subarray(data.offset, data.offset + data.bytes));\n    Module.stringToUTF8(s, newOffset + data.bytes, sBytes + 1);\n\n    Module._sqlite3_free(data.offset);\n    data.offset = newOffset;\n    data.bytes = newBytes;\n    strings.set(str, data);\n  };\n\n  sqlite3.str_finish = function (str) {\n    if (!strings.has(str)) {\n      throw new SQLiteError('not a string', SQLite.SQLITE_MISUSE);\n    }\n    const data = strings.get(str);\n    strings.delete(str);\n    Module._sqlite3_free(data.offset);\n  };\n\n  sqlite3.str_value = function (str) {\n    if (!strings.has(str)) {\n      throw new SQLiteError('not a string', SQLite.SQLITE_MISUSE);\n    }\n    return strings.get(str).offset;\n  };\n\n  sqlite3.update_hook = function (db, xUpdate) {\n    verifyDatabase(db);\n    Module.updateHook(db, xUpdate);\n    return SQLite.SQLITE_OK;\n  }\n\n  sqlite3.user_data = function (context) {\n    return Module.getFunctionUserData(context);\n  };\n\n  sqlite3.value = function (pValue) {\n    const type = sqlite3.value_type(pValue);\n    switch (type) {\n      case SQLite.SQLITE_BLOB:\n        return sqlite3.value_blob(pValue);\n      case SQLite.SQLITE_FLOAT:\n        return sqlite3.value_double(pValue);\n      case SQLite.SQLITE_INTEGER:\n        const lo32 = sqlite3.value_int(pValue);\n        const hi32 = Module.getTempRet0();\n        return cvt32x2AsSafe(lo32, hi32);\n      case SQLite.SQLITE_NULL:\n        return null;\n      case SQLite.SQLITE_TEXT:\n        return sqlite3.value_text(pValue);\n      default:\n        throw new SQLiteError('unknown type', type);\n    }\n  };\n\n  sqlite3.value_blob = (function () {\n    const fname = 'sqlite3_value_blob';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function (pValue) {\n      const nBytes = sqlite3.value_bytes(pValue);\n      const address = f(pValue);\n      const result = Module.HEAPU8.subarray(address, address + nBytes);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.value_bytes = (function () {\n    const fname = 'sqlite3_value_bytes';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function (pValue) {\n      const result = f(pValue);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.value_double = (function () {\n    const fname = 'sqlite3_value_double';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function (pValue) {\n      const result = f(pValue);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.value_int = (function () {\n    const fname = 'sqlite3_value_int64';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function (pValue) {\n      const result = f(pValue);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.value_int64 = (function () {\n    const fname = 'sqlite3_value_int64';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function (pValue) {\n      const lo32 = f(pValue);\n      const hi32 = Module.getTempRet0();\n      const result = cvt32x2ToBigInt(lo32, hi32);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.value_text = (function () {\n    const fname = 'sqlite3_value_text';\n    const f = Module.cwrap(fname, ...decl('n:s'));\n    return function (pValue) {\n      const result = f(pValue);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.value_type = (function () {\n    const fname = 'sqlite3_value_type';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function (pValue) {\n      const result = f(pValue);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.vfs_register = function (vfs, makeDefault) {\n    const result = Module.registerVFS(vfs, makeDefault);\n    return check('sqlite3_vfs_register', result);\n  };\n\n  function check(fname, result, db = null, allowed = [SQLite.SQLITE_OK]) {\n    // trace(fname, result);\n    if (allowed.includes(result)) return result;\n    const message = db ?\n      Module.ccall('sqlite3_errmsg', 'string', ['number'], [db]) :\n      fname;\n    throw new SQLiteError(message, result);\n  }\n\n  return sqlite3;\n}\n\nfunction trace(...args) {\n  // const date = new Date();\n  // const t = date.getHours().toString().padStart(2, '0') + ':' +\n  //           date.getMinutes().toString().padStart(2, '0') + ':' +\n  //           date.getSeconds().toString().padStart(2, '0') + '.' +\n  //           date.getMilliseconds().toString().padStart(3, '0');\n  // console.debug(t, ...args);\n}\n\n// Helper function to use a more compact signature specification.\nfunction decl(s) {\n  const result = [];\n  const m = s.match(/([ns@]*):([nsv@])/);\n  switch (m[2]) {\n    case 'n': result.push('number'); break;\n    case 's': result.push('string'); break;\n    case 'v': result.push(null); break;\n  }\n\n  const args = [];\n  for (let c of m[1]) {\n    switch (c) {\n      case 'n': args.push('number'); break;\n      case 's': args.push('string'); break;\n    }\n  }\n  result.push(args);\n  return result;\n}\n","// Copyright 2022 Roy T. Hashimoto. All Rights Reserved.\nimport * as VFS from './sqlite-constants.js';\nexport * from './sqlite-constants.js';\n\n// Base class for a VFS.\nexport class Base {\n  mxPathName = 64;\n\n  /**\n   * @param {number} fileId \n   * @returns {number}\n   */\n  xClose(fileId) {\n    return VFS.SQLITE_IOERR;\n  }\n\n  /**\n   * @param {number} fileId \n   * @param {Uint8Array} pData \n   * @param {number} iOffset\n   * @returns {number}\n   */\n  xRead(fileId, pData, iOffset) {\n    return VFS.SQLITE_IOERR;\n  }\n\n  /**\n   * @param {number} fileId \n   * @param {Uint8Array} pData \n   * @param {number} iOffset\n   * @returns {number}\n   */\n  xWrite(fileId, pData, iOffset) {\n    return VFS.SQLITE_IOERR;\n  }\n\n  /**\n   * @param {number} fileId \n   * @param {number} iSize \n   * @returns {number}\n   */\n  xTruncate(fileId, iSize) {\n    return VFS.SQLITE_IOERR;\n  }\n\n  /**\n   * @param {number} fileId \n   * @param {*} flags \n   * @returns {number}\n   */\n  xSync(fileId, flags) {\n    return VFS.SQLITE_OK;\n  }\n\n  /**\n   * @param {number} fileId \n   * @param {DataView} pSize64 \n   * @returns {number}\n   */\n  xFileSize(fileId, pSize64) {\n    return VFS.SQLITE_IOERR;\n  }\n\n  /**\n   * @param {number} fileId \n   * @param {number} flags \n   * @returns {number}\n   */\n  xLock(fileId, flags) {\n    return VFS.SQLITE_OK;\n  }\n\n  /**\n   * @param {number} fileId \n   * @param {number} flags \n   * @returns {number}\n   */\n  xUnlock(fileId, flags) {\n    return VFS.SQLITE_OK;\n  }\n\n  /**\n   * @param {number} fileId \n   * @param {DataView} pResOut \n   * @returns {number}\n   */\n  xCheckReservedLock(fileId, pResOut) {\n    pResOut.setInt32(0, 0, true);\n    return VFS.SQLITE_OK;\n  }\n\n  /**\n   * @param {number} fileId \n   * @param {number} op \n   * @param {DataView} pArg \n   * @returns {number}\n   */\n  xFileControl(fileId, op, pArg) {\n    return VFS.SQLITE_NOTFOUND;\n  }\n\n  /**\n   * @param {number} fileId \n   * @returns {number}\n   */\n  xSectorSize(fileId) {\n    return 512;\n  }\n\n  /**\n   * @param {number} fileId \n   * @returns {number}\n   */\n  xDeviceCharacteristics(fileId) {\n    return 0;\n  }\n\n  /**\n   * @param {string?} name \n   * @param {number} fileId \n   * @param {number} flags \n   * @param {DataView} pOutFlags \n   * @returns {number}\n   */\n  xOpen(name, fileId, flags, pOutFlags) {\n    return VFS.SQLITE_CANTOPEN;\n  }\n\n  /**\n   * @param {string} name \n   * @param {number} syncDir \n   * @returns {number}\n   */\n  xDelete(name, syncDir) {\n    return VFS.SQLITE_IOERR;\n  }\n\n  /**\n   * @param {string} name \n   * @param {number} flags \n   * @param {DataView} pResOut \n   * @returns {number}\n   */\n  xAccess(name, flags, pResOut) {\n    return VFS.SQLITE_IOERR;\n  }\n\n  /**\n   * Handle asynchronous operation. This implementation will be overriden on\n   * registration by an Asyncify build.\n   * @param {function(): Promise<number>} f \n   * @returns {number}\n   */\n  handleAsync(f) {\n    // This default implementation deliberately does not match the\n    // declared signature. It will be used in testing VFS classes\n    // separately from SQLite. This will work acceptably for methods\n    // that simply return the handleAsync() result without using it.\n    // @ts-ignore\n    return f();\n  }\n}\n\nexport const FILE_TYPE_MASK = [\n  VFS.SQLITE_OPEN_MAIN_DB,\n  VFS.SQLITE_OPEN_MAIN_JOURNAL,\n  VFS.SQLITE_OPEN_TEMP_DB,\n  VFS.SQLITE_OPEN_TEMP_JOURNAL,\n  VFS.SQLITE_OPEN_TRANSIENT_DB,\n  VFS.SQLITE_OPEN_SUBJOURNAL,\n  VFS.SQLITE_OPEN_SUPER_JOURNAL\n].reduce((mask, element) => mask | element);","// Copyright 2022 Roy T. Hashimoto. All Rights Reserved.\nimport * as VFS from '../VFS.js';\n\nconst LOCK_TYPE_MASK =\n  VFS.SQLITE_LOCK_NONE |\n  VFS.SQLITE_LOCK_SHARED |\n  VFS.SQLITE_LOCK_RESERVED |\n  VFS.SQLITE_LOCK_PENDING |\n  VFS.SQLITE_LOCK_EXCLUSIVE;\n\nexport class WebLocksBase {\n  get state() { return this.#state; }\n  #state = VFS.SQLITE_LOCK_NONE;\n\n  timeoutMillis = 0;\n\n  /** @type {Map<string, (value: any) => void>} */ #releasers = new Map();\n  /** @type {Promise<0|5|3850>} */ #pending = Promise.resolve(0);\n\n  /**\n   * @param {number} flags \n   * @returns {Promise<0|5|3850>} SQLITE_OK, SQLITE_BUSY, SQLITE_IOERR_LOCK\n   */\n  async lock(flags) {\n    return this.#apply(this.#lock, flags);\n  }\n\n  /**\n   * @param {number} flags \n   * @returns {Promise<0|5|3850>} SQLITE_OK, SQLITE_IOERR_LOCK\n   */\n  async unlock(flags) {\n    return this.#apply(this.#unlock, flags);\n  }\n\n  /**\n   * @returns {Promise<boolean>}\n   */\n  async isSomewhereReserved() {\n    throw new Error('unimplemented');\n  }\n\n  /**\n   * \n   * @param {(targetState: number) => void} method \n   * @param {number} flags \n   */\n  async #apply(method, flags) {\n    const targetState = flags & LOCK_TYPE_MASK;\n    try {\n      // Force locks and unlocks to run sequentially. This allows not\n      // waiting for unlocks to complete.\n      const call = () => method.call(this, targetState);\n      await (this.#pending = this.#pending.then(call, call));\n      this.#state = targetState;\n      return VFS.SQLITE_OK;\n    } catch (e) {\n      if (e.name === 'AbortError') {\n        return VFS.SQLITE_BUSY;\n      }\n      console.error(e);\n      return VFS.SQLITE_IOERR_LOCK;\n    }\n  }\n\n  async #lock(targetState) {\n    if (targetState === this.#state) return VFS.SQLITE_OK;\n    switch (this.#state) {\n      case VFS.SQLITE_LOCK_NONE:\n        switch (targetState) {\n          case VFS.SQLITE_LOCK_SHARED:\n            return this._NONEtoSHARED();\n          default:\n            throw new Error(`unexpected transition ${this.#state} -> ${targetState}`);\n        }\n\n      case VFS.SQLITE_LOCK_SHARED:\n        switch (targetState) {\n          case VFS.SQLITE_LOCK_RESERVED:\n            return this._SHAREDtoRESERVED();\n          case VFS.SQLITE_LOCK_EXCLUSIVE:\n            return this._SHAREDtoEXCLUSIVE();\n          default:\n            throw new Error(`unexpected transition ${this.#state} -> ${targetState}`);\n        }\n      \n      case VFS.SQLITE_LOCK_RESERVED:\n        switch (targetState) {\n          case VFS.SQLITE_LOCK_EXCLUSIVE:\n            return this._RESERVEDtoEXCLUSIVE();\n          default:\n            throw new Error(`unexpected transition ${this.#state} -> ${targetState}`);\n        }\n\n      default:\n        throw new Error(`unexpected transition ${this.#state} -> ${targetState}`);\n    }\n  }\n\n  async #unlock(targetState) {\n    if (targetState === this.#state)  return VFS.SQLITE_OK;\n    switch (this.#state) {\n      case VFS.SQLITE_LOCK_EXCLUSIVE:\n        switch (targetState) {\n          case VFS.SQLITE_LOCK_SHARED:\n            return this._EXCLUSIVEtoSHARED();\n          case VFS.SQLITE_LOCK_NONE:\n            return this._EXCLUSIVEtoNONE();\n          default:\n            throw new Error(`unexpected transition ${this.#state} -> ${targetState}`);\n        }\n      \n      case VFS.SQLITE_LOCK_RESERVED:\n        switch (targetState) {\n          case VFS.SQLITE_LOCK_SHARED:\n            return this._RESERVEDtoSHARED();\n          case VFS.SQLITE_LOCK_NONE:\n            return this._RESERVEDtoNONE();\n          default:\n            throw new Error(`unexpected transition ${this.#state} -> ${targetState}`);\n        }\n\n      case VFS.SQLITE_LOCK_SHARED:\n        switch (targetState) {\n          case VFS.SQLITE_LOCK_NONE:\n            return this._SHAREDtoNONE();\n          default:\n            throw new Error(`unexpected transition ${this.#state} -> ${targetState}`);\n        }\n\n      default:\n        throw new Error(`unexpected transition ${this.#state} -> ${targetState}`);\n    }\n  }\n\n  async _NONEtoSHARED() {\n  }\n\n  async _SHAREDtoEXCLUSIVE() {\n    await this._SHAREDtoRESERVED();\n    await this._RESERVEDtoEXCLUSIVE();\n  }\n\n  async _SHAREDtoRESERVED() {\n  }\n\n  async _RESERVEDtoEXCLUSIVE() {\n  }\n\n  async _EXCLUSIVEtoRESERVED() {\n  }\n\n  async _EXCLUSIVEtoSHARED() {\n    await this._EXCLUSIVEtoRESERVED();\n    await this._RESERVEDtoSHARED();\n  }\n\n  async _EXCLUSIVEtoNONE() {\n    await this._EXCLUSIVEtoRESERVED();\n    await this._RESERVEDtoSHARED();\n    await this._SHAREDtoNONE();\n  }\n\n  async _RESERVEDtoSHARED() {\n  }\n\n  async _RESERVEDtoNONE() {\n    await this._RESERVEDtoSHARED();\n    await this._SHAREDtoNONE();\n  }\n\n  async _SHAREDtoNONE() {\n  }\n\n  /**\n   * @param {string} lockName \n   * @param {LockOptions} options \n   * @returns {Promise<?Lock>}\n   */\n  _acquireWebLock(lockName, options) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        await navigator.locks.request(lockName, options, lock => {\n          resolve(lock);\n          if (lock) {\n            return new Promise(release => this.#releasers.set(lockName, release));\n          }\n        });\n      } catch(e) {\n        reject(e);\n      }\n    });\n  }\n\n  /**\n   * @param {string} lockName \n   */\n  _releaseWebLock(lockName) {\n    this.#releasers.get(lockName)?.();\n    this.#releasers.delete(lockName);\n  }\n\n  /**\n   * @param {string} lockName \n   */\n  async _pollWebLock(lockName) {\n    const query = await navigator.locks.query();\n    return query.held.find(({name}) => name === lockName)?.mode;\n  }\n\n  /**\n   * @returns {?AbortSignal}\n   */\n  _getTimeoutSignal() {\n    if (this.timeoutMillis) {\n      const abortController = new AbortController();\n      setTimeout(() => abortController.abort(), this.timeoutMillis);\n      return abortController.signal;\n    }\n    return undefined;\n  }\n}\n\nexport class WebLocksExclusive extends WebLocksBase {\n  /**\n   * @param {string} name \n   */\n  constructor(name) {\n    super();\n    this._lockName = name + '-outer';\n    this._reservedName = name + '-reserved';\n  }\n\n  async isSomewhereReserved() {\n    const mode = await this._pollWebLock(this._reservedName);\n    return mode === 'exclusive';\n  }\n\n  async _NONEtoSHARED() {\n    await this._acquireWebLock(this._lockName, {\n      mode: 'exclusive',\n      signal: this._getTimeoutSignal()\n    });\n  }\n\n  async _SHAREDtoRESERVED() {\n    await this._acquireWebLock(this._reservedName, {\n      mode: 'exclusive',\n      signal: this._getTimeoutSignal()\n    });\n  }\n\n  async _RESERVEDtoSHARED() {\n    this._releaseWebLock(this._reservedName);\n  }\n\n  async _SHAREDtoNONE() {\n    this._releaseWebLock(this._lockName);\n  }\n}\n\nexport class WebLocksShared extends WebLocksBase {\n  maxRetryMillis = 1000;\n\n  /**\n   * @param {string} name \n   */\n  constructor(name) {\n    super();\n    this._outerName = name + '-outer';\n    this._innerName = name + '-inner';\n  }\n\n  async isSomewhereReserved() {\n    const mode = await this._pollWebLock(this._outerName);\n    return mode === 'exclusive';\n  }\n\n  async _NONEtoSHARED() {\n    await this._acquireWebLock(this._outerName, {\n      mode: 'shared',\n      signal: this._getTimeoutSignal()\n    });\n    await this._acquireWebLock(this._innerName, {\n      mode: 'shared',\n      signal: this._getTimeoutSignal()\n    });\n    this._releaseWebLock(this._outerName);\n  }\n\n  async _SHAREDtoRESERVED() {\n    let timeoutMillis = 1;\n    while (true) {\n      // Attempt to get the outer lock without blocking.\n      const isLocked = await this._acquireWebLock(this._outerName, {\n        mode: 'exclusive',\n        ifAvailable: true\n      });\n      if (isLocked) break;\n\n      if (await this.isSomewhereReserved()) {\n        // Someone else has a reserved lock so retry cannot succeed.\n        throw new DOMException('', 'AbortError');\n      }\n\n      await new Promise(resolve => setTimeout(resolve, timeoutMillis));\n      timeoutMillis = Math.min(2 * timeoutMillis, this.maxRetryMillis);\n    }\n    this._releaseWebLock(this._innerName);\n  }\n\n  async _RESERVEDtoEXCLUSIVE() {\n    await this._acquireWebLock(this._innerName, {\n      mode: 'exclusive',\n      signal: this._getTimeoutSignal()\n    });\n  }\n\n  async _EXCLUSIVEtoRESERVED() {\n    this._releaseWebLock(this._innerName);\n  }\n\n  async _RESERVEDtoSHARED() {\n    await this._acquireWebLock(this._innerName, { mode: 'shared' });\n    this._releaseWebLock(this._outerName);\n  }\n\n  async _SHAREDtoNONE() {\n    this._releaseWebLock(this._innerName);\n  }\n}","// Copyright 2022 Roy T. Hashimoto. All Rights Reserved.\n\n// IndexedDB transactions older than this will be replaced.\nconst MAX_TRANSACTION_LIFETIME_MILLIS = 5_000;\n\n// For debugging.\nlet nextTxId = 0;\nconst mapTxToId = new WeakMap();\nfunction log(...args) {\n  // console.debug(...args);\n}\n\n// This class manages IDBTransaction and IDBRequest instances. It tries\n// to reuse transactions to minimize transaction overhead.\nexport class IDBContext {\n  /** @type {IDBDatabase} */ #db;\n  /** @type {Promise<IDBDatabase>} */ #dbReady;\n  #txOptions;\n\n  /** @type {IDBTransaction} */ #tx = null;\n  #txTimestamp = 0;\n  #runChain = Promise.resolve();\n  #putChain = Promise.resolve();\n\n  /**\n   * @param {IDBDatabase|Promise<IDBDatabase>} idbDatabase\n   */\n  constructor(idbDatabase, txOptions = { durability: 'default' }) {\n    this.#dbReady = Promise.resolve(idbDatabase).then(db => this.#db = db);\n    this.#txOptions = txOptions;\n  }\n\n  async close() {\n    const db = this.#db ?? await this.#dbReady;\n    await this.#runChain;\n    await this.sync();\n    db.close();\n  }\n  \n  /**\n   * Run a function with the provided object stores. The function\n   * should be idempotent in case it is passed an expired transaction.\n   * @param {IDBTransactionMode} mode\n   * @param {(stores: Object.<string, ObjectStore>) => any} f \n   */\n  async run(mode, f) {\n    // Ensure that functions run sequentially.\n    const result = this.#runChain.then(() => this.#run(mode, f));\n    this.#runChain = result.catch(() => {});\n    return result;\n  }\n\n  /**\n   * @param {IDBTransactionMode} mode\n   * @param {(stores: Object.<string, ObjectStore>) => any} f \n   * @returns \n   */\n  async #run(mode, f) {\n    const db = this.#db ?? await this.#dbReady;\n    if (mode === 'readwrite' && this.#tx?.mode === 'readonly') {\n      // Mode requires a new transaction.\n      this.#tx = null;\n    } else if (performance.now() - this.#txTimestamp > MAX_TRANSACTION_LIFETIME_MILLIS) {\n      // Chrome times out transactions after 60 seconds so refresh preemptively.\n      try {\n        this.#tx?.commit();\n      } catch (e) {\n        // Explicit commit can fail but this can be ignored if it will\n        // auto-commit anyway.\n        if (e.name !== 'InvalidStateError') throw e;\n      }\n\n      // Skip to the next task to allow processing.\n      await new Promise(resolve => setTimeout(resolve));\n      this.#tx = null;\n    }\n\n    // Run the user function with a retry in case the transaction is invalid.\n    for (let i = 0; i < 2; ++i) {\n      if (!this.#tx) {\n        // @ts-ignore\n        this.#tx = db.transaction(db.objectStoreNames, mode, this.#txOptions);\n        const timestamp = this.#txTimestamp = performance.now();\n\n        // Chain the result of every transaction. If any transaction is\n        // aborted then the next sync() call will throw.\n        this.#putChain = this.#putChain.then(() => {\n          return new Promise((resolve, reject) => {\n            this.#tx.addEventListener('complete', event => {\n              resolve();\n              if (this.#tx === event.target) {\n                this.#tx = null;\n              }\n              log(`transaction ${mapTxToId.get(event.target)} complete`);\n            });\n            this.#tx.addEventListener('abort', event => {\n              console.warn('tx abort', (performance.now() - timestamp)/1000);\n              // @ts-ignore\n              const e = event.target.error;\n              reject(e);\n              if (this.#tx === event.target) {\n                this.#tx = null;\n              }\n              log(`transaction ${mapTxToId.get(event.target)} aborted`, e);\n            });\n          });\n        });\n\n        log(`new transaction ${nextTxId} ${mode}`);\n        mapTxToId.set(this.#tx, nextTxId++);\n      }\n\n      try {\n        const stores = Object.fromEntries(Array.from(db.objectStoreNames, name => {\n          return [name, new ObjectStore(this.#tx.objectStore(name))];\n        }));\n        return await f(stores);\n      } catch (e) {\n        this.#tx = null;\n        if (i) throw e;\n        // console.warn('retrying with new transaction');\n      }\n    }\n  }\n\n  async sync() {\n    // Wait until all transactions since the previous sync have committed.\n    // Throw if any transaction failed.\n    await this.#runChain;\n    await this.#putChain;\n    this.#putChain = Promise.resolve();\n  }\n}\n\n/**\n * Helper to convert IDBRequest to Promise.\n * @param {IDBRequest} request \n * @returns {Promise}\n */\nfunction wrapRequest(request) {\n  return new Promise((resolve, reject) => {\n    request.addEventListener('success', () => resolve(request.result));\n    request.addEventListener('error', () => reject(request.error));\n  });\n}\n\n// IDBObjectStore wrapper passed to IDBContext run functions.\nclass ObjectStore {\n  #objectStore;\n\n  /**\n   * @param {IDBObjectStore} objectStore \n   */\n  constructor(objectStore) {\n    this.#objectStore = objectStore;\n  }\n\n  /**\n   * @param {IDBValidKey|IDBKeyRange} query \n   * @returns {Promise}\n   */\n  get(query) {\n    log(`get ${this.#objectStore.name}`, query);\n    const request = this.#objectStore.get(query);\n    return wrapRequest(request);\n  }\n\n  /**\n   * @param {IDBValidKey|IDBKeyRange} query \n   * @param {number} [count]\n   * @returns {Promise}\n   */\n   getAll(query, count) {\n    log(`getAll ${this.#objectStore.name}`, query, count);\n    const request = this.#objectStore.getAll(query, count);\n    return wrapRequest(request);\n  }\n\n  /**\n   * @param {IDBValidKey|IDBKeyRange} query \n   * @returns {Promise<IDBValidKey>}\n   */\n  getKey(query) {\n    log(`getKey ${this.#objectStore.name}`, query);\n    const request = this.#objectStore.getKey(query);\n    return wrapRequest(request);\n  }\n\n  /**\n   * @param {IDBValidKey|IDBKeyRange} query \n   * @param {number} [count]\n   * @returns {Promise}\n   */\n   getAllKeys(query, count) {\n    log(`getAllKeys ${this.#objectStore.name}`, query, count);\n    const request = this.#objectStore.getAllKeys(query, count);\n    return wrapRequest(request);\n  }\n\n  /**\n   * @param {any} value\n   * @param {IDBValidKey} [key] \n   * @returns {Promise}\n   */\n   put(value, key) {\n    log(`put ${this.#objectStore.name}`, value, key);\n    const request = this.#objectStore.put(value, key);\n    return wrapRequest(request);\n  }\n\n  /**\n   * @param {IDBValidKey|IDBKeyRange} query \n   * @returns {Promise}\n   */\n   delete(query) {\n    log(`delete ${this.#objectStore.name}`, query);\n    const request = this.#objectStore.delete(query);\n    return wrapRequest(request);\n  }\n\n  clear() {\n    log(`clear ${this.#objectStore.name}`);\n    const request = this.#objectStore.clear();\n    return wrapRequest(request);\n  }\n\n  index(name) {\n    return new Index(this.#objectStore.index(name));\n  }\n}\n\nclass Index {\n  /** @type {IDBIndex} */ #index;\n\n  /**\n   * @param {IDBIndex} index \n   */\n   constructor(index) {\n    this.#index = index;\n  }\n\n  /**\n   * @param {IDBValidKey|IDBKeyRange} query \n   * @param {number} [count]\n   * @returns {Promise<IDBValidKey[]>}\n   */\n  getAllKeys(query, count) {\n    log(`IDBIndex.getAllKeys ${this.#index.objectStore.name}<${this.#index.name}>`, query, count);\n    const request = this.#index.getAllKeys(query, count);\n    return wrapRequest(request);\n  }\n}","// Copyright 2022 Roy T. Hashimoto. All Rights Reserved.\nimport * as VFS from '../VFS.js';\nimport { WebLocksExclusive as WebLocks } from './WebLocks.js';\nimport { IDBContext } from './IDBContext.js';\n\nconst SECTOR_SIZE = 512;\nconst MAX_TASK_MILLIS = 3000;\n\n/**\n * @typedef VFSOptions\n * @property {\"default\"|\"strict\"|\"relaxed\"} [durability]\n * @property {\"deferred\"|\"manual\"} [purge]\n * @property {number} [purgeAtLeast]\n */\n\n/** @type {VFSOptions} */\nconst DEFAULT_OPTIONS = {\n  durability: \"default\",\n  purge: \"deferred\",\n  purgeAtLeast: 16\n};\n\nfunction log(...args) {\n  // console.debug(...args);\n}\n\n/**\n * @typedef FileBlock IndexedDB object with key [path, offset, version]\n * @property {string} path\n * @property {number} offset negative of position in file\n * @property {number} version\n * @property {Uint8Array} data\n *\n * @property {number} [fileSize] Only present on block 0\n*/\n\n/**\n * @typedef OpenedFileEntry\n * @property {string} path\n * @property {number} flags\n * @property {FileBlock} block0\n * @property {boolean} isMetadataChanged\n * @property {WebLocks} locks\n * \n * @property {Set<number>} [changedPages]\n * @property {boolean} [overwrite]\n */\n\n// This sample VFS stores optionally versioned writes to IndexedDB, which\n// it uses with the SQLite xFileControl() batch atomic write feature.\nexport class IDBBatchAtomicVFS extends VFS.Base {\n  #options;\n  /** @type {Map<number, OpenedFileEntry>} */ #mapIdToFile = new Map();\n\n  /** @type {IDBContext} */ #idb;\n  /** @type {Set<string>} */ #pendingPurges = new Set();\n\n  #taskTimestamp = performance.now();\n  #pendingAsync = new Set();\n\n  constructor(idbDatabaseName = 'wa-sqlite', options = DEFAULT_OPTIONS) {\n    super();\n    this.name = idbDatabaseName;\n    this.#options = Object.assign({}, DEFAULT_OPTIONS, options);\n    this.#idb = new IDBContext(openDatabase(idbDatabaseName), {\n      durability: this.#options.durability\n    });\n  }\n\n  async close() {\n    for (const fileId of this.#mapIdToFile.keys()) {\n      await this.xClose(fileId);\n    }\n\n    await this.#idb?.close();\n    this.#idb = null;\n  }\n\n  /**\n   * @param {string?} name \n   * @param {number} fileId \n   * @param {number} flags \n   * @param {DataView} pOutFlags \n   * @returns {number}\n   */\n  xOpen(name, fileId, flags, pOutFlags) {\n    return this.handleAsync(async () => {\n      if (name === null) name = `null_${fileId}`;\n      log(`xOpen ${name} 0x${fileId.toString(16)} 0x${flags.toString(16)}`);\n\n      try {\n        // Filenames can be URLs, possibly with query parameters.\n        const url = new URL(name, 'http://localhost/');\n        /** @type {OpenedFileEntry} */ const file = {\n          path: url.pathname,\n          flags,\n          block0: null,\n          isMetadataChanged: true,\n          locks: new WebLocks(url.pathname)\n        };\n        this.#mapIdToFile.set(fileId, file);\n\n        // Read the first block, which also contains the file metadata.\n        await this.#idb.run('readwrite', async ({blocks}) => {\n          file.block0 = await blocks.get(this.#bound(file, 0));\n          if (!file.block0) {\n            if (flags & VFS.SQLITE_OPEN_CREATE) {\n              file.block0 = {\n                path: file.path,\n                offset: 0,\n                version: 0,\n                data: new Uint8Array(0),\n                fileSize: 0\n              };\n              blocks.put(file.block0);\n            } else {\n              throw new Error(`file not found: ${file.path}`);\n            }\n          }\n        });\n        pOutFlags.setInt32(0, flags & VFS.SQLITE_OPEN_READONLY, true);\n        return VFS.SQLITE_OK;\n      } catch (e) {\n        console.error(e);\n        return VFS.SQLITE_CANTOPEN;\n      }\n    });\n  }\n\n  /**\n   * @param {number} fileId \n   * @returns {number}\n   */\n  xClose(fileId) {\n    return this.handleAsync(async () => {\n      try {\n        const file = this.#mapIdToFile.get(fileId);\n        if (file) {\n          log(`xClose ${file.path}`);\n\n          this.#mapIdToFile.delete(fileId);\n          if (file.flags & VFS.SQLITE_OPEN_DELETEONCLOSE) {\n            this.#idb.run('readwrite', ({blocks}) => {\n              blocks.delete(IDBKeyRange.bound([file.path], [file.path, []]));\n            });\n          }\n        }\n        return VFS.SQLITE_OK;\n      } catch (e) {\n        console.error(e);\n        return VFS.SQLITE_IOERR;\n      }\n    });\n  }\n\n  /**\n   * @param {number} fileId \n   * @param {Uint8Array} pData \n   * @param {number} iOffset\n   * @returns {number}\n   */\n  xRead(fileId, pData, iOffset) {\n    return this.handleAsync(async () => {\n      const file = this.#mapIdToFile.get(fileId);\n      log(`xRead ${file.path} ${pData.byteLength} ${iOffset}`);\n\n      try {\n        // Read as many blocks as necessary to satisfy the read request.\n        // Usually a read fits within a single write but there is at least\n        // one case - rollback after journal spill - where reads cross\n        // write boundaries so we have to allow for that.\n        const result = await this.#idb.run('readonly', async ({blocks}) => {\n          let pDataOffset = 0;\n          while (pDataOffset < pData.byteLength) {\n            // Fetch the IndexedDB block for this file location.\n            const fileOffset = iOffset + pDataOffset;\n            /** @type {FileBlock} */\n            const block = fileOffset < file.block0.data.byteLength ?\n              file.block0 :\n              await blocks.get(this.#bound(file, -fileOffset));\n\n            if (!block || block.data.byteLength - block.offset <= fileOffset) {\n              pData.fill(0, pDataOffset);\n              return VFS.SQLITE_IOERR_SHORT_READ;\n            }\n\n            const buffer = pData.subarray(pDataOffset);\n            const blockOffset = fileOffset + block.offset;\n            const nBytesToCopy = Math.min(\n              Math.max(block.data.byteLength - blockOffset, 0), // source bytes\n              buffer.byteLength);                               // destination bytes\n            buffer.set(block.data.subarray(blockOffset, blockOffset + nBytesToCopy));\n            pDataOffset += nBytesToCopy;\n          }\n          return VFS.SQLITE_OK;\n        });\n        return result;\n      } catch (e) {\n        console.error(e);\n        return VFS.SQLITE_IOERR;\n      }\n    });\n  }\n\n  /**\n   * @param {number} fileId \n   * @param {Uint8Array} pData \n   * @param {number} iOffset\n   * @returns {number}\n   */\n  xWrite(fileId, pData, iOffset) {\n    // Handle asynchronously every MAX_TASK_MILLIS milliseconds. This is\n    // tricky because Asyncify calls asynchronous methods twice: once\n    // to initiate the call and unwinds the stack, then rewinds the\n    // stack and calls again to retrieve the completed result.\n    const rewound = this.#pendingAsync.has(fileId);\n    if (rewound || performance.now() - this.#taskTimestamp > MAX_TASK_MILLIS) {\n      const result = this.handleAsync(async () => {\n        if (this.handleAsync !== super.handleAsync) {\n          this.#pendingAsync.add(fileId);\n        }\n        await new Promise(resolve => setTimeout(resolve));\n\n        const result = this.#xWriteHelper(fileId, pData, iOffset);\n        this.#taskTimestamp = performance.now();\n        return result;\n      });\n\n      if (rewound) this.#pendingAsync.delete(fileId);\n      return result;\n    }\n    return this.#xWriteHelper(fileId, pData, iOffset);\n  }\n\n  /**\n   * @param {number} fileId \n   * @param {Uint8Array} pData \n   * @param {number} iOffset\n   * @returns {number}\n   */\n  #xWriteHelper(fileId, pData, iOffset) {\n    const file = this.#mapIdToFile.get(fileId);\n    log(`xWrite ${file.path} ${pData.byteLength} ${iOffset}`);\n\n    try {\n      // Update file size if appending.\n      const prevFileSize = file.block0.fileSize;\n      if (file.block0.fileSize < iOffset + pData.byteLength) {\n        file.block0.fileSize = iOffset + pData.byteLength;\n        file.isMetadataChanged = true;\n      }\n\n      // Convert the write directly into an IndexedDB object. Our assumption\n      // is that SQLite will only overwrite data with an xWrite of the same\n      // offset and size unless the database page size changes, except when\n      // changing database page size which is handled by #reblockIfNeeded().\n      const block = iOffset === 0 ? file.block0 : {\n        path: file.path,\n        offset: -iOffset,\n        version: file.block0.version,\n        data: null\n      };\n      block.data = pData.slice();\n\n      if (file.changedPages) {\n        // This write is part of a batch atomic write. All writes in the\n        // batch have a new version, so update the changed list to allow\n        // old versions to be eventually deleted.\n        if (prevFileSize === file.block0.fileSize) {\n          file.changedPages.add(-iOffset);\n        }\n\n        // Defer writing block 0 to IndexedDB until batch commit.\n        if (iOffset !== 0) {\n          this.#idb.run('readwrite', ({blocks}) => blocks.put(block));\n        }\n      } else {\n        // Not a batch atomic write so write through.\n        this.#idb.run('readwrite', ({blocks}) => blocks.put(block));\n      }\n\n      // Clear dirty flag if page 0 was written.\n      file.isMetadataChanged = iOffset === 0 ? false : file.isMetadataChanged;\n      return VFS.SQLITE_OK;\n    } catch (e) {\n      console.error(e);\n      return VFS.SQLITE_IOERR;\n    }\n  }\n\n  /**\n   * @param {number} fileId \n   * @param {number} iSize \n   * @returns {number}\n   */\n  xTruncate(fileId, iSize) {\n    const file = this.#mapIdToFile.get(fileId);\n    log(`xTruncate ${file.path} ${iSize}`);\n\n    try {\n      Object.assign(file.block0, {\n        fileSize: iSize,\n        data: file.block0.data.slice(0, iSize)\n      });\n\n      // Delete all blocks beyond the file size and update metadata.\n      // This is never called within a transaction.\n      const block0 = Object.assign({}, file.block0);\n      this.#idb.run('readwrite', ({blocks})=> {\n        blocks.delete(this.#bound(file, -Infinity, -iSize));\n        blocks.put(block0);\n      });\n      return VFS.SQLITE_OK;\n    } catch (e) {\n      console.error(e);\n      return VFS.SQLITE_IOERR;\n    }\n  }\n\n  /**\n   * @param {number} fileId \n   * @param {number} flags \n   * @returns {number}\n   */\n  xSync(fileId, flags) {\n    // Skip IndexedDB sync if durability is relaxed and the last\n    // sync was recent enough.\n    const rewound = this.#pendingAsync.has(fileId);\n    if (rewound || this.#options.durability !== 'relaxed' ||\n        performance.now() - this.#taskTimestamp > MAX_TASK_MILLIS) {\n      const result = this.handleAsync(async () => {\n        if (this.handleAsync !== super.handleAsync) {\n          this.#pendingAsync.add(fileId);\n        }\n\n        const result = await this.#xSyncHelper(fileId, flags);\n        this.#taskTimestamp = performance.now();\n        return result;\n      });\n\n      if (rewound) this.#pendingAsync.delete(fileId);\n      return result;\n    }\n\n    const file = this.#mapIdToFile.get(fileId);\n    log(`xSync ${file.path} ${flags}`);\n    return VFS.SQLITE_OK;\n  }\n\n  /**\n   * @param {number} fileId \n   * @param {number} flags \n   * @returns {Promise<number>}\n   */\n  async #xSyncHelper(fileId, flags) {\n    const file = this.#mapIdToFile.get(fileId);\n    log(`xSync ${file.path} ${flags}`);\n    try {\n      if (file.isMetadataChanged) {\n        // Metadata has changed so write block 0 to IndexedDB.\n        this.#idb.run('readwrite', async ({blocks}) => {\n          await blocks.put(file.block0);\n        }); \n        file.isMetadataChanged = false;\n      }\n      await this.#idb.sync();\n    } catch (e) {\n      console.error(e);\n      return VFS.SQLITE_IOERR;\n    }\n    return VFS.SQLITE_OK;\n  }\n\n  /**\n   * @param {number} fileId \n   * @param {DataView} pSize64 \n   * @returns {number}\n   */\n  xFileSize(fileId, pSize64) {\n    const file = this.#mapIdToFile.get(fileId);\n    log(`xFileSize ${file.path}`);\n\n    pSize64.setBigInt64(0, BigInt(file.block0.fileSize), true)\n    return VFS.SQLITE_OK;\n  }\n\n  /**\n   * @param {number} fileId \n   * @param {number} flags \n   * @returns {number}\n   */\n  xLock(fileId, flags) {\n    return this.handleAsync(async () => {\n      const file = this.#mapIdToFile.get(fileId);\n      log(`xLock ${file.path} ${flags}`);\n\n      try {\n        // Acquire the lock.\n        const result = await file.locks.lock(flags);\n        if (result === VFS.SQLITE_OK && file.locks.state === VFS.SQLITE_LOCK_SHARED) {\n          // Update block 0 in case another connection changed it.\n          file.block0 = await this.#idb.run('readonly', ({blocks}) => {\n            return blocks.get(this.#bound(file, 0));\n          });\n        }\n        return result;\n      } catch (e) {\n        console.error(e);\n        return VFS.SQLITE_IOERR;\n      }\n    });\n  }\n\n  /**\n   * @param {number} fileId \n   * @param {number} flags \n   * @returns {number}\n   */\n  xUnlock(fileId, flags) {\n    return this.handleAsync(async () => {\n      const file = this.#mapIdToFile.get(fileId);\n      log(`xUnlock ${file.path} ${flags}`);\n      \n      try {\n        return file.locks.unlock(flags);\n      } catch(e) {\n        console.error(e);\n        return VFS.SQLITE_IOERR;\n      }\n    });\n  }\n\n  /**\n   * @param {number} fileId \n   * @param {DataView} pResOut \n   * @returns {number}\n   */\n  xCheckReservedLock(fileId, pResOut) {\n    return this.handleAsync(async () => {\n      const file = this.#mapIdToFile.get(fileId);\n      log(`xCheckReservedLock ${file.path}`);\n\n      const isReserved = await file.locks.isSomewhereReserved();\n      pResOut.setInt32(0, isReserved ? 1 : 0, true);\n      return VFS.SQLITE_OK;\n    });\n  }\n\n  /**\n   * @param {number} fileId \n   * @returns {number}\n   */\n  xSectorSize(fileId) {\n    log('xSectorSize');\n    return SECTOR_SIZE;\n  }\n\n  /**\n   * @param {number} fileId \n   * @returns {number}\n   */\n  xDeviceCharacteristics(fileId) {\n    log('xDeviceCharacteristics');\n    return VFS.SQLITE_IOCAP_BATCH_ATOMIC |\n           VFS.SQLITE_IOCAP_SAFE_APPEND |\n           VFS.SQLITE_IOCAP_SEQUENTIAL |\n           VFS.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN;\n  }\n\n  /**\n   * @param {number} fileId \n   * @param {number} op \n   * @param {DataView} pArg \n   * @returns {number}\n   */\n  xFileControl(fileId, op, pArg) {\n    const file = this.#mapIdToFile.get(fileId);\n    log(`xFileControl ${file.path} ${op}`);\n\n    switch (op) {\n      case 11: //SQLITE_FCNTL_OVERWRITE\n        // This called on VACUUM. Set a flag so we know whether to check\n        // later if the page size changed.\n        file.overwrite = true;\n        return VFS.SQLITE_OK;\n\n      case 21: // SQLITE_FCNTL_SYNC\n        // This is called at the end of each database transaction, whether\n        // it is batch atomic or not. Handle page size changes here.\n        if (file.overwrite) {\n          // As an optimization we only check for and handle a page file\n          // changes if we know a VACUUM has been done because handleAsync()\n          // has to unwind and rewind the stack. We must be sure to follow\n          // the same conditional path in both calls.\n          try {\n            return this.handleAsync(async () => {\n              await this.#reblockIfNeeded(file);\n              return VFS.SQLITE_OK;\n            });\n          } catch (e) {\n            console.error(e);\n            return VFS.SQLITE_IOERR;\n          }\n        }\n\n        if (file.isMetadataChanged) {\n          // Metadata has changed so write block 0 to IndexedDB.\n          try {\n            this.#idb.run('readwrite', async ({blocks}) => {\n              await blocks.put(file.block0);\n            });\n            file.isMetadataChanged = false;\n          } catch (e) {\n            console.error(e);\n            return VFS.SQLITE_IOERR;\n          }\n        }\n        return VFS.SQLITE_OK;\n\n      case 22: // SQLITE_FCNTL_COMMIT_PHASETWO\n        // This is called after a commit is completed.\n        file.overwrite = false;\n        return VFS.SQLITE_OK;\n\n      case 31: // SQLITE_FCNTL_BEGIN_ATOMIC_WRITE\n        return this.handleAsync(async () => {\n          try {\n            // Prepare a new version for IndexedDB blocks.\n            file.block0.version--;\n            file.changedPages = new Set();\n\n            // Clear blocks from abandoned transactions that would conflict\n            // with the new transaction.\n            this.#idb.run('readwrite', async ({blocks}) => {\n              const keys = await blocks.index('version').getAllKeys(IDBKeyRange.bound(\n                [file.path],\n                [file.path, file.block0.version]));\n              for (const key of keys) {\n                blocks.delete(key);\n              }\n            });\n            return VFS.SQLITE_OK;\n          } catch (e) {\n            console.error(e);\n            return VFS.SQLITE_IOERR;\n          }\n        });\n\n      case 32: // SQLITE_FCNTL_COMMIT_ATOMIC_WRITE\n        try {\n          const block0 = Object.assign({}, file.block0);\n          block0.data = block0.data.slice();\n          const changedPages = file.changedPages;\n          file.changedPages = null;\n          file.isMetadataChanged = false;\n          this.#idb.run('readwrite', async ({blocks})=> {\n            // Write block 0 to commit the new version.\n            blocks.put(block0);\n\n            // Blocks to purge are saved in a special IndexedDB object with\n            // an \"index\" of \"purge\". Add pages changed by this transaction.\n            const purgeBlock = await blocks.get([file.path, 'purge', 0]) ?? {\n              path: file.path,\n              offset: 'purge',\n              version: 0,\n              data: new Map(),\n              count: 0\n            };\n\n            purgeBlock.count += changedPages.size;\n            for (const pageIndex of changedPages) {\n              purgeBlock.data.set(pageIndex, block0.version);\n            }\n\n            blocks.put(purgeBlock);\n            this.#maybePurge(file.path, purgeBlock.count);\n          });\n          return VFS.SQLITE_OK;\n        } catch (e) {\n          console.error(e);\n          return VFS.SQLITE_IOERR;\n        }\n\n      case 33: // SQLITE_FCNTL_ROLLBACK_ATOMIC_WRITE\n        return this.handleAsync(async () => {\n          try {\n            // Restore original state. Objects for the abandoned version will\n            // be left in IndexedDB to be removed by the next atomic write\n            // transaction.\n            file.changedPages = null;\n            file.isMetadataChanged = false;\n            file.block0 = await this.#idb.run('readonly', ({blocks}) => {\n              return blocks.get([file.path, 0, file.block0.version + 1]);\n            });\n            return VFS.SQLITE_OK;\n          } catch (e) {\n            console.error(e);\n            return VFS.SQLITE_IOERR;\n          }\n        });\n\n      default:\n        return VFS.SQLITE_NOTFOUND;\n    }\n  }\n\n  /**\n   * @param {string} name \n   * @param {number} flags \n   * @param {DataView} pResOut \n   * @returns {number}\n   */\n  xAccess(name, flags, pResOut) {\n    return this.handleAsync(async () => {\n      try {\n        const path = new URL(name, 'file://localhost/').pathname;\n        log(`xAccess ${path} ${flags}`);\n\n        // Check if block 0 exists.\n        const key = await this.#idb.run('readonly', ({blocks}) => {\n          return blocks.getKey(this.#bound({path}, 0));\n        });\n        pResOut.setInt32(0, key ? 1 : 0, true);\n        return VFS.SQLITE_OK;\n      } catch (e) {\n        console.error(e);\n        return VFS.SQLITE_IOERR;\n      }\n    });\n  }\n\n  /**\n   * @param {string} name \n   * @param {number} syncDir \n   * @returns {number}\n   */\n  xDelete(name, syncDir) {\n    return this.handleAsync(async () => {\n      const path = new URL(name, 'file://localhost/').pathname;\n      log(`xDelete ${path} ${syncDir}`);\n\n      try {\n        this.#idb.run('readwrite', ({blocks}) => {\n          return blocks.delete(IDBKeyRange.bound([path], [path, []]));\n        });\n        if (syncDir) {\n          await this.#idb.sync();\n        }\n        return VFS.SQLITE_OK;\n      } catch (e) {\n        console.error(e);\n        return VFS.SQLITE_IOERR;\n      }\n    });\n  }\n\n  /**\n   * Purge obsolete blocks from a database file.\n   * @param {string} path \n   */\n  async purge(path) {\n    const start = Date.now();\n    await this.#idb.run('readwrite', async ({blocks}) => {\n      const purgeBlock = await blocks.get([path, 'purge', 0]);\n      if (purgeBlock) {\n        for (const [pageOffset, version] of purgeBlock.data) {\n          blocks.delete(IDBKeyRange.bound(\n            [path, pageOffset, version],\n            [path, pageOffset, Infinity],\n            true, false));\n        }\n        await blocks.delete([path, 'purge', 0]);\n      }\n      log(`purge ${path} ${purgeBlock?.data.size ?? 0} pages in ${Date.now() - start} ms`);\n    });\n  }\n\n  /**\n   * Conditionally schedule a purge task.\n   * @param {string} path \n   * @param {number} nPages \n   */\n  #maybePurge(path, nPages) {\n    if (this.#options.purge === 'manual' ||\n        this.#pendingPurges.has(path) ||\n        nPages < this.#options.purgeAtLeast) {\n      // No purge needed.\n      return;\n    }\n    \n    if (globalThis.requestIdleCallback) {\n      globalThis.requestIdleCallback(() => {\n        this.purge(path);\n        this.#pendingPurges.delete(path)\n      });\n    } else {\n      setTimeout(() => {\n        this.purge(path);\n        this.#pendingPurges.delete(path)\n      });\n    }\n    this.#pendingPurges.add(path);\n  }\n\n  #bound(file, begin, end = 0) {\n    // Fetch newest block 0. For other blocks, use block 0 version.\n    const version = !begin || -begin < file.block0.data.length ?\n      -Infinity :\n      file.block0.version;\n    return IDBKeyRange.bound(\n      [file.path, begin, version],\n      [file.path, end, Infinity]);\n  }\n\n  // The database page size can be changed with PRAGMA page_size and VACUUM.\n  // The updated file will be overwritten with a regular transaction using\n  // the old page size. After that it will be read and written using the\n  // new page size, so the IndexedDB objects must be combined or split\n  // appropriately.\n  async #reblockIfNeeded(file) {\n    const oldPageSize = file.block0.data.length;\n    if (oldPageSize < 18) return; // no page size defined\n\n    const view = new DataView(file.block0.data.buffer, file.block0.data.byteOffset);\n    let newPageSize = view.getUint16(16);\n    if (newPageSize === 1) newPageSize = 65536;\n    if (newPageSize === oldPageSize) return; // no page size change\n\n    const maxPageSize = Math.max(oldPageSize, newPageSize);\n    const nOldPages = maxPageSize / oldPageSize;\n    const nNewPages = maxPageSize / newPageSize;\n\n    const newPageCount = view.getUint32(28);\n    const fileSize = newPageCount * newPageSize;\n\n    const version = file.block0.version;\n    await this.#idb.run('readwrite', async ({blocks}) => {\n      // When the block size changes, the entire file is rewritten. Delete\n      // all blocks older than block 0 to leave a single version at every\n      // offset.\n      const keys = await blocks.index('version').getAllKeys(IDBKeyRange.bound(\n        [file.path, version + 1],\n        [file.path, Infinity]\n      ));\n      for (const key of keys) {\n        blocks.delete(key);\n      }\n      blocks.delete([file.path, 'purge', 0]);\n\n      // Do the conversion in chunks of the larger of the page sizes.\n      for (let iOffset = 0; iOffset < fileSize; iOffset += maxPageSize) {\n        // Fetch nOldPages. They can be fetched in one request because\n        // there is now a single version in the file.\n        const oldPages = await blocks.getAll(\n          IDBKeyRange.lowerBound([file.path, -(iOffset + maxPageSize), Infinity]),\n          nOldPages);\n        for (const oldPage of oldPages) {\n          blocks.delete([oldPage.path, oldPage.offset, oldPage.version]);\n        }\n\n        // Convert to new pages.\n        if (nNewPages === 1) {\n          // Combine nOldPages old pages into a new page.\n          const buffer = new Uint8Array(newPageSize);\n          for (const oldPage of oldPages) {\n            buffer.set(oldPage.data, -(iOffset + oldPage.offset));\n          }\n          const newPage = {\n            path: file.path,\n            offset: -iOffset,\n            version,\n            data: buffer\n          };\n          if (newPage.offset === 0) {\n            newPage.fileSize = fileSize;\n            file.block0 = newPage;\n          }\n          blocks.put(newPage);\n        } else {\n          // Split an old page into nNewPages new pages.\n          const oldPage = oldPages[0];\n          for (let i = 0; i < nNewPages; ++i) {\n            const offset = -(iOffset + i * newPageSize);\n            if (-offset >= fileSize) break;\n            const newPage = {\n              path: oldPage.path,\n              offset,\n              version,\n              data: oldPage.data.subarray(i * newPageSize, (i + 1) * newPageSize)\n            }\n            if (newPage.offset === 0) {\n              newPage.fileSize = fileSize;\n              file.block0 = newPage;\n            }\n            blocks.put(newPage);\n          }\n        }\n      }\n    });\n  }\n}\n\nfunction openDatabase(idbDatabaseName) {\n  return new Promise((resolve, reject) => {\n    const request = globalThis.indexedDB.open(idbDatabaseName, 5);\n    request.addEventListener('upgradeneeded', function() {\n      const blocks = request.result.createObjectStore('blocks', {\n        keyPath: ['path', 'offset', 'version']\n      });\n      blocks.createIndex('version', ['path', 'version']);\n    });\n    request.addEventListener('success', () => {\n      resolve(request.result);\n    });\n    request.addEventListener('error', () => {\n      reject(request.error);\n    });\n  });\n}","require('@xmtp/wa-sqlite');\r\nimport SQLiteAsyncESMFactory from 'wa-sqlite/dist/wa-sqlite-async.mjs';\r\nimport * as SQLite from 'wa-sqlite';\r\nimport { IDBBatchAtomicVFS } from 'wa-sqlite/src/examples/IDBBatchAtomicVFS'; //' ./wa-sqlite/src/examples/IndexedDbVFS.js'\r\n\r\n\r\nwindow.sqlite = {\r\n    sqlite3: null,\r\n    dotNetRef: null,\r\n    test: function () {\r\n        console.log(\"Junk\");\r\n        hello();\r\n    },\r\n\r\n    /*\r\n    Open the database\r\n\r\n    */\r\n    open: async function (dbName, fileName) {\r\n        const asyncModule = await SQLiteAsyncESMFactory();\r\n        const sqlite3 = SQLite.Factory(asyncModule);\r\n        sqlite3.vfs_register(\r\n            new IDBBatchAtomicVFS(fileName));//, { durability: \"relaxed\" })\r\n        //);\r\n        const connection = await sqlite3.open_v2(\r\n            dbName,\r\n            SQLite.SQLITE_OPEN_CREATE |\r\n            SQLite.SQLITE_OPEN_READWRITE |\r\n            SQLite.SQLITE_OPEN_URI,\r\n            fileName\r\n        );\r\n        sqlite.sqlite3 = sqlite3;//store it\r\n        return connection;\r\n       // return await open2();\r\n    },\r\n\r\n    close: async function (dbConnectionNumber) {\r\n        return await sqlite.sqlite3.close(dbConnectionNumber);\r\n    },\r\n\r\n    /*Execute a sql command\r\n    Not expecting a query for rows\r\n    */\r\n   //execute: async function (dbConn, sql, parameters = null) {\r\n    execute: async function (bytes) {\r\n         \r\n        let utf8decoder = new TextDecoder();\r\n        let str = utf8decoder.decode(bytes);\r\n        const dto = JSON.parse(str);\r\n        const dbConn = dto.DbConnection;\r\n        const sql = dto.Query;\r\n        const parameters = dto.Parameters;\r\n        let result = { changes: 0, response: null, data: \"\", error: \"\" };\r\n\r\n        for await (const stmt of sqlite.sqlite3.statements(dbConn, sql)) {\r\n\r\n            if (parameters != null) {\r\n                let bindresult = await sqlite.sqlite3.bind_collection(stmt, parameters);\r\n                if (bindresult != SQLite.SQLITE_OK) {\r\n                    console.error(\"unable to prepare\");\r\n                    result.error = \"Unable to Prepare statement. Check your syntax or parameters\";\r\n                    return result;\r\n                }\r\n            }\r\n            //console.log(\"Sql: \" + sqlite.sqlite3.sql(stmt));\r\n            //console.log(\"Sql: \" + sqlite.sqlite3.expanded_sql(stmt));\r\n            let columns;\r\n            try {\r\n                while (await sqlite.sqlite3.step(stmt) === SQLite.SQLITE_ROW) {\r\n                    //columns = columns ?? sqlite.sqlite3.column_names(stmt);\r\n                    //const row = sqlite.sqlite3.row(stmt);\r\n                    //let rowObj = resultToRow(columns, row);\r\n                    //result.result.push(resultToRow(columns, row));\r\n                    \r\n                }\r\n                result.response = \"SQLITE_DONE\";\r\n                result.changes = sqlite.sqlite3.changes(dbConn);\r\n            }\r\n            catch (error) {\r\n                console.error(error.message);\r\n                result.error = error.message\r\n                //    return result;\r\n            }\r\n        }\r\n        return result;\r\n\r\n    },\r\n\r\n\r\n\r\n    /*\r\n    Execute a query.\r\n    If you have a parameterized statement, you can send a collection of parameters\r\n    dbConn:int -  The open db connection\r\n    sql:string - The sql statement(parameterized or not)\r\n    parameters:dictionary/object - contains the parameters you for your sql statement\r\n    */\r\n    query: async function (dbConn, sql, parameters = null) {\r\n        let result = { data: [], error: \"\" };\r\n        try {\r\n            for await (const stmt of sqlite.sqlite3.statements(dbConn, sql)) {\r\n                if (parameters != null) {\r\n                    let bindresult = await sqlite.sqlite3.bind_collection(stmt, parameters);\r\n                    if (bindresult != SQLite.SQLITE_OK) {\r\n                        console.error(\"unable to prepare\");\r\n                        return null;\r\n                    }\r\n                }\r\n                //Execute the statement(s)\r\n                try {\r\n                    let columns;\r\n                    while (await sqlite.sqlite3.step(stmt) === SQLite.SQLITE_ROW) {\r\n                        columns = columns ?? sqlite.sqlite3.column_names(stmt);\r\n                        const row = sqlite.sqlite3.row(stmt);\r\n                        //let rowObj = resultToRow(columns, row);\r\n                        result.data.push(resultToRow(columns, row));\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    result.error = error.message\r\n                    console.error(\"Query Error: \" + error.message);\r\n                    //return null;\r\n                }\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(\"Query Error when preparing statements: \" + error.message);\r\n            result.error = error.message;\r\n            return result;\r\n        }\r\n\r\n        return result; // SQLite.SQLITE_OK;\r\n    },\r\n    //showPrompt: async function(message) {\r\n    //    return prompt(message, 'Type anything here');\r\n    //}\r\n}\r\n\r\n//Helper Function to convert the query result to a object with properties that can we sent back to .Net as JSON and deserialized into a c# object\r\nfunction resultToRow(columns, rowData) {\r\n    let i = 0;\r\n    let tObj = {}; // new Object();\r\n    while (i < rowData.length) {\r\n        tObj[columns[i]] = rowData[i];\r\n        i++;\r\n    }\r\n    return tObj;\r\n}\r\n\r\nasync function hello() {\r\n    return await open2();\r\n    //const module = await SQLiteAsyncESMFactory();\r\n    //const sqlite3 = SQLite.Factory(module);\r\n    //const db = await sqlite3.open_v2('myDB', 0x06);\r\n    //await sqlite3.exec(db, `SELECT 'Hello, world!'`, (row, columns) => {\r\n    //    console.log(row);\r\n    //});\r\n    //await sqlite3.close(db);\r\n}\r\n\r\n\r\nasync function open2() {\r\n    const asyncModule = await SQLiteAsyncESMFactory();\r\n    const sqlite3 = SQLite.Factory(asyncModule);\r\n    sqlite3.vfs_register(\r\n        new IDBBatchAtomicVFS(\"dbName\"));//, { durability: \"relaxed\" })\r\n    //);\r\n    const connection = await sqlite3.open_v2(\r\n        \"myAppName\",\r\n        SQLite.SQLITE_OPEN_CREATE |\r\n        SQLite.SQLITE_OPEN_READWRITE |\r\n        SQLite.SQLITE_OPEN_URI,\r\n        \"dbName\"\r\n    );\r\n    return connection;\r\n}\r\n"],"names":["SQLITE_OK","SQLITE_ERROR","SQLITE_INTERNAL","SQLITE_PERM","SQLITE_ABORT","SQLITE_BUSY","SQLITE_LOCKED","SQLITE_NOMEM","SQLITE_READONLY","SQLITE_INTERRUPT","SQLITE_IOERR","SQLITE_CORRUPT","SQLITE_NOTFOUND","SQLITE_FULL","SQLITE_CANTOPEN","SQLITE_PROTOCOL","SQLITE_EMPTY","SQLITE_SCHEMA","SQLITE_TOOBIG","SQLITE_CONSTRAINT","SQLITE_MISMATCH","SQLITE_MISUSE","SQLITE_NOLFS","SQLITE_AUTH","SQLITE_FORMAT","SQLITE_RANGE","SQLITE_NOTADB","SQLITE_NOTICE","SQLITE_WARNING","SQLITE_ROW","SQLITE_DONE","SQLITE_IOERR_ACCESS","SQLITE_IOERR_CHECKRESERVEDLOCK","SQLITE_IOERR_CLOSE","SQLITE_IOERR_DATA","SQLITE_IOERR_DELETE","SQLITE_IOERR_DELETE_NOENT","SQLITE_IOERR_DIR_FSYNC","SQLITE_IOERR_FSTAT","SQLITE_IOERR_FSYNC","SQLITE_IOERR_GETTEMPPATH","SQLITE_IOERR_LOCK","SQLITE_IOERR_NOMEM","SQLITE_IOERR_READ","SQLITE_IOERR_RDLOCK","SQLITE_IOERR_SEEK","SQLITE_IOERR_SHORT_READ","SQLITE_IOERR_TRUNCATE","SQLITE_IOERR_UNLOCK","SQLITE_IOERR_VNODE","SQLITE_IOERR_WRITE","SQLITE_IOERR_BEGIN_ATOMIC","SQLITE_IOERR_COMMIT_ATOMIC","SQLITE_IOERR_ROLLBACK_ATOMIC","SQLITE_CONSTRAINT_CHECK","SQLITE_CONSTRAINT_COMMITHOOK","SQLITE_CONSTRAINT_FOREIGNKEY","SQLITE_CONSTRAINT_FUNCTION","SQLITE_CONSTRAINT_NOTNULL","SQLITE_CONSTRAINT_PINNED","SQLITE_CONSTRAINT_PRIMARYKEY","SQLITE_CONSTRAINT_ROWID","SQLITE_CONSTRAINT_TRIGGER","SQLITE_CONSTRAINT_UNIQUE","SQLITE_CONSTRAINT_VTAB","SQLITE_OPEN_READONLY","SQLITE_OPEN_READWRITE","SQLITE_OPEN_CREATE","SQLITE_OPEN_DELETEONCLOSE","SQLITE_OPEN_EXCLUSIVE","SQLITE_OPEN_AUTOPROXY","SQLITE_OPEN_URI","SQLITE_OPEN_MEMORY","SQLITE_OPEN_MAIN_DB","SQLITE_OPEN_TEMP_DB","SQLITE_OPEN_TRANSIENT_DB","SQLITE_OPEN_MAIN_JOURNAL","SQLITE_OPEN_TEMP_JOURNAL","SQLITE_OPEN_SUBJOURNAL","SQLITE_OPEN_SUPER_JOURNAL","SQLITE_OPEN_NOMUTEX","SQLITE_OPEN_FULLMUTEX","SQLITE_OPEN_SHAREDCACHE","SQLITE_OPEN_PRIVATECACHE","SQLITE_OPEN_WAL","SQLITE_OPEN_NOFOLLOW","SQLITE_LOCK_NONE","SQLITE_LOCK_SHARED","SQLITE_LOCK_RESERVED","SQLITE_LOCK_PENDING","SQLITE_LOCK_EXCLUSIVE","SQLITE_IOCAP_ATOMIC","SQLITE_IOCAP_ATOMIC512","SQLITE_IOCAP_ATOMIC1K","SQLITE_IOCAP_ATOMIC2K","SQLITE_IOCAP_ATOMIC4K","SQLITE_IOCAP_ATOMIC8K","SQLITE_IOCAP_ATOMIC16K","SQLITE_IOCAP_ATOMIC32K","SQLITE_IOCAP_ATOMIC64K","SQLITE_IOCAP_SAFE_APPEND","SQLITE_IOCAP_SEQUENTIAL","SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN","SQLITE_IOCAP_POWERSAFE_OVERWRITE","SQLITE_IOCAP_IMMUTABLE","SQLITE_IOCAP_BATCH_ATOMIC","SQLITE_ACCESS_EXISTS","SQLITE_ACCESS_READWRITE","SQLITE_ACCESS_READ","SQLITE_FCNTL_LOCKSTATE","SQLITE_FCNTL_GET_LOCKPROXYFILE","SQLITE_FCNTL_SET_LOCKPROXYFILE","SQLITE_FCNTL_LAST_ERRNO","SQLITE_FCNTL_SIZE_HINT","SQLITE_FCNTL_CHUNK_SIZE","SQLITE_FCNTL_FILE_POINTER","SQLITE_FCNTL_SYNC_OMITTED","SQLITE_FCNTL_WIN32_AV_RETRY","SQLITE_FCNTL_PERSIST_WAL","SQLITE_FCNTL_OVERWRITE","SQLITE_FCNTL_VFSNAME","SQLITE_FCNTL_POWERSAFE_OVERWRITE","SQLITE_FCNTL_PRAGMA","SQLITE_FCNTL_BUSYHANDLER","SQLITE_FCNTL_TEMPFILENAME","SQLITE_FCNTL_MMAP_SIZE","SQLITE_FCNTL_TRACE","SQLITE_FCNTL_HAS_MOVED","SQLITE_FCNTL_SYNC","SQLITE_FCNTL_COMMIT_PHASETWO","SQLITE_FCNTL_WIN32_SET_HANDLE","SQLITE_FCNTL_WAL_BLOCK","SQLITE_FCNTL_ZIPVFS","SQLITE_FCNTL_RBU","SQLITE_FCNTL_VFS_POINTER","SQLITE_FCNTL_JOURNAL_POINTER","SQLITE_FCNTL_WIN32_GET_HANDLE","SQLITE_FCNTL_PDB","SQLITE_FCNTL_BEGIN_ATOMIC_WRITE","SQLITE_FCNTL_COMMIT_ATOMIC_WRITE","SQLITE_FCNTL_ROLLBACK_ATOMIC_WRITE","SQLITE_FCNTL_LOCK_TIMEOUT","SQLITE_FCNTL_DATA_VERSION","SQLITE_FCNTL_SIZE_LIMIT","SQLITE_FCNTL_CKPT_DONE","SQLITE_FCNTL_RESERVE_BYTES","SQLITE_FCNTL_CKPT_START","SQLITE_INTEGER","SQLITE_FLOAT","SQLITE_TEXT","SQLITE_BLOB","SQLITE_NULL","SQLITE_STATIC","SQLITE_TRANSIENT","SQLITE_UTF8","SQLITE_UTF16LE","SQLITE_UTF16BE","SQLITE_UTF16","SQLITE_INDEX_CONSTRAINT_EQ","SQLITE_INDEX_CONSTRAINT_GT","SQLITE_INDEX_CONSTRAINT_LE","SQLITE_INDEX_CONSTRAINT_LT","SQLITE_INDEX_CONSTRAINT_GE","SQLITE_INDEX_CONSTRAINT_MATCH","SQLITE_INDEX_CONSTRAINT_LIKE","SQLITE_INDEX_CONSTRAINT_GLOB","SQLITE_INDEX_CONSTRAINT_REGEXP","SQLITE_INDEX_CONSTRAINT_NE","SQLITE_INDEX_CONSTRAINT_ISNOT","SQLITE_INDEX_CONSTRAINT_ISNOTNULL","SQLITE_INDEX_CONSTRAINT_ISNULL","SQLITE_INDEX_CONSTRAINT_IS","SQLITE_INDEX_CONSTRAINT_FUNCTION","SQLITE_INDEX_SCAN_UNIQUE","SQLITE_DETERMINISTIC","SQLITE_DIRECTONLY","SQLITE_SUBTYPE","SQLITE_INNOCUOUS","SQLITE_SYNC_NORMAL","SQLITE_SYNC_FULL","SQLITE_SYNC_DATAONLY","SQLITE_CREATE_INDEX","SQLITE_CREATE_TABLE","SQLITE_CREATE_TEMP_INDEX","SQLITE_CREATE_TEMP_TABLE","SQLITE_CREATE_TEMP_TRIGGER","SQLITE_CREATE_TEMP_VIEW","SQLITE_CREATE_TRIGGER","SQLITE_CREATE_VIEW","SQLITE_DELETE","SQLITE_DROP_INDEX","SQLITE_DROP_TABLE","SQLITE_DROP_TEMP_INDEX","SQLITE_DROP_TEMP_TABLE","SQLITE_DROP_TEMP_TRIGGER","SQLITE_DROP_TEMP_VIEW","SQLITE_DROP_TRIGGER","SQLITE_DROP_VIEW","SQLITE_INSERT","SQLITE_PRAGMA","SQLITE_READ","SQLITE_SELECT","SQLITE_TRANSACTION","SQLITE_UPDATE","SQLITE_ATTACH","SQLITE_DETACH","SQLITE_ALTER_TABLE","SQLITE_REINDEX","SQLITE_ANALYZE","SQLITE_CREATE_VTABLE","SQLITE_DROP_VTABLE","SQLITE_FUNCTION","SQLITE_SAVEPOINT","SQLITE_COPY","SQLITE_RECURSIVE","SQLITE_DENY","SQLITE_IGNORE","SQLITE_LIMIT_LENGTH","SQLITE_LIMIT_SQL_LENGTH","SQLITE_LIMIT_COLUMN","SQLITE_LIMIT_EXPR_DEPTH","SQLITE_LIMIT_COMPOUND_SELECT","SQLITE_LIMIT_VDBE_OP","SQLITE_LIMIT_FUNCTION_ARG","SQLITE_LIMIT_ATTACHED","SQLITE_LIMIT_LIKE_PATTERN_LENGTH","SQLITE_LIMIT_VARIABLE_NUMBER","SQLITE_LIMIT_TRIGGER_DEPTH","SQLITE_LIMIT_WORKER_THREADS","SQLITE_PREPARE_PERSISTENT","SQLITE_PREPARE_NORMALIZED","SQLITE_PREPARE_NO_VTAB","MAX_INT64","MIN_INT64","AsyncFunction","Object","getPrototypeOf","async","constructor","SQLiteError","Error","message","code","super","this","Factory","Module","sqlite3","retryOps","sqliteFreeAddress","_getSqliteFree","tmp","_malloc","tmpPtr","createUTF8","s","utf8","TextEncoder","encode","zts","_sqlite3_malloc","byteLength","HEAPU8","set","cvt32x2ToBigInt","lo32","hi32","BigInt","cvt32x2AsSafe","hiMax","Number","MAX_SAFE_INTEGER","hiMin","MIN_SAFE_INTEGER","databases","Set","verifyDatabase","db","has","mapStmtToDB","Map","verifyStatement","stmt","check","fname","result","allowed","includes","ccall","retry","f","rc","length","Promise","all","bind_collection","bindings","isArray","Array","nBindings","bind_parameter_count","i","value","bind_parameter_name","undefined","bind","bind_int","bind_double","bind_text","Uint8Array","bind_blob","bind_null","bind_int64","console","warn","cwrap","decl","ptr","subarray","get","changes","close","delete","column","iCol","type","column_type","column_blob","column_double","column_int","getTempRet0","column_text","nBytes","column_bytes","address","column_count","column_int64","column_name","column_names","columns","nColumns","push","create_function","zFunctionName","nArg","eTextRep","pApp","xFunc","xStep","xFinal","adapt","ctx","n","values","HEAP32","data_count","exec","sql","callback","statements","step","row","finalize","get_autocommit","libversion","libversion_number","limit","id","newVal","open_v2","zFilename","flags","zVfs","getValue","add","_sqlite3_free","progress_handler","nProgressOps","handler","userData","reset","context","result_int","result_double","result_text","result_blob","result_null","result_int64","buffer","slice","set_authorizer","xAuth","cvtArgs","_","iAction","p3","p4","p5","p6","UTF8ToString","options","prepare","onFinally","allocSize","pzHead","pzEnd","pStmt","pzTail","maybeFinalize","unscoped","setValue","zTail","pop","pValue","value_type","value_blob","value_double","value_int","value_text","value_bytes","value_int64","vfs_register","vfs","makeDefault","m","match","args","c","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","d","definition","key","o","defineProperty","enumerable","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","test","replace","p","b","baseURI","self","href","_scriptDir","moduleArg","aa","ba","ready","a","ja","ca","assign","da","ea","fa","ia","indexOf","substr","lastIndexOf","XMLHttpRequest","open","responseType","send","response","la","ka","print","log","t","printErr","error","thisProgram","quit","wasmBinary","noExitRuntime","WebAssembly","u","ma","na","w","y","oa","z","B","pa","qa","v","ra","HEAP8","Int8Array","HEAP16","Int16Array","HEAPU16","Uint16Array","Int32Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","sa","ta","ua","va","wa","xa","preRun","shift","unshift","Ba","D","F","C","ya","za","onAbort","RuntimeError","Aa","startsWith","locateFile","Ca","URL","Da","Fa","Ea","fetch","resolve","then","credentials","ok","arrayBuffer","catch","instantiate","Ha","name","status","Ia","I","endsWith","J","Ja","TextDecoder","K","decode","h","String","fromCharCode","Ka","splice","M","charAt","split","filter","join","La","Ma","Oa","crypto","getRandomValues","Na","Pa","arguments","TypeError","Qa","Ra","charCodeAt","Sa","Ta","Ua","input","Tb","dc","Va","Wa","node","hc","N","Ub","seekable","kc","read","zc","timestamp","Date","now","write","tc","Xa","prompt","readline","$c","Wc","Yc","Vc","Xc","Uc","ad","bd","Ya","Za","Pb","Math","max","Rb","O","Xb","Wb","createNode","dir","Vb","Eb","Sb","ec","lc","Dc","qc","oc","Cc","pc","stream","ac","Ob","file","wc","mc","nc","link","ic","xc","$a","P","ab","mode","Zc","Jc","Ac","Pc","uid","Mc","size","Fc","Oc","Ic","Gc","Hc","ceil","min","bb","cb","parent","position","fill","byteOffset","Qc","Ec","eb","fb","gb","hb","ib","Q","jb","R","path","yc","uc","bc","root","$b","kb","lb","Bc","mb","nb","cc","ob","pb","qb","rb","sb","Qb","S","ub","vb","jc","defineProperties","object","tb","Yb","Jb","wb","dd","Nc","xb","T","yb","zb","Ab","Bb","Cb","Db","Fb","Tc","logReadFiles","Gb","Hb","Ib","Rc","forEach","stack","Kb","Lb","k","l","q","U","Mb","Nb","abs","floor","getTime","NaN","USER","LOGNAME","PATH","PWD","HOME","LANG","navigator","languages","Zb","fc","gc","sc","vc","Kc","Lc","onExit","X","V","Sc","Browser","resume","Y","reject","pause","cd","ed","Z","fd","string","x","gd","array","hd","apply","setAuthorizer","createFunction","createAggregate","getFunctionUserData","updateHook","progressHandler","Proxy","DataView","A","G","E","from","createModule","handleAsync","xCreate","xConnect","xBestIndex","xDisconnect","xDestroy","xOpen","xClose","xFilter","xNext","xEof","xColumn","xRowid","xUpdate","xBegin","xSync","xCommit","xRollback","xFindFunction","xRename","map","nConstraint","aConstraint","L","H","ha","W","iColumn","op","usable","nOrderBy","aOrderBy","desc","aConstraintUsage","argvIndex","omit","idxNum","idxStr","orderByConsumed","estimatedCost","estimatedRows","idxFlags","colUsed","registerVFS","_free","xRead","xWrite","xTruncate","xFileSize","xLock","xUnlock","xCheckReservedLock","xFileControl","xSectorSize","xDeviceCharacteristics","xDelete","xAccess","kd","jd","isNaN","getSeconds","getMinutes","getHours","getDate","getMonth","getFullYear","getDay","getTimezoneOffset","j","toTimeString","performance","grow","ga","$","Fibers","monitorRunDependencies","clearInterval","instantiateWasm","Ga","instantiateStreaming","instance","_sqlite3_vfs_find","_sqlite3_prepare_v2","_sqlite3_step","_sqlite3_column_int64","_sqlite3_column_int","_sqlite3_finalize","_sqlite3_reset","_sqlite3_clear_bindings","_sqlite3_value_blob","_sqlite3_value_text","_sqlite3_value_bytes","_sqlite3_value_double","_sqlite3_value_int","_sqlite3_value_int64","_sqlite3_value_type","_sqlite3_result_blob","_sqlite3_result_double","_sqlite3_result_error","_sqlite3_result_int","_sqlite3_result_int64","_sqlite3_result_null","_sqlite3_result_text","_sqlite3_column_count","_sqlite3_data_count","_sqlite3_column_blob","_sqlite3_column_bytes","_sqlite3_column_double","_sqlite3_column_text","_sqlite3_column_type","_sqlite3_column_name","_a","_sqlite3_bind_blob","_sqlite3_bind_double","_sqlite3_bind_int","_sqlite3_bind_int64","_sqlite3_bind_null","_sqlite3_bind_text","_sqlite3_bind_parameter_count","_sqlite3_bind_parameter_name","_sqlite3_sql","_sqlite3_exec","_sqlite3_errmsg","_sqlite3_declare_vtab","_sqlite3_libversion","_sqlite3_libversion_number","_sqlite3_changes","_sqlite3_close","_sqlite3_limit","_sqlite3_open_v2","_sqlite3_get_autocommit","_RegisterExtensionFunctions","_set_authorizer","_create_function","_update_hook","_create_module","_progress_handler","_register_vfs","nd","ld","_main","md","pd","calledRun","noFSInit","stdin","stdout","stderr","onRuntimeInitialized","qd","postRun","setStatus","setTimeout","every","stringToUTF8","lengthBytesUTF8","od","preInit","noInitialRun","create_module","zName","appData","declare_vtab","pVTab","zSQL","run","params","execWithParams","rows","executeBatch","sqlQueries","bindParams","str","str_new","sqlPointer","str_value","prepare_v2","str_finish","authFunction","prepared","stringId","strings","sBytes","data","offset","bytes","str_appendall","newBytes","newOffset","update_hook","user_data","Base","mxPathName","fileId","pData","iOffset","iSize","pSize64","pResOut","setInt32","pArg","pOutFlags","syncDir","reduce","mask","element","WebLocksBase","state","timeoutMillis","lock","unlock","isSomewhereReserved","method","targetState","_NONEtoSHARED","_SHAREDtoRESERVED","_SHAREDtoEXCLUSIVE","_RESERVEDtoEXCLUSIVE","_EXCLUSIVEtoSHARED","_EXCLUSIVEtoNONE","_RESERVEDtoSHARED","_RESERVEDtoNONE","_SHAREDtoNONE","_EXCLUSIVEtoRESERVED","_acquireWebLock","lockName","locks","request","release","_releaseWebLock","_pollWebLock","query","held","find","_getTimeoutSignal","abortController","AbortController","abort","signal","WebLocksExclusive","_lockName","_reservedName","nextTxId","mapTxToId","WeakMap","IDBContext","idbDatabase","txOptions","durability","sync","commit","transaction","objectStoreNames","addEventListener","event","target","stores","fromEntries","ObjectStore","objectStore","wrapRequest","getAll","count","getKey","getAllKeys","put","clear","index","Index","DEFAULT_OPTIONS","purge","purgeAtLeast","IDBBatchAtomicVFS","idbDatabaseName","openDatabase","indexedDB","createObjectStore","keyPath","createIndex","keys","toString","url","pathname","block0","isMetadataChanged","blocks","version","fileSize","IDBKeyRange","bound","pDataOffset","fileOffset","block","blockOffset","nBytesToCopy","rewound","prevFileSize","changedPages","Infinity","setBigInt64","isReserved","overwrite","purgeBlock","pageIndex","pageOffset","nPages","requestIdleCallback","begin","end","oldPageSize","view","newPageSize","getUint16","maxPageSize","nOldPages","nNewPages","getUint32","oldPages","lowerBound","oldPage","newPage","resultToRow","rowData","tObj","sqlite","dotNetRef","hello","open2","dbName","fileName","connection","dbConnectionNumber","execute","dto","JSON","parse","dbConn","DbConnection","Query","parameters","Parameters"],"sourceRoot":""}